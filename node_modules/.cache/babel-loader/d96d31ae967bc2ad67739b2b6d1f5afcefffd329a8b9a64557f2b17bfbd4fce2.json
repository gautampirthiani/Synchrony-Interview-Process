{"ast":null,"code":"var AWS = require('./core');\n/**\n * @api private\n */\nfunction validateRegionalEndpointsFlagValue(configValue, errorOptions) {\n  if (typeof configValue !== 'string') return undefined;else if (['legacy', 'regional'].indexOf(configValue.toLowerCase()) >= 0) {\n    return configValue.toLowerCase();\n  } else {\n    throw AWS.util.error(new Error(), errorOptions);\n  }\n}\n\n/**\n * Resolve the configuration value for regional endpoint from difference sources: client\n * config, environmental variable, shared config file. Value can be case-insensitive\n * 'legacy' or 'reginal'.\n * @param originalConfig user-supplied config object to resolve\n * @param options a map of config property names from individual configuration source\n *  - env: name of environmental variable that refers to the config\n *  - sharedConfig: name of shared configuration file property that refers to the config\n *  - clientConfig: name of client configuration property that refers to the config\n *\n * @api private\n */\nfunction resolveRegionalEndpointsFlag(originalConfig, options) {\n  originalConfig = originalConfig || {};\n  //validate config value\n  var resolved;\n  if (originalConfig[options.clientConfig]) {\n    resolved = validateRegionalEndpointsFlagValue(originalConfig[options.clientConfig], {\n      code: 'InvalidConfiguration',\n      message: 'invalid \"' + options.clientConfig + '\" configuration. Expect \"legacy\" ' + ' or \"regional\". Got \"' + originalConfig[options.clientConfig] + '\".'\n    });\n    if (resolved) return resolved;\n  }\n  if (!AWS.util.isNode()) return resolved;\n  //validate environmental variable\n  if (Object.prototype.hasOwnProperty.call(process.env, options.env)) {\n    var envFlag = process.env[options.env];\n    resolved = validateRegionalEndpointsFlagValue(envFlag, {\n      code: 'InvalidEnvironmentalVariable',\n      message: 'invalid ' + options.env + ' environmental variable. Expect \"legacy\" ' + ' or \"regional\". Got \"' + process.env[options.env] + '\".'\n    });\n    if (resolved) return resolved;\n  }\n  //validate shared config file\n  var profile = {};\n  try {\n    var profiles = AWS.util.getProfilesFromSharedConfig(AWS.util.iniLoader);\n    profile = profiles[process.env.AWS_PROFILE || AWS.util.defaultProfile];\n  } catch (e) {}\n  ;\n  if (profile && Object.prototype.hasOwnProperty.call(profile, options.sharedConfig)) {\n    var fileFlag = profile[options.sharedConfig];\n    resolved = validateRegionalEndpointsFlagValue(fileFlag, {\n      code: 'InvalidConfiguration',\n      message: 'invalid ' + options.sharedConfig + ' profile config. Expect \"legacy\" ' + ' or \"regional\". Got \"' + profile[options.sharedConfig] + '\".'\n    });\n    if (resolved) return resolved;\n  }\n  return resolved;\n}\nmodule.exports = resolveRegionalEndpointsFlag;","map":{"version":3,"names":["AWS","require","validateRegionalEndpointsFlagValue","configValue","errorOptions","undefined","indexOf","toLowerCase","util","error","Error","resolveRegionalEndpointsFlag","originalConfig","options","resolved","clientConfig","code","message","isNode","Object","prototype","hasOwnProperty","call","process","env","envFlag","profile","profiles","getProfilesFromSharedConfig","iniLoader","AWS_PROFILE","defaultProfile","e","sharedConfig","fileFlag","module","exports"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/lib/config_regional_endpoint.js"],"sourcesContent":["var AWS = require('./core');\n/**\n * @api private\n */\nfunction validateRegionalEndpointsFlagValue(configValue, errorOptions) {\n  if (typeof configValue !== 'string') return undefined;\n  else if (['legacy', 'regional'].indexOf(configValue.toLowerCase()) >= 0) {\n    return configValue.toLowerCase();\n  } else {\n    throw AWS.util.error(new Error(), errorOptions);\n  }\n}\n\n/**\n * Resolve the configuration value for regional endpoint from difference sources: client\n * config, environmental variable, shared config file. Value can be case-insensitive\n * 'legacy' or 'reginal'.\n * @param originalConfig user-supplied config object to resolve\n * @param options a map of config property names from individual configuration source\n *  - env: name of environmental variable that refers to the config\n *  - sharedConfig: name of shared configuration file property that refers to the config\n *  - clientConfig: name of client configuration property that refers to the config\n *\n * @api private\n */\nfunction resolveRegionalEndpointsFlag(originalConfig, options) {\n  originalConfig = originalConfig || {};\n  //validate config value\n  var resolved;\n  if (originalConfig[options.clientConfig]) {\n    resolved = validateRegionalEndpointsFlagValue(originalConfig[options.clientConfig], {\n      code: 'InvalidConfiguration',\n      message: 'invalid \"' + options.clientConfig + '\" configuration. Expect \"legacy\" ' +\n      ' or \"regional\". Got \"' + originalConfig[options.clientConfig] + '\".'\n    });\n    if (resolved) return resolved;\n  }\n  if (!AWS.util.isNode()) return resolved;\n  //validate environmental variable\n  if (Object.prototype.hasOwnProperty.call(process.env, options.env)) {\n    var envFlag = process.env[options.env];\n    resolved = validateRegionalEndpointsFlagValue(envFlag, {\n      code: 'InvalidEnvironmentalVariable',\n      message: 'invalid ' + options.env + ' environmental variable. Expect \"legacy\" ' +\n      ' or \"regional\". Got \"' + process.env[options.env] + '\".'\n    });\n    if (resolved) return resolved;\n  }\n  //validate shared config file\n  var profile = {};\n  try {\n    var profiles = AWS.util.getProfilesFromSharedConfig(AWS.util.iniLoader);\n    profile = profiles[process.env.AWS_PROFILE || AWS.util.defaultProfile];\n  } catch (e) {};\n  if (profile && Object.prototype.hasOwnProperty.call(profile, options.sharedConfig)) {\n    var fileFlag = profile[options.sharedConfig];\n    resolved = validateRegionalEndpointsFlagValue(fileFlag, {\n      code: 'InvalidConfiguration',\n      message: 'invalid ' + options.sharedConfig + ' profile config. Expect \"legacy\" ' +\n      ' or \"regional\". Got \"' + profile[options.sharedConfig] + '\".'\n    });\n    if (resolved) return resolved;\n  }\n  return resolved;\n}\n\nmodule.exports = resolveRegionalEndpointsFlag;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}