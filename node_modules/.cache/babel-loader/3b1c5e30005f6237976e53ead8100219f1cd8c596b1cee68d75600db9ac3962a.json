{"ast":null,"code":"var AWS = require('./core');\nvar Api = require('./model/api');\nvar regionConfig = require('./region_config');\nvar inherit = AWS.util.inherit;\nvar clientCount = 0;\nvar region_utils = require('./region/utils');\n\n/**\n * The service class representing an AWS service.\n *\n * @class_abstract This class is an abstract class.\n *\n * @!attribute apiVersions\n *   @return [Array<String>] the list of API versions supported by this service.\n *   @readonly\n */\nAWS.Service = inherit({\n  /**\n   * Create a new service object with a configuration object\n   *\n   * @param config [map] a map of configuration options\n   */\n  constructor: function Service(config) {\n    if (!this.loadServiceClass) {\n      throw AWS.util.error(new Error(), 'Service must be constructed with `new\\' operator');\n    }\n    if (config) {\n      if (config.region) {\n        var region = config.region;\n        if (region_utils.isFipsRegion(region)) {\n          config.region = region_utils.getRealRegion(region);\n          config.useFipsEndpoint = true;\n        }\n        if (region_utils.isGlobalRegion(region)) {\n          config.region = region_utils.getRealRegion(region);\n        }\n      }\n      if (typeof config.useDualstack === 'boolean' && typeof config.useDualstackEndpoint !== 'boolean') {\n        config.useDualstackEndpoint = config.useDualstack;\n      }\n    }\n    var ServiceClass = this.loadServiceClass(config || {});\n    if (ServiceClass) {\n      var originalConfig = AWS.util.copy(config);\n      var svc = new ServiceClass(config);\n      Object.defineProperty(svc, '_originalConfig', {\n        get: function () {\n          return originalConfig;\n        },\n        enumerable: false,\n        configurable: true\n      });\n      svc._clientId = ++clientCount;\n      return svc;\n    }\n    this.initialize(config);\n  },\n  /**\n   * @api private\n   */\n  initialize: function initialize(config) {\n    var svcConfig = AWS.config[this.serviceIdentifier];\n    this.config = new AWS.Config(AWS.config);\n    if (svcConfig) this.config.update(svcConfig, true);\n    if (config) this.config.update(config, true);\n    this.validateService();\n    if (!this.config.endpoint) regionConfig.configureEndpoint(this);\n    this.config.endpoint = this.endpointFromTemplate(this.config.endpoint);\n    this.setEndpoint(this.config.endpoint);\n    //enable attaching listeners to service client\n    AWS.SequentialExecutor.call(this);\n    AWS.Service.addDefaultMonitoringListeners(this);\n    if ((this.config.clientSideMonitoring || AWS.Service._clientSideMonitoring) && this.publisher) {\n      var publisher = this.publisher;\n      this.addNamedListener('PUBLISH_API_CALL', 'apiCall', function PUBLISH_API_CALL(event) {\n        process.nextTick(function () {\n          publisher.eventHandler(event);\n        });\n      });\n      this.addNamedListener('PUBLISH_API_ATTEMPT', 'apiCallAttempt', function PUBLISH_API_ATTEMPT(event) {\n        process.nextTick(function () {\n          publisher.eventHandler(event);\n        });\n      });\n    }\n  },\n  /**\n   * @api private\n   */\n  validateService: function validateService() {},\n  /**\n   * @api private\n   */\n  loadServiceClass: function loadServiceClass(serviceConfig) {\n    var config = serviceConfig;\n    if (!AWS.util.isEmpty(this.api)) {\n      return null;\n    } else if (config.apiConfig) {\n      return AWS.Service.defineServiceApi(this.constructor, config.apiConfig);\n    } else if (!this.constructor.services) {\n      return null;\n    } else {\n      config = new AWS.Config(AWS.config);\n      config.update(serviceConfig, true);\n      var version = config.apiVersions[this.constructor.serviceIdentifier];\n      version = version || config.apiVersion;\n      return this.getLatestServiceClass(version);\n    }\n  },\n  /**\n   * @api private\n   */\n  getLatestServiceClass: function getLatestServiceClass(version) {\n    version = this.getLatestServiceVersion(version);\n    if (this.constructor.services[version] === null) {\n      AWS.Service.defineServiceApi(this.constructor, version);\n    }\n    return this.constructor.services[version];\n  },\n  /**\n   * @api private\n   */\n  getLatestServiceVersion: function getLatestServiceVersion(version) {\n    if (!this.constructor.services || this.constructor.services.length === 0) {\n      throw new Error('No services defined on ' + this.constructor.serviceIdentifier);\n    }\n    if (!version) {\n      version = 'latest';\n    } else if (AWS.util.isType(version, Date)) {\n      version = AWS.util.date.iso8601(version).split('T')[0];\n    }\n    if (Object.hasOwnProperty(this.constructor.services, version)) {\n      return version;\n    }\n    var keys = Object.keys(this.constructor.services).sort();\n    var selectedVersion = null;\n    for (var i = keys.length - 1; i >= 0; i--) {\n      // versions that end in \"*\" are not available on disk and can be\n      // skipped, so do not choose these as selectedVersions\n      if (keys[i][keys[i].length - 1] !== '*') {\n        selectedVersion = keys[i];\n      }\n      if (keys[i].substr(0, 10) <= version) {\n        return selectedVersion;\n      }\n    }\n    throw new Error('Could not find ' + this.constructor.serviceIdentifier + ' API to satisfy version constraint `' + version + '\\'');\n  },\n  /**\n   * @api private\n   */\n  api: {},\n  /**\n   * @api private\n   */\n  defaultRetryCount: 3,\n  /**\n   * @api private\n   */\n  customizeRequests: function customizeRequests(callback) {\n    if (!callback) {\n      this.customRequestHandler = null;\n    } else if (typeof callback === 'function') {\n      this.customRequestHandler = callback;\n    } else {\n      throw new Error('Invalid callback type \\'' + typeof callback + '\\' provided in customizeRequests');\n    }\n  },\n  /**\n   * Calls an operation on a service with the given input parameters.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeRequest: function makeRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = null;\n    }\n    params = params || {};\n    if (this.config.params) {\n      // copy only toplevel bound params\n      var rules = this.api.operations[operation];\n      if (rules) {\n        params = AWS.util.copy(params);\n        AWS.util.each(this.config.params, function (key, value) {\n          if (rules.input.members[key]) {\n            if (params[key] === undefined || params[key] === null) {\n              params[key] = value;\n            }\n          }\n        });\n      }\n    }\n    var request = new AWS.Request(this, operation, params);\n    this.addAllRequestListeners(request);\n    this.attachMonitoringEmitter(request);\n    if (callback) request.send(callback);\n    return request;\n  },\n  /**\n   * Calls an operation on a service with the given input parameters, without\n   * any authentication data. This method is useful for \"public\" API operations.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeUnauthenticatedRequest: function makeUnauthenticatedRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = {};\n    }\n    var request = this.makeRequest(operation, params).toUnauthenticated();\n    return callback ? request.send(callback) : request;\n  },\n  /**\n   * Waits for a given state\n   *\n   * @param state [String] the state on the service to wait for\n   * @param params [map] a map of parameters to pass with each request\n   * @option params $waiter [map] a map of configuration options for the waiter\n   * @option params $waiter.delay [Number] The number of seconds to wait between\n   *                                       requests\n   * @option params $waiter.maxAttempts [Number] The maximum number of requests\n   *                                             to send while waiting\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  waitFor: function waitFor(state, params, callback) {\n    var waiter = new AWS.ResourceWaiter(this, state);\n    return waiter.wait(params, callback);\n  },\n  /**\n   * @api private\n   */\n  addAllRequestListeners: function addAllRequestListeners(request) {\n    var list = [AWS.events, AWS.EventListeners.Core, this.serviceInterface(), AWS.EventListeners.CorePost];\n    for (var i = 0; i < list.length; i++) {\n      if (list[i]) request.addListeners(list[i]);\n    }\n\n    // disable parameter validation\n    if (!this.config.paramValidation) {\n      request.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    }\n    if (this.config.logger) {\n      // add logging events\n      request.addListeners(AWS.EventListeners.Logger);\n    }\n    this.setupRequestListeners(request);\n    // call prototype's customRequestHandler\n    if (typeof this.constructor.prototype.customRequestHandler === 'function') {\n      this.constructor.prototype.customRequestHandler(request);\n    }\n    // call instance's customRequestHandler\n    if (Object.prototype.hasOwnProperty.call(this, 'customRequestHandler') && typeof this.customRequestHandler === 'function') {\n      this.customRequestHandler(request);\n    }\n  },\n  /**\n   * Event recording metrics for a whole API call.\n   * @returns {object} a subset of api call metrics\n   * @api private\n   */\n  apiCallEvent: function apiCallEvent(request) {\n    var api = request.service.api.operations[request.operation];\n    var monitoringEvent = {\n      Type: 'ApiCall',\n      Api: api ? api.name : request.operation,\n      Version: 1,\n      Service: request.service.api.serviceId || request.service.api.endpointPrefix,\n      Region: request.httpRequest.region,\n      MaxRetriesExceeded: 0,\n      UserAgent: request.httpRequest.getUserAgent()\n    };\n    var response = request.response;\n    if (response.httpResponse.statusCode) {\n      monitoringEvent.FinalHttpStatusCode = response.httpResponse.statusCode;\n    }\n    if (response.error) {\n      var error = response.error;\n      var statusCode = response.httpResponse.statusCode;\n      if (statusCode > 299) {\n        if (error.code) monitoringEvent.FinalAwsException = error.code;\n        if (error.message) monitoringEvent.FinalAwsExceptionMessage = error.message;\n      } else {\n        if (error.code || error.name) monitoringEvent.FinalSdkException = error.code || error.name;\n        if (error.message) monitoringEvent.FinalSdkExceptionMessage = error.message;\n      }\n    }\n    return monitoringEvent;\n  },\n  /**\n   * Event recording metrics for an API call attempt.\n   * @returns {object} a subset of api call attempt metrics\n   * @api private\n   */\n  apiAttemptEvent: function apiAttemptEvent(request) {\n    var api = request.service.api.operations[request.operation];\n    var monitoringEvent = {\n      Type: 'ApiCallAttempt',\n      Api: api ? api.name : request.operation,\n      Version: 1,\n      Service: request.service.api.serviceId || request.service.api.endpointPrefix,\n      Fqdn: request.httpRequest.endpoint.hostname,\n      UserAgent: request.httpRequest.getUserAgent()\n    };\n    var response = request.response;\n    if (response.httpResponse.statusCode) {\n      monitoringEvent.HttpStatusCode = response.httpResponse.statusCode;\n    }\n    if (!request._unAuthenticated && request.service.config.credentials && request.service.config.credentials.accessKeyId) {\n      monitoringEvent.AccessKey = request.service.config.credentials.accessKeyId;\n    }\n    if (!response.httpResponse.headers) return monitoringEvent;\n    if (request.httpRequest.headers['x-amz-security-token']) {\n      monitoringEvent.SessionToken = request.httpRequest.headers['x-amz-security-token'];\n    }\n    if (response.httpResponse.headers['x-amzn-requestid']) {\n      monitoringEvent.XAmznRequestId = response.httpResponse.headers['x-amzn-requestid'];\n    }\n    if (response.httpResponse.headers['x-amz-request-id']) {\n      monitoringEvent.XAmzRequestId = response.httpResponse.headers['x-amz-request-id'];\n    }\n    if (response.httpResponse.headers['x-amz-id-2']) {\n      monitoringEvent.XAmzId2 = response.httpResponse.headers['x-amz-id-2'];\n    }\n    return monitoringEvent;\n  },\n  /**\n   * Add metrics of failed request.\n   * @api private\n   */\n  attemptFailEvent: function attemptFailEvent(request) {\n    var monitoringEvent = this.apiAttemptEvent(request);\n    var response = request.response;\n    var error = response.error;\n    if (response.httpResponse.statusCode > 299) {\n      if (error.code) monitoringEvent.AwsException = error.code;\n      if (error.message) monitoringEvent.AwsExceptionMessage = error.message;\n    } else {\n      if (error.code || error.name) monitoringEvent.SdkException = error.code || error.name;\n      if (error.message) monitoringEvent.SdkExceptionMessage = error.message;\n    }\n    return monitoringEvent;\n  },\n  /**\n   * Attach listeners to request object to fetch metrics of each request\n   * and emit data object through \\'ApiCall\\' and \\'ApiCallAttempt\\' events.\n   * @api private\n   */\n  attachMonitoringEmitter: function attachMonitoringEmitter(request) {\n    var attemptTimestamp; //timestamp marking the beginning of a request attempt\n    var attemptStartRealTime; //Start time of request attempt. Used to calculating attemptLatency\n    var attemptLatency; //latency from request sent out to http response reaching SDK\n    var callStartRealTime; //Start time of API call. Used to calculating API call latency\n    var attemptCount = 0; //request.retryCount is not reliable here\n    var region; //region cache region for each attempt since it can be updated in plase (e.g. s3)\n    var callTimestamp; //timestamp when the request is created\n    var self = this;\n    var addToHead = true;\n    request.on('validate', function () {\n      callStartRealTime = AWS.util.realClock.now();\n      callTimestamp = Date.now();\n    }, addToHead);\n    request.on('sign', function () {\n      attemptStartRealTime = AWS.util.realClock.now();\n      attemptTimestamp = Date.now();\n      region = request.httpRequest.region;\n      attemptCount++;\n    }, addToHead);\n    request.on('validateResponse', function () {\n      attemptLatency = Math.round(AWS.util.realClock.now() - attemptStartRealTime);\n    });\n    request.addNamedListener('API_CALL_ATTEMPT', 'success', function API_CALL_ATTEMPT() {\n      var apiAttemptEvent = self.apiAttemptEvent(request);\n      apiAttemptEvent.Timestamp = attemptTimestamp;\n      apiAttemptEvent.AttemptLatency = attemptLatency >= 0 ? attemptLatency : 0;\n      apiAttemptEvent.Region = region;\n      self.emit('apiCallAttempt', [apiAttemptEvent]);\n    });\n    request.addNamedListener('API_CALL_ATTEMPT_RETRY', 'retry', function API_CALL_ATTEMPT_RETRY() {\n      var apiAttemptEvent = self.attemptFailEvent(request);\n      apiAttemptEvent.Timestamp = attemptTimestamp;\n      //attemptLatency may not be available if fail before response\n      attemptLatency = attemptLatency || Math.round(AWS.util.realClock.now() - attemptStartRealTime);\n      apiAttemptEvent.AttemptLatency = attemptLatency >= 0 ? attemptLatency : 0;\n      apiAttemptEvent.Region = region;\n      self.emit('apiCallAttempt', [apiAttemptEvent]);\n    });\n    request.addNamedListener('API_CALL', 'complete', function API_CALL() {\n      var apiCallEvent = self.apiCallEvent(request);\n      apiCallEvent.AttemptCount = attemptCount;\n      if (apiCallEvent.AttemptCount <= 0) return;\n      apiCallEvent.Timestamp = callTimestamp;\n      var latency = Math.round(AWS.util.realClock.now() - callStartRealTime);\n      apiCallEvent.Latency = latency >= 0 ? latency : 0;\n      var response = request.response;\n      if (response.error && response.error.retryable && typeof response.retryCount === 'number' && typeof response.maxRetries === 'number' && response.retryCount >= response.maxRetries) {\n        apiCallEvent.MaxRetriesExceeded = 1;\n      }\n      self.emit('apiCall', [apiCallEvent]);\n    });\n  },\n  /**\n   * Override this method to setup any custom request listeners for each\n   * new request to the service.\n   *\n   * @method_abstract This is an abstract method.\n   */\n  setupRequestListeners: function setupRequestListeners(request) {},\n  /**\n   * Gets the signing name for a given request\n   * @api private\n   */\n  getSigningName: function getSigningName() {\n    return this.api.signingName || this.api.endpointPrefix;\n  },\n  /**\n   * Gets the signer class for a given request\n   * @api private\n   */\n  getSignerClass: function getSignerClass(request) {\n    var version;\n    // get operation authtype if present\n    var operation = null;\n    var authtype = '';\n    if (request) {\n      var operations = request.service.api.operations || {};\n      operation = operations[request.operation] || null;\n      authtype = operation ? operation.authtype : '';\n    }\n    if (this.config.signatureVersion) {\n      version = this.config.signatureVersion;\n    } else if (authtype === 'v4' || authtype === 'v4-unsigned-body') {\n      version = 'v4';\n    } else if (authtype === 'bearer') {\n      version = 'bearer';\n    } else {\n      version = this.api.signatureVersion;\n    }\n    return AWS.Signers.RequestSigner.getVersion(version);\n  },\n  /**\n   * @api private\n   */\n  serviceInterface: function serviceInterface() {\n    switch (this.api.protocol) {\n      case 'ec2':\n        return AWS.EventListeners.Query;\n      case 'query':\n        return AWS.EventListeners.Query;\n      case 'json':\n        return AWS.EventListeners.Json;\n      case 'rest-json':\n        return AWS.EventListeners.RestJson;\n      case 'rest-xml':\n        return AWS.EventListeners.RestXml;\n    }\n    if (this.api.protocol) {\n      throw new Error('Invalid service `protocol\\' ' + this.api.protocol + ' in API config');\n    }\n  },\n  /**\n   * @api private\n   */\n  successfulResponse: function successfulResponse(resp) {\n    return resp.httpResponse.statusCode < 300;\n  },\n  /**\n   * How many times a failed request should be retried before giving up.\n   * the defaultRetryCount can be overriden by service classes.\n   *\n   * @api private\n   */\n  numRetries: function numRetries() {\n    if (this.config.maxRetries !== undefined) {\n      return this.config.maxRetries;\n    } else {\n      return this.defaultRetryCount;\n    }\n  },\n  /**\n   * @api private\n   */\n  retryDelays: function retryDelays(retryCount, err) {\n    return AWS.util.calculateRetryDelay(retryCount, this.config.retryDelayOptions, err);\n  },\n  /**\n   * @api private\n   */\n  retryableError: function retryableError(error) {\n    if (this.timeoutError(error)) return true;\n    if (this.networkingError(error)) return true;\n    if (this.expiredCredentialsError(error)) return true;\n    if (this.throttledError(error)) return true;\n    if (error.statusCode >= 500) return true;\n    return false;\n  },\n  /**\n   * @api private\n   */\n  networkingError: function networkingError(error) {\n    return error.code === 'NetworkingError';\n  },\n  /**\n   * @api private\n   */\n  timeoutError: function timeoutError(error) {\n    return error.code === 'TimeoutError';\n  },\n  /**\n   * @api private\n   */\n  expiredCredentialsError: function expiredCredentialsError(error) {\n    // TODO : this only handles *one* of the expired credential codes\n    return error.code === 'ExpiredTokenException';\n  },\n  /**\n   * @api private\n   */\n  clockSkewError: function clockSkewError(error) {\n    switch (error.code) {\n      case 'RequestTimeTooSkewed':\n      case 'RequestExpired':\n      case 'InvalidSignatureException':\n      case 'SignatureDoesNotMatch':\n      case 'AuthFailure':\n      case 'RequestInTheFuture':\n        return true;\n      default:\n        return false;\n    }\n  },\n  /**\n   * @api private\n   */\n  getSkewCorrectedDate: function getSkewCorrectedDate() {\n    return new Date(Date.now() + this.config.systemClockOffset);\n  },\n  /**\n   * @api private\n   */\n  applyClockOffset: function applyClockOffset(newServerTime) {\n    if (newServerTime) {\n      this.config.systemClockOffset = newServerTime - Date.now();\n    }\n  },\n  /**\n   * @api private\n   */\n  isClockSkewed: function isClockSkewed(newServerTime) {\n    if (newServerTime) {\n      return Math.abs(this.getSkewCorrectedDate().getTime() - newServerTime) >= 300000;\n    }\n  },\n  /**\n   * @api private\n   */\n  throttledError: function throttledError(error) {\n    // this logic varies between services\n    if (error.statusCode === 429) return true;\n    switch (error.code) {\n      case 'ProvisionedThroughputExceededException':\n      case 'Throttling':\n      case 'ThrottlingException':\n      case 'RequestLimitExceeded':\n      case 'RequestThrottled':\n      case 'RequestThrottledException':\n      case 'TooManyRequestsException':\n      case 'TransactionInProgressException': //dynamodb\n      case 'EC2ThrottledException':\n        return true;\n      default:\n        return false;\n    }\n  },\n  /**\n   * @api private\n   */\n  endpointFromTemplate: function endpointFromTemplate(endpoint) {\n    if (typeof endpoint !== 'string') return endpoint;\n    var e = endpoint;\n    e = e.replace(/\\{service\\}/g, this.api.endpointPrefix);\n    e = e.replace(/\\{region\\}/g, this.config.region);\n    e = e.replace(/\\{scheme\\}/g, this.config.sslEnabled ? 'https' : 'http');\n    return e;\n  },\n  /**\n   * @api private\n   */\n  setEndpoint: function setEndpoint(endpoint) {\n    this.endpoint = new AWS.Endpoint(endpoint, this.config);\n  },\n  /**\n   * @api private\n   */\n  paginationConfig: function paginationConfig(operation, throwException) {\n    var paginator = this.api.operations[operation].paginator;\n    if (!paginator) {\n      if (throwException) {\n        var e = new Error();\n        throw AWS.util.error(e, 'No pagination configuration for ' + operation);\n      }\n      return null;\n    }\n    return paginator;\n  }\n});\nAWS.util.update(AWS.Service, {\n  /**\n   * Adds one method for each operation described in the api configuration\n   *\n   * @api private\n   */\n  defineMethods: function defineMethods(svc) {\n    AWS.util.each(svc.prototype.api.operations, function iterator(method) {\n      if (svc.prototype[method]) return;\n      var operation = svc.prototype.api.operations[method];\n      if (operation.authtype === 'none') {\n        svc.prototype[method] = function (params, callback) {\n          return this.makeUnauthenticatedRequest(method, params, callback);\n        };\n      } else {\n        svc.prototype[method] = function (params, callback) {\n          return this.makeRequest(method, params, callback);\n        };\n      }\n    });\n  },\n  /**\n   * Defines a new Service class using a service identifier and list of versions\n   * including an optional set of features (functions) to apply to the class\n   * prototype.\n   *\n   * @param serviceIdentifier [String] the identifier for the service\n   * @param versions [Array<String>] a list of versions that work with this\n   *   service\n   * @param features [Object] an object to attach to the prototype\n   * @return [Class<Service>] the service class defined by this function.\n   */\n  defineService: function defineService(serviceIdentifier, versions, features) {\n    AWS.Service._serviceMap[serviceIdentifier] = true;\n    if (!Array.isArray(versions)) {\n      features = versions;\n      versions = [];\n    }\n    var svc = inherit(AWS.Service, features || {});\n    if (typeof serviceIdentifier === 'string') {\n      AWS.Service.addVersions(svc, versions);\n      var identifier = svc.serviceIdentifier || serviceIdentifier;\n      svc.serviceIdentifier = identifier;\n    } else {\n      // defineService called with an API\n      svc.prototype.api = serviceIdentifier;\n      AWS.Service.defineMethods(svc);\n    }\n    AWS.SequentialExecutor.call(this.prototype);\n    //util.clientSideMonitoring is only available in node\n    if (!this.prototype.publisher && AWS.util.clientSideMonitoring) {\n      var Publisher = AWS.util.clientSideMonitoring.Publisher;\n      var configProvider = AWS.util.clientSideMonitoring.configProvider;\n      var publisherConfig = configProvider();\n      this.prototype.publisher = new Publisher(publisherConfig);\n      if (publisherConfig.enabled) {\n        //if csm is enabled in environment, SDK should send all metrics\n        AWS.Service._clientSideMonitoring = true;\n      }\n    }\n    AWS.SequentialExecutor.call(svc.prototype);\n    AWS.Service.addDefaultMonitoringListeners(svc.prototype);\n    return svc;\n  },\n  /**\n   * @api private\n   */\n  addVersions: function addVersions(svc, versions) {\n    if (!Array.isArray(versions)) versions = [versions];\n    svc.services = svc.services || {};\n    for (var i = 0; i < versions.length; i++) {\n      if (svc.services[versions[i]] === undefined) {\n        svc.services[versions[i]] = null;\n      }\n    }\n    svc.apiVersions = Object.keys(svc.services).sort();\n  },\n  /**\n   * @api private\n   */\n  defineServiceApi: function defineServiceApi(superclass, version, apiConfig) {\n    var svc = inherit(superclass, {\n      serviceIdentifier: superclass.serviceIdentifier\n    });\n    function setApi(api) {\n      if (api.isApi) {\n        svc.prototype.api = api;\n      } else {\n        svc.prototype.api = new Api(api, {\n          serviceIdentifier: superclass.serviceIdentifier\n        });\n      }\n    }\n    if (typeof version === 'string') {\n      if (apiConfig) {\n        setApi(apiConfig);\n      } else {\n        try {\n          setApi(AWS.apiLoader(superclass.serviceIdentifier, version));\n        } catch (err) {\n          throw AWS.util.error(err, {\n            message: 'Could not find API configuration ' + superclass.serviceIdentifier + '-' + version\n          });\n        }\n      }\n      if (!Object.prototype.hasOwnProperty.call(superclass.services, version)) {\n        superclass.apiVersions = superclass.apiVersions.concat(version).sort();\n      }\n      superclass.services[version] = svc;\n    } else {\n      setApi(version);\n    }\n    AWS.Service.defineMethods(svc);\n    return svc;\n  },\n  /**\n   * @api private\n   */\n  hasService: function (identifier) {\n    return Object.prototype.hasOwnProperty.call(AWS.Service._serviceMap, identifier);\n  },\n  /**\n   * @param attachOn attach default monitoring listeners to object\n   *\n   * Each monitoring event should be emitted from service client to service constructor prototype and then\n   * to global service prototype like bubbling up. These default monitoring events listener will transfer\n   * the monitoring events to the upper layer.\n   * @api private\n   */\n  addDefaultMonitoringListeners: function addDefaultMonitoringListeners(attachOn) {\n    attachOn.addNamedListener('MONITOR_EVENTS_BUBBLE', 'apiCallAttempt', function EVENTS_BUBBLE(event) {\n      var baseClass = Object.getPrototypeOf(attachOn);\n      if (baseClass._events) baseClass.emit('apiCallAttempt', [event]);\n    });\n    attachOn.addNamedListener('CALL_EVENTS_BUBBLE', 'apiCall', function CALL_EVENTS_BUBBLE(event) {\n      var baseClass = Object.getPrototypeOf(attachOn);\n      if (baseClass._events) baseClass.emit('apiCall', [event]);\n    });\n  },\n  /**\n   * @api private\n   */\n  _serviceMap: {}\n});\nAWS.util.mixin(AWS.Service, AWS.SequentialExecutor);\n\n/**\n * @api private\n */\nmodule.exports = AWS.Service;","map":{"version":3,"names":["AWS","require","Api","regionConfig","inherit","util","clientCount","region_utils","Service","constructor","config","loadServiceClass","error","Error","region","isFipsRegion","getRealRegion","useFipsEndpoint","isGlobalRegion","useDualstack","useDualstackEndpoint","ServiceClass","originalConfig","copy","svc","Object","defineProperty","get","enumerable","configurable","_clientId","initialize","svcConfig","serviceIdentifier","Config","update","validateService","endpoint","configureEndpoint","endpointFromTemplate","setEndpoint","SequentialExecutor","call","addDefaultMonitoringListeners","clientSideMonitoring","_clientSideMonitoring","publisher","addNamedListener","PUBLISH_API_CALL","event","process","nextTick","eventHandler","PUBLISH_API_ATTEMPT","serviceConfig","isEmpty","api","apiConfig","defineServiceApi","services","version","apiVersions","apiVersion","getLatestServiceClass","getLatestServiceVersion","length","isType","Date","date","iso8601","split","hasOwnProperty","keys","sort","selectedVersion","i","substr","defaultRetryCount","customizeRequests","callback","customRequestHandler","makeRequest","operation","params","rules","operations","each","key","value","input","members","undefined","request","Request","addAllRequestListeners","attachMonitoringEmitter","send","makeUnauthenticatedRequest","toUnauthenticated","waitFor","state","waiter","ResourceWaiter","wait","list","events","EventListeners","Core","serviceInterface","CorePost","addListeners","paramValidation","removeListener","VALIDATE_PARAMETERS","logger","Logger","setupRequestListeners","prototype","apiCallEvent","service","monitoringEvent","Type","name","Version","serviceId","endpointPrefix","Region","httpRequest","MaxRetriesExceeded","UserAgent","getUserAgent","response","httpResponse","statusCode","FinalHttpStatusCode","code","FinalAwsException","message","FinalAwsExceptionMessage","FinalSdkException","FinalSdkExceptionMessage","apiAttemptEvent","Fqdn","hostname","HttpStatusCode","_unAuthenticated","credentials","accessKeyId","AccessKey","headers","SessionToken","XAmznRequestId","XAmzRequestId","XAmzId2","attemptFailEvent","AwsException","AwsExceptionMessage","SdkException","SdkExceptionMessage","attemptTimestamp","attemptStartRealTime","attemptLatency","callStartRealTime","attemptCount","callTimestamp","self","addToHead","on","realClock","now","Math","round","API_CALL_ATTEMPT","Timestamp","AttemptLatency","emit","API_CALL_ATTEMPT_RETRY","API_CALL","AttemptCount","latency","Latency","retryable","retryCount","maxRetries","getSigningName","signingName","getSignerClass","authtype","signatureVersion","Signers","RequestSigner","getVersion","protocol","Query","Json","RestJson","RestXml","successfulResponse","resp","numRetries","retryDelays","err","calculateRetryDelay","retryDelayOptions","retryableError","timeoutError","networkingError","expiredCredentialsError","throttledError","clockSkewError","getSkewCorrectedDate","systemClockOffset","applyClockOffset","newServerTime","isClockSkewed","abs","getTime","e","replace","sslEnabled","Endpoint","paginationConfig","throwException","paginator","defineMethods","iterator","method","defineService","versions","features","_serviceMap","Array","isArray","addVersions","identifier","Publisher","configProvider","publisherConfig","enabled","superclass","setApi","isApi","apiLoader","concat","hasService","attachOn","EVENTS_BUBBLE","baseClass","getPrototypeOf","_events","CALL_EVENTS_BUBBLE","mixin","module","exports"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/lib/service.js"],"sourcesContent":["var AWS = require('./core');\nvar Api = require('./model/api');\nvar regionConfig = require('./region_config');\n\nvar inherit = AWS.util.inherit;\nvar clientCount = 0;\nvar region_utils = require('./region/utils');\n\n/**\n * The service class representing an AWS service.\n *\n * @class_abstract This class is an abstract class.\n *\n * @!attribute apiVersions\n *   @return [Array<String>] the list of API versions supported by this service.\n *   @readonly\n */\nAWS.Service = inherit({\n  /**\n   * Create a new service object with a configuration object\n   *\n   * @param config [map] a map of configuration options\n   */\n  constructor: function Service(config) {\n    if (!this.loadServiceClass) {\n      throw AWS.util.error(new Error(),\n        'Service must be constructed with `new\\' operator');\n    }\n\n    if (config) {\n      if (config.region) {\n        var region = config.region;\n        if (region_utils.isFipsRegion(region)) {\n          config.region = region_utils.getRealRegion(region);\n          config.useFipsEndpoint = true;\n        }\n        if (region_utils.isGlobalRegion(region)) {\n          config.region = region_utils.getRealRegion(region);\n        }\n      }\n      if (typeof config.useDualstack === 'boolean'\n        && typeof config.useDualstackEndpoint !== 'boolean') {\n        config.useDualstackEndpoint = config.useDualstack;\n      }\n    }\n\n    var ServiceClass = this.loadServiceClass(config || {});\n    if (ServiceClass) {\n      var originalConfig = AWS.util.copy(config);\n      var svc = new ServiceClass(config);\n      Object.defineProperty(svc, '_originalConfig', {\n        get: function() { return originalConfig; },\n        enumerable: false,\n        configurable: true\n      });\n      svc._clientId = ++clientCount;\n      return svc;\n    }\n    this.initialize(config);\n  },\n\n  /**\n   * @api private\n   */\n  initialize: function initialize(config) {\n    var svcConfig = AWS.config[this.serviceIdentifier];\n    this.config = new AWS.Config(AWS.config);\n    if (svcConfig) this.config.update(svcConfig, true);\n    if (config) this.config.update(config, true);\n\n    this.validateService();\n    if (!this.config.endpoint) regionConfig.configureEndpoint(this);\n\n    this.config.endpoint = this.endpointFromTemplate(this.config.endpoint);\n    this.setEndpoint(this.config.endpoint);\n    //enable attaching listeners to service client\n    AWS.SequentialExecutor.call(this);\n    AWS.Service.addDefaultMonitoringListeners(this);\n    if ((this.config.clientSideMonitoring || AWS.Service._clientSideMonitoring) && this.publisher) {\n      var publisher = this.publisher;\n      this.addNamedListener('PUBLISH_API_CALL', 'apiCall', function PUBLISH_API_CALL(event) {\n        process.nextTick(function() {publisher.eventHandler(event);});\n      });\n      this.addNamedListener('PUBLISH_API_ATTEMPT', 'apiCallAttempt', function PUBLISH_API_ATTEMPT(event) {\n        process.nextTick(function() {publisher.eventHandler(event);});\n      });\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateService: function validateService() {\n  },\n\n  /**\n   * @api private\n   */\n  loadServiceClass: function loadServiceClass(serviceConfig) {\n    var config = serviceConfig;\n    if (!AWS.util.isEmpty(this.api)) {\n      return null;\n    } else if (config.apiConfig) {\n      return AWS.Service.defineServiceApi(this.constructor, config.apiConfig);\n    } else if (!this.constructor.services) {\n      return null;\n    } else {\n      config = new AWS.Config(AWS.config);\n      config.update(serviceConfig, true);\n      var version = config.apiVersions[this.constructor.serviceIdentifier];\n      version = version || config.apiVersion;\n      return this.getLatestServiceClass(version);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getLatestServiceClass: function getLatestServiceClass(version) {\n    version = this.getLatestServiceVersion(version);\n    if (this.constructor.services[version] === null) {\n      AWS.Service.defineServiceApi(this.constructor, version);\n    }\n\n    return this.constructor.services[version];\n  },\n\n  /**\n   * @api private\n   */\n  getLatestServiceVersion: function getLatestServiceVersion(version) {\n    if (!this.constructor.services || this.constructor.services.length === 0) {\n      throw new Error('No services defined on ' +\n                      this.constructor.serviceIdentifier);\n    }\n\n    if (!version) {\n      version = 'latest';\n    } else if (AWS.util.isType(version, Date)) {\n      version = AWS.util.date.iso8601(version).split('T')[0];\n    }\n\n    if (Object.hasOwnProperty(this.constructor.services, version)) {\n      return version;\n    }\n\n    var keys = Object.keys(this.constructor.services).sort();\n    var selectedVersion = null;\n    for (var i = keys.length - 1; i >= 0; i--) {\n      // versions that end in \"*\" are not available on disk and can be\n      // skipped, so do not choose these as selectedVersions\n      if (keys[i][keys[i].length - 1] !== '*') {\n        selectedVersion = keys[i];\n      }\n      if (keys[i].substr(0, 10) <= version) {\n        return selectedVersion;\n      }\n    }\n\n    throw new Error('Could not find ' + this.constructor.serviceIdentifier +\n                    ' API to satisfy version constraint `' + version + '\\'');\n  },\n\n  /**\n   * @api private\n   */\n  api: {},\n\n  /**\n   * @api private\n   */\n  defaultRetryCount: 3,\n\n  /**\n   * @api private\n   */\n  customizeRequests: function customizeRequests(callback) {\n    if (!callback) {\n      this.customRequestHandler = null;\n    } else if (typeof callback === 'function') {\n      this.customRequestHandler = callback;\n    } else {\n      throw new Error('Invalid callback type \\'' + typeof callback + '\\' provided in customizeRequests');\n    }\n  },\n\n  /**\n   * Calls an operation on a service with the given input parameters.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeRequest: function makeRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = null;\n    }\n\n    params = params || {};\n    if (this.config.params) { // copy only toplevel bound params\n      var rules = this.api.operations[operation];\n      if (rules) {\n        params = AWS.util.copy(params);\n        AWS.util.each(this.config.params, function(key, value) {\n          if (rules.input.members[key]) {\n            if (params[key] === undefined || params[key] === null) {\n              params[key] = value;\n            }\n          }\n        });\n      }\n    }\n\n    var request = new AWS.Request(this, operation, params);\n    this.addAllRequestListeners(request);\n    this.attachMonitoringEmitter(request);\n    if (callback) request.send(callback);\n    return request;\n  },\n\n  /**\n   * Calls an operation on a service with the given input parameters, without\n   * any authentication data. This method is useful for \"public\" API operations.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeUnauthenticatedRequest: function makeUnauthenticatedRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = {};\n    }\n\n    var request = this.makeRequest(operation, params).toUnauthenticated();\n    return callback ? request.send(callback) : request;\n  },\n\n  /**\n   * Waits for a given state\n   *\n   * @param state [String] the state on the service to wait for\n   * @param params [map] a map of parameters to pass with each request\n   * @option params $waiter [map] a map of configuration options for the waiter\n   * @option params $waiter.delay [Number] The number of seconds to wait between\n   *                                       requests\n   * @option params $waiter.maxAttempts [Number] The maximum number of requests\n   *                                             to send while waiting\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  waitFor: function waitFor(state, params, callback) {\n    var waiter = new AWS.ResourceWaiter(this, state);\n    return waiter.wait(params, callback);\n  },\n\n  /**\n   * @api private\n   */\n  addAllRequestListeners: function addAllRequestListeners(request) {\n    var list = [AWS.events, AWS.EventListeners.Core, this.serviceInterface(),\n                AWS.EventListeners.CorePost];\n    for (var i = 0; i < list.length; i++) {\n      if (list[i]) request.addListeners(list[i]);\n    }\n\n    // disable parameter validation\n    if (!this.config.paramValidation) {\n      request.removeListener('validate',\n        AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    }\n\n    if (this.config.logger) { // add logging events\n      request.addListeners(AWS.EventListeners.Logger);\n    }\n\n    this.setupRequestListeners(request);\n    // call prototype's customRequestHandler\n    if (typeof this.constructor.prototype.customRequestHandler === 'function') {\n      this.constructor.prototype.customRequestHandler(request);\n    }\n    // call instance's customRequestHandler\n    if (Object.prototype.hasOwnProperty.call(this, 'customRequestHandler') && typeof this.customRequestHandler === 'function') {\n      this.customRequestHandler(request);\n    }\n  },\n\n  /**\n   * Event recording metrics for a whole API call.\n   * @returns {object} a subset of api call metrics\n   * @api private\n   */\n  apiCallEvent: function apiCallEvent(request) {\n    var api = request.service.api.operations[request.operation];\n    var monitoringEvent = {\n      Type: 'ApiCall',\n      Api: api ? api.name : request.operation,\n      Version: 1,\n      Service: request.service.api.serviceId || request.service.api.endpointPrefix,\n      Region: request.httpRequest.region,\n      MaxRetriesExceeded: 0,\n      UserAgent: request.httpRequest.getUserAgent(),\n    };\n    var response = request.response;\n    if (response.httpResponse.statusCode) {\n      monitoringEvent.FinalHttpStatusCode = response.httpResponse.statusCode;\n    }\n    if (response.error) {\n      var error = response.error;\n      var statusCode = response.httpResponse.statusCode;\n      if (statusCode > 299) {\n        if (error.code) monitoringEvent.FinalAwsException = error.code;\n        if (error.message) monitoringEvent.FinalAwsExceptionMessage = error.message;\n      } else {\n        if (error.code || error.name) monitoringEvent.FinalSdkException = error.code || error.name;\n        if (error.message) monitoringEvent.FinalSdkExceptionMessage = error.message;\n      }\n    }\n    return monitoringEvent;\n  },\n\n  /**\n   * Event recording metrics for an API call attempt.\n   * @returns {object} a subset of api call attempt metrics\n   * @api private\n   */\n  apiAttemptEvent: function apiAttemptEvent(request) {\n    var api = request.service.api.operations[request.operation];\n    var monitoringEvent = {\n      Type: 'ApiCallAttempt',\n      Api: api ? api.name : request.operation,\n      Version: 1,\n      Service: request.service.api.serviceId || request.service.api.endpointPrefix,\n      Fqdn: request.httpRequest.endpoint.hostname,\n      UserAgent: request.httpRequest.getUserAgent(),\n    };\n    var response = request.response;\n    if (response.httpResponse.statusCode) {\n      monitoringEvent.HttpStatusCode = response.httpResponse.statusCode;\n    }\n    if (\n      !request._unAuthenticated &&\n      request.service.config.credentials &&\n      request.service.config.credentials.accessKeyId\n    ) {\n      monitoringEvent.AccessKey = request.service.config.credentials.accessKeyId;\n    }\n    if (!response.httpResponse.headers) return monitoringEvent;\n    if (request.httpRequest.headers['x-amz-security-token']) {\n      monitoringEvent.SessionToken = request.httpRequest.headers['x-amz-security-token'];\n    }\n    if (response.httpResponse.headers['x-amzn-requestid']) {\n      monitoringEvent.XAmznRequestId = response.httpResponse.headers['x-amzn-requestid'];\n    }\n    if (response.httpResponse.headers['x-amz-request-id']) {\n      monitoringEvent.XAmzRequestId = response.httpResponse.headers['x-amz-request-id'];\n    }\n    if (response.httpResponse.headers['x-amz-id-2']) {\n      monitoringEvent.XAmzId2 = response.httpResponse.headers['x-amz-id-2'];\n    }\n    return monitoringEvent;\n  },\n\n  /**\n   * Add metrics of failed request.\n   * @api private\n   */\n  attemptFailEvent: function attemptFailEvent(request) {\n    var monitoringEvent = this.apiAttemptEvent(request);\n    var response = request.response;\n    var error = response.error;\n    if (response.httpResponse.statusCode > 299 ) {\n      if (error.code) monitoringEvent.AwsException = error.code;\n      if (error.message) monitoringEvent.AwsExceptionMessage = error.message;\n    } else {\n      if (error.code || error.name) monitoringEvent.SdkException = error.code || error.name;\n      if (error.message) monitoringEvent.SdkExceptionMessage = error.message;\n    }\n    return monitoringEvent;\n  },\n\n  /**\n   * Attach listeners to request object to fetch metrics of each request\n   * and emit data object through \\'ApiCall\\' and \\'ApiCallAttempt\\' events.\n   * @api private\n   */\n  attachMonitoringEmitter: function attachMonitoringEmitter(request) {\n    var attemptTimestamp; //timestamp marking the beginning of a request attempt\n    var attemptStartRealTime; //Start time of request attempt. Used to calculating attemptLatency\n    var attemptLatency; //latency from request sent out to http response reaching SDK\n    var callStartRealTime; //Start time of API call. Used to calculating API call latency\n    var attemptCount = 0; //request.retryCount is not reliable here\n    var region; //region cache region for each attempt since it can be updated in plase (e.g. s3)\n    var callTimestamp; //timestamp when the request is created\n    var self = this;\n    var addToHead = true;\n\n    request.on('validate', function () {\n      callStartRealTime = AWS.util.realClock.now();\n      callTimestamp = Date.now();\n    }, addToHead);\n    request.on('sign', function () {\n      attemptStartRealTime = AWS.util.realClock.now();\n      attemptTimestamp = Date.now();\n      region = request.httpRequest.region;\n      attemptCount++;\n    }, addToHead);\n    request.on('validateResponse', function() {\n      attemptLatency = Math.round(AWS.util.realClock.now() - attemptStartRealTime);\n    });\n    request.addNamedListener('API_CALL_ATTEMPT', 'success', function API_CALL_ATTEMPT() {\n      var apiAttemptEvent = self.apiAttemptEvent(request);\n      apiAttemptEvent.Timestamp = attemptTimestamp;\n      apiAttemptEvent.AttemptLatency = attemptLatency >= 0 ? attemptLatency : 0;\n      apiAttemptEvent.Region = region;\n      self.emit('apiCallAttempt', [apiAttemptEvent]);\n    });\n    request.addNamedListener('API_CALL_ATTEMPT_RETRY', 'retry', function API_CALL_ATTEMPT_RETRY() {\n      var apiAttemptEvent = self.attemptFailEvent(request);\n      apiAttemptEvent.Timestamp = attemptTimestamp;\n      //attemptLatency may not be available if fail before response\n      attemptLatency = attemptLatency ||\n        Math.round(AWS.util.realClock.now() - attemptStartRealTime);\n      apiAttemptEvent.AttemptLatency = attemptLatency >= 0 ? attemptLatency : 0;\n      apiAttemptEvent.Region = region;\n      self.emit('apiCallAttempt', [apiAttemptEvent]);\n    });\n    request.addNamedListener('API_CALL', 'complete', function API_CALL() {\n      var apiCallEvent = self.apiCallEvent(request);\n      apiCallEvent.AttemptCount = attemptCount;\n      if (apiCallEvent.AttemptCount <= 0) return;\n      apiCallEvent.Timestamp = callTimestamp;\n      var latency = Math.round(AWS.util.realClock.now() - callStartRealTime);\n      apiCallEvent.Latency = latency >= 0 ? latency : 0;\n      var response = request.response;\n      if (\n        response.error &&\n        response.error.retryable &&\n        typeof response.retryCount === 'number' &&\n        typeof response.maxRetries === 'number' &&\n        (response.retryCount >= response.maxRetries)\n      ) {\n        apiCallEvent.MaxRetriesExceeded = 1;\n      }\n      self.emit('apiCall', [apiCallEvent]);\n    });\n  },\n\n  /**\n   * Override this method to setup any custom request listeners for each\n   * new request to the service.\n   *\n   * @method_abstract This is an abstract method.\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n  },\n\n  /**\n   * Gets the signing name for a given request\n   * @api private\n   */\n  getSigningName: function getSigningName() {\n    return this.api.signingName || this.api.endpointPrefix;\n  },\n\n  /**\n   * Gets the signer class for a given request\n   * @api private\n   */\n  getSignerClass: function getSignerClass(request) {\n    var version;\n    // get operation authtype if present\n    var operation = null;\n    var authtype = '';\n    if (request) {\n      var operations = request.service.api.operations || {};\n      operation = operations[request.operation] || null;\n      authtype = operation ? operation.authtype : '';\n    }\n    if (this.config.signatureVersion) {\n      version = this.config.signatureVersion;\n    } else if (authtype === 'v4' || authtype === 'v4-unsigned-body') {\n      version = 'v4';\n    } else if (authtype === 'bearer') {\n      version = 'bearer';\n    } else {\n      version = this.api.signatureVersion;\n    }\n    return AWS.Signers.RequestSigner.getVersion(version);\n  },\n\n  /**\n   * @api private\n   */\n  serviceInterface: function serviceInterface() {\n    switch (this.api.protocol) {\n      case 'ec2': return AWS.EventListeners.Query;\n      case 'query': return AWS.EventListeners.Query;\n      case 'json': return AWS.EventListeners.Json;\n      case 'rest-json': return AWS.EventListeners.RestJson;\n      case 'rest-xml': return AWS.EventListeners.RestXml;\n    }\n    if (this.api.protocol) {\n      throw new Error('Invalid service `protocol\\' ' +\n        this.api.protocol + ' in API config');\n    }\n  },\n\n  /**\n   * @api private\n   */\n  successfulResponse: function successfulResponse(resp) {\n    return resp.httpResponse.statusCode < 300;\n  },\n\n  /**\n   * How many times a failed request should be retried before giving up.\n   * the defaultRetryCount can be overriden by service classes.\n   *\n   * @api private\n   */\n  numRetries: function numRetries() {\n    if (this.config.maxRetries !== undefined) {\n      return this.config.maxRetries;\n    } else {\n      return this.defaultRetryCount;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  retryDelays: function retryDelays(retryCount, err) {\n    return AWS.util.calculateRetryDelay(retryCount, this.config.retryDelayOptions, err);\n  },\n\n  /**\n   * @api private\n   */\n  retryableError: function retryableError(error) {\n    if (this.timeoutError(error)) return true;\n    if (this.networkingError(error)) return true;\n    if (this.expiredCredentialsError(error)) return true;\n    if (this.throttledError(error)) return true;\n    if (error.statusCode >= 500) return true;\n    return false;\n  },\n\n  /**\n   * @api private\n   */\n  networkingError: function networkingError(error) {\n    return error.code === 'NetworkingError';\n  },\n\n  /**\n   * @api private\n   */\n  timeoutError: function timeoutError(error) {\n    return error.code === 'TimeoutError';\n  },\n\n  /**\n   * @api private\n   */\n  expiredCredentialsError: function expiredCredentialsError(error) {\n    // TODO : this only handles *one* of the expired credential codes\n    return (error.code === 'ExpiredTokenException');\n  },\n\n  /**\n   * @api private\n   */\n  clockSkewError: function clockSkewError(error) {\n    switch (error.code) {\n      case 'RequestTimeTooSkewed':\n      case 'RequestExpired':\n      case 'InvalidSignatureException':\n      case 'SignatureDoesNotMatch':\n      case 'AuthFailure':\n      case 'RequestInTheFuture':\n        return true;\n      default: return false;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getSkewCorrectedDate: function getSkewCorrectedDate() {\n    return new Date(Date.now() + this.config.systemClockOffset);\n  },\n\n  /**\n   * @api private\n   */\n  applyClockOffset: function applyClockOffset(newServerTime) {\n    if (newServerTime) {\n      this.config.systemClockOffset = newServerTime - Date.now();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  isClockSkewed: function isClockSkewed(newServerTime) {\n    if (newServerTime) {\n      return Math.abs(this.getSkewCorrectedDate().getTime() - newServerTime) >= 300000;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  throttledError: function throttledError(error) {\n    // this logic varies between services\n    if (error.statusCode === 429) return true;\n    switch (error.code) {\n      case 'ProvisionedThroughputExceededException':\n      case 'Throttling':\n      case 'ThrottlingException':\n      case 'RequestLimitExceeded':\n      case 'RequestThrottled':\n      case 'RequestThrottledException':\n      case 'TooManyRequestsException':\n      case 'TransactionInProgressException': //dynamodb\n      case 'EC2ThrottledException':\n        return true;\n      default:\n        return false;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  endpointFromTemplate: function endpointFromTemplate(endpoint) {\n    if (typeof endpoint !== 'string') return endpoint;\n\n    var e = endpoint;\n    e = e.replace(/\\{service\\}/g, this.api.endpointPrefix);\n    e = e.replace(/\\{region\\}/g, this.config.region);\n    e = e.replace(/\\{scheme\\}/g, this.config.sslEnabled ? 'https' : 'http');\n    return e;\n  },\n\n  /**\n   * @api private\n   */\n  setEndpoint: function setEndpoint(endpoint) {\n    this.endpoint = new AWS.Endpoint(endpoint, this.config);\n  },\n\n  /**\n   * @api private\n   */\n  paginationConfig: function paginationConfig(operation, throwException) {\n    var paginator = this.api.operations[operation].paginator;\n    if (!paginator) {\n      if (throwException) {\n        var e = new Error();\n        throw AWS.util.error(e, 'No pagination configuration for ' + operation);\n      }\n      return null;\n    }\n\n    return paginator;\n  }\n});\n\nAWS.util.update(AWS.Service, {\n\n  /**\n   * Adds one method for each operation described in the api configuration\n   *\n   * @api private\n   */\n  defineMethods: function defineMethods(svc) {\n    AWS.util.each(svc.prototype.api.operations, function iterator(method) {\n      if (svc.prototype[method]) return;\n      var operation = svc.prototype.api.operations[method];\n      if (operation.authtype === 'none') {\n        svc.prototype[method] = function (params, callback) {\n          return this.makeUnauthenticatedRequest(method, params, callback);\n        };\n      } else {\n        svc.prototype[method] = function (params, callback) {\n          return this.makeRequest(method, params, callback);\n        };\n      }\n    });\n  },\n\n  /**\n   * Defines a new Service class using a service identifier and list of versions\n   * including an optional set of features (functions) to apply to the class\n   * prototype.\n   *\n   * @param serviceIdentifier [String] the identifier for the service\n   * @param versions [Array<String>] a list of versions that work with this\n   *   service\n   * @param features [Object] an object to attach to the prototype\n   * @return [Class<Service>] the service class defined by this function.\n   */\n  defineService: function defineService(serviceIdentifier, versions, features) {\n    AWS.Service._serviceMap[serviceIdentifier] = true;\n    if (!Array.isArray(versions)) {\n      features = versions;\n      versions = [];\n    }\n\n    var svc = inherit(AWS.Service, features || {});\n\n    if (typeof serviceIdentifier === 'string') {\n      AWS.Service.addVersions(svc, versions);\n\n      var identifier = svc.serviceIdentifier || serviceIdentifier;\n      svc.serviceIdentifier = identifier;\n    } else { // defineService called with an API\n      svc.prototype.api = serviceIdentifier;\n      AWS.Service.defineMethods(svc);\n    }\n    AWS.SequentialExecutor.call(this.prototype);\n    //util.clientSideMonitoring is only available in node\n    if (!this.prototype.publisher && AWS.util.clientSideMonitoring) {\n      var Publisher = AWS.util.clientSideMonitoring.Publisher;\n      var configProvider = AWS.util.clientSideMonitoring.configProvider;\n      var publisherConfig = configProvider();\n      this.prototype.publisher = new Publisher(publisherConfig);\n      if (publisherConfig.enabled) {\n        //if csm is enabled in environment, SDK should send all metrics\n        AWS.Service._clientSideMonitoring = true;\n      }\n    }\n    AWS.SequentialExecutor.call(svc.prototype);\n    AWS.Service.addDefaultMonitoringListeners(svc.prototype);\n    return svc;\n  },\n\n  /**\n   * @api private\n   */\n  addVersions: function addVersions(svc, versions) {\n    if (!Array.isArray(versions)) versions = [versions];\n\n    svc.services = svc.services || {};\n    for (var i = 0; i < versions.length; i++) {\n      if (svc.services[versions[i]] === undefined) {\n        svc.services[versions[i]] = null;\n      }\n    }\n\n    svc.apiVersions = Object.keys(svc.services).sort();\n  },\n\n  /**\n   * @api private\n   */\n  defineServiceApi: function defineServiceApi(superclass, version, apiConfig) {\n    var svc = inherit(superclass, {\n      serviceIdentifier: superclass.serviceIdentifier\n    });\n\n    function setApi(api) {\n      if (api.isApi) {\n        svc.prototype.api = api;\n      } else {\n        svc.prototype.api = new Api(api, {\n          serviceIdentifier: superclass.serviceIdentifier\n        });\n      }\n    }\n\n    if (typeof version === 'string') {\n      if (apiConfig) {\n        setApi(apiConfig);\n      } else {\n        try {\n          setApi(AWS.apiLoader(superclass.serviceIdentifier, version));\n        } catch (err) {\n          throw AWS.util.error(err, {\n            message: 'Could not find API configuration ' +\n              superclass.serviceIdentifier + '-' + version\n          });\n        }\n      }\n      if (!Object.prototype.hasOwnProperty.call(superclass.services, version)) {\n        superclass.apiVersions = superclass.apiVersions.concat(version).sort();\n      }\n      superclass.services[version] = svc;\n    } else {\n      setApi(version);\n    }\n\n    AWS.Service.defineMethods(svc);\n    return svc;\n  },\n\n  /**\n   * @api private\n   */\n  hasService: function(identifier) {\n    return Object.prototype.hasOwnProperty.call(AWS.Service._serviceMap, identifier);\n  },\n\n  /**\n   * @param attachOn attach default monitoring listeners to object\n   *\n   * Each monitoring event should be emitted from service client to service constructor prototype and then\n   * to global service prototype like bubbling up. These default monitoring events listener will transfer\n   * the monitoring events to the upper layer.\n   * @api private\n   */\n  addDefaultMonitoringListeners: function addDefaultMonitoringListeners(attachOn) {\n    attachOn.addNamedListener('MONITOR_EVENTS_BUBBLE', 'apiCallAttempt', function EVENTS_BUBBLE(event) {\n      var baseClass = Object.getPrototypeOf(attachOn);\n      if (baseClass._events) baseClass.emit('apiCallAttempt', [event]);\n    });\n    attachOn.addNamedListener('CALL_EVENTS_BUBBLE', 'apiCall', function CALL_EVENTS_BUBBLE(event) {\n      var baseClass = Object.getPrototypeOf(attachOn);\n      if (baseClass._events) baseClass.emit('apiCall', [event]);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  _serviceMap: {}\n});\n\nAWS.util.mixin(AWS.Service, AWS.SequentialExecutor);\n\n/**\n * @api private\n */\nmodule.exports = AWS.Service;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}