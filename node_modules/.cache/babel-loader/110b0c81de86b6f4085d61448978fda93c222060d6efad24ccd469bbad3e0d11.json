{"ast":null,"code":"var hashUtils = require('./browserHashUtils');\n\n/**\n * @api private\n */\nfunction Hmac(hashCtor, secret) {\n  this.hash = new hashCtor();\n  this.outer = new hashCtor();\n  var inner = bufferFromSecret(hashCtor, secret);\n  var outer = new Uint8Array(hashCtor.BLOCK_SIZE);\n  outer.set(inner);\n  for (var i = 0; i < hashCtor.BLOCK_SIZE; i++) {\n    inner[i] ^= 0x36;\n    outer[i] ^= 0x5c;\n  }\n  this.hash.update(inner);\n  this.outer.update(outer);\n\n  // Zero out the copied key buffer.\n  for (var i = 0; i < inner.byteLength; i++) {\n    inner[i] = 0;\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = exports = Hmac;\nHmac.prototype.update = function (toHash) {\n  if (hashUtils.isEmptyData(toHash) || this.error) {\n    return this;\n  }\n  try {\n    this.hash.update(hashUtils.convertToBuffer(toHash));\n  } catch (e) {\n    this.error = e;\n  }\n  return this;\n};\nHmac.prototype.digest = function (encoding) {\n  if (!this.outer.finished) {\n    this.outer.update(this.hash.digest());\n  }\n  return this.outer.digest(encoding);\n};\nfunction bufferFromSecret(hashCtor, secret) {\n  var input = hashUtils.convertToBuffer(secret);\n  if (input.byteLength > hashCtor.BLOCK_SIZE) {\n    var bufferHash = new hashCtor();\n    bufferHash.update(input);\n    input = bufferHash.digest();\n  }\n  var buffer = new Uint8Array(hashCtor.BLOCK_SIZE);\n  buffer.set(input);\n  return buffer;\n}","map":{"version":3,"names":["hashUtils","require","Hmac","hashCtor","secret","hash","outer","inner","bufferFromSecret","Uint8Array","BLOCK_SIZE","set","i","update","byteLength","module","exports","prototype","toHash","isEmptyData","error","convertToBuffer","e","digest","encoding","finished","input","bufferHash","buffer"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/lib/browserHmac.js"],"sourcesContent":["var hashUtils = require('./browserHashUtils');\n\n/**\n * @api private\n */\nfunction Hmac(hashCtor, secret) {\n    this.hash = new hashCtor();\n    this.outer = new hashCtor();\n\n    var inner = bufferFromSecret(hashCtor, secret);\n    var outer = new Uint8Array(hashCtor.BLOCK_SIZE);\n    outer.set(inner);\n\n    for (var i = 0; i < hashCtor.BLOCK_SIZE; i++) {\n        inner[i] ^= 0x36;\n        outer[i] ^= 0x5c;\n    }\n\n    this.hash.update(inner);\n    this.outer.update(outer);\n\n    // Zero out the copied key buffer.\n    for (var i = 0; i < inner.byteLength; i++) {\n        inner[i] = 0;\n    }\n}\n\n/**\n * @api private\n */\nmodule.exports = exports = Hmac;\n\nHmac.prototype.update = function (toHash) {\n    if (hashUtils.isEmptyData(toHash) || this.error) {\n        return this;\n    }\n\n    try {\n        this.hash.update(hashUtils.convertToBuffer(toHash));\n    } catch (e) {\n        this.error = e;\n    }\n\n    return this;\n};\n\nHmac.prototype.digest = function (encoding) {\n    if (!this.outer.finished) {\n        this.outer.update(this.hash.digest());\n    }\n\n    return this.outer.digest(encoding);\n};\n\nfunction bufferFromSecret(hashCtor, secret) {\n    var input = hashUtils.convertToBuffer(secret);\n    if (input.byteLength > hashCtor.BLOCK_SIZE) {\n        var bufferHash = new hashCtor;\n        bufferHash.update(input);\n        input = bufferHash.digest();\n    }\n    var buffer = new Uint8Array(hashCtor.BLOCK_SIZE);\n    buffer.set(input);\n    return buffer;\n}\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,oBAAoB,CAAC;;AAE7C;AACA;AACA;AACA,SAASC,IAAIA,CAACC,QAAQ,EAAEC,MAAM,EAAE;EAC5B,IAAI,CAACC,IAAI,GAAG,IAAIF,QAAQ,CAAC,CAAC;EAC1B,IAAI,CAACG,KAAK,GAAG,IAAIH,QAAQ,CAAC,CAAC;EAE3B,IAAII,KAAK,GAAGC,gBAAgB,CAACL,QAAQ,EAAEC,MAAM,CAAC;EAC9C,IAAIE,KAAK,GAAG,IAAIG,UAAU,CAACN,QAAQ,CAACO,UAAU,CAAC;EAC/CJ,KAAK,CAACK,GAAG,CAACJ,KAAK,CAAC;EAEhB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,QAAQ,CAACO,UAAU,EAAEE,CAAC,EAAE,EAAE;IAC1CL,KAAK,CAACK,CAAC,CAAC,IAAI,IAAI;IAChBN,KAAK,CAACM,CAAC,CAAC,IAAI,IAAI;EACpB;EAEA,IAAI,CAACP,IAAI,CAACQ,MAAM,CAACN,KAAK,CAAC;EACvB,IAAI,CAACD,KAAK,CAACO,MAAM,CAACP,KAAK,CAAC;;EAExB;EACA,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACO,UAAU,EAAEF,CAAC,EAAE,EAAE;IACvCL,KAAK,CAACK,CAAC,CAAC,GAAG,CAAC;EAChB;AACJ;;AAEA;AACA;AACA;AACAG,MAAM,CAACC,OAAO,GAAGA,OAAO,GAAGd,IAAI;AAE/BA,IAAI,CAACe,SAAS,CAACJ,MAAM,GAAG,UAAUK,MAAM,EAAE;EACtC,IAAIlB,SAAS,CAACmB,WAAW,CAACD,MAAM,CAAC,IAAI,IAAI,CAACE,KAAK,EAAE;IAC7C,OAAO,IAAI;EACf;EAEA,IAAI;IACA,IAAI,CAACf,IAAI,CAACQ,MAAM,CAACb,SAAS,CAACqB,eAAe,CAACH,MAAM,CAAC,CAAC;EACvD,CAAC,CAAC,OAAOI,CAAC,EAAE;IACR,IAAI,CAACF,KAAK,GAAGE,CAAC;EAClB;EAEA,OAAO,IAAI;AACf,CAAC;AAEDpB,IAAI,CAACe,SAAS,CAACM,MAAM,GAAG,UAAUC,QAAQ,EAAE;EACxC,IAAI,CAAC,IAAI,CAAClB,KAAK,CAACmB,QAAQ,EAAE;IACtB,IAAI,CAACnB,KAAK,CAACO,MAAM,CAAC,IAAI,CAACR,IAAI,CAACkB,MAAM,CAAC,CAAC,CAAC;EACzC;EAEA,OAAO,IAAI,CAACjB,KAAK,CAACiB,MAAM,CAACC,QAAQ,CAAC;AACtC,CAAC;AAED,SAAShB,gBAAgBA,CAACL,QAAQ,EAAEC,MAAM,EAAE;EACxC,IAAIsB,KAAK,GAAG1B,SAAS,CAACqB,eAAe,CAACjB,MAAM,CAAC;EAC7C,IAAIsB,KAAK,CAACZ,UAAU,GAAGX,QAAQ,CAACO,UAAU,EAAE;IACxC,IAAIiB,UAAU,GAAG,IAAIxB,QAAQ,CAAD,CAAC;IAC7BwB,UAAU,CAACd,MAAM,CAACa,KAAK,CAAC;IACxBA,KAAK,GAAGC,UAAU,CAACJ,MAAM,CAAC,CAAC;EAC/B;EACA,IAAIK,MAAM,GAAG,IAAInB,UAAU,CAACN,QAAQ,CAACO,UAAU,CAAC;EAChDkB,MAAM,CAACjB,GAAG,CAACe,KAAK,CAAC;EACjB,OAAOE,MAAM;AACjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}