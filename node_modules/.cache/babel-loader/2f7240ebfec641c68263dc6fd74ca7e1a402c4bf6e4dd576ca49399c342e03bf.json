{"ast":null,"code":"var util = require('../util');\nvar Rest = require('./rest');\nvar Json = require('./json');\nvar JsonBuilder = require('../json/builder');\nvar JsonParser = require('../json/parser');\nvar METHODS_WITHOUT_BODY = ['GET', 'HEAD', 'DELETE'];\nfunction unsetContentLength(req) {\n  var payloadMember = util.getRequestPayloadShape(req);\n  if (payloadMember === undefined && METHODS_WITHOUT_BODY.indexOf(req.httpRequest.method) >= 0) {\n    delete req.httpRequest.headers['Content-Length'];\n  }\n}\nfunction populateBody(req) {\n  var builder = new JsonBuilder();\n  var input = req.service.api.operations[req.operation].input;\n  if (input.payload) {\n    var params = {};\n    var payloadShape = input.members[input.payload];\n    params = req.params[input.payload];\n    if (payloadShape.type === 'structure') {\n      req.httpRequest.body = builder.build(params || {}, payloadShape);\n      applyContentTypeHeader(req);\n    } else if (params !== undefined) {\n      // non-JSON payload\n      req.httpRequest.body = params;\n      if (payloadShape.type === 'binary' || payloadShape.isStreaming) {\n        applyContentTypeHeader(req, true);\n      }\n    }\n  } else {\n    req.httpRequest.body = builder.build(req.params, input);\n    applyContentTypeHeader(req);\n  }\n}\nfunction applyContentTypeHeader(req, isBinary) {\n  if (!req.httpRequest.headers['Content-Type']) {\n    var type = isBinary ? 'binary/octet-stream' : 'application/json';\n    req.httpRequest.headers['Content-Type'] = type;\n  }\n}\nfunction buildRequest(req) {\n  Rest.buildRequest(req);\n\n  // never send body payload on GET/HEAD/DELETE\n  if (METHODS_WITHOUT_BODY.indexOf(req.httpRequest.method) < 0) {\n    populateBody(req);\n  }\n}\nfunction extractError(resp) {\n  Json.extractError(resp);\n}\nfunction extractData(resp) {\n  Rest.extractData(resp);\n  var req = resp.request;\n  var operation = req.service.api.operations[req.operation];\n  var rules = req.service.api.operations[req.operation].output || {};\n  var parser;\n  var hasEventOutput = operation.hasEventOutput;\n  if (rules.payload) {\n    var payloadMember = rules.members[rules.payload];\n    var body = resp.httpResponse.body;\n    if (payloadMember.isEventStream) {\n      parser = new JsonParser();\n      resp.data[payload] = util.createEventStream(AWS.HttpClient.streamsApiVersion === 2 ? resp.httpResponse.stream : body, parser, payloadMember);\n    } else if (payloadMember.type === 'structure' || payloadMember.type === 'list') {\n      var parser = new JsonParser();\n      resp.data[rules.payload] = parser.parse(body, payloadMember);\n    } else if (payloadMember.type === 'binary' || payloadMember.isStreaming) {\n      resp.data[rules.payload] = body;\n    } else {\n      resp.data[rules.payload] = payloadMember.toType(body);\n    }\n  } else {\n    var data = resp.data;\n    Json.extractData(resp);\n    resp.data = util.merge(data, resp.data);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData,\n  unsetContentLength: unsetContentLength\n};","map":{"version":3,"names":["util","require","Rest","Json","JsonBuilder","JsonParser","METHODS_WITHOUT_BODY","unsetContentLength","req","payloadMember","getRequestPayloadShape","undefined","indexOf","httpRequest","method","headers","populateBody","builder","input","service","api","operations","operation","payload","params","payloadShape","members","type","body","build","applyContentTypeHeader","isStreaming","isBinary","buildRequest","extractError","resp","extractData","request","rules","output","parser","hasEventOutput","httpResponse","isEventStream","data","createEventStream","AWS","HttpClient","streamsApiVersion","stream","parse","toType","merge","module","exports"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/lib/protocol/rest_json.js"],"sourcesContent":["var util = require('../util');\nvar Rest = require('./rest');\nvar Json = require('./json');\nvar JsonBuilder = require('../json/builder');\nvar JsonParser = require('../json/parser');\n\nvar METHODS_WITHOUT_BODY = ['GET', 'HEAD', 'DELETE'];\n\nfunction unsetContentLength(req) {\n  var payloadMember = util.getRequestPayloadShape(req);\n  if (\n    payloadMember === undefined &&\n    METHODS_WITHOUT_BODY.indexOf(req.httpRequest.method) >= 0\n  ) {\n    delete req.httpRequest.headers['Content-Length'];\n  }\n}\n\nfunction populateBody(req) {\n  var builder = new JsonBuilder();\n  var input = req.service.api.operations[req.operation].input;\n\n  if (input.payload) {\n    var params = {};\n    var payloadShape = input.members[input.payload];\n    params = req.params[input.payload];\n\n    if (payloadShape.type === 'structure') {\n      req.httpRequest.body = builder.build(params || {}, payloadShape);\n      applyContentTypeHeader(req);\n    } else if (params !== undefined) {\n      // non-JSON payload\n      req.httpRequest.body = params;\n      if (payloadShape.type === 'binary' || payloadShape.isStreaming) {\n        applyContentTypeHeader(req, true);\n      }\n    }\n  } else {\n    req.httpRequest.body = builder.build(req.params, input);\n    applyContentTypeHeader(req);\n  }\n}\n\nfunction applyContentTypeHeader(req, isBinary) {\n  if (!req.httpRequest.headers['Content-Type']) {\n    var type = isBinary ? 'binary/octet-stream' : 'application/json';\n    req.httpRequest.headers['Content-Type'] = type;\n  }\n}\n\nfunction buildRequest(req) {\n  Rest.buildRequest(req);\n\n  // never send body payload on GET/HEAD/DELETE\n  if (METHODS_WITHOUT_BODY.indexOf(req.httpRequest.method) < 0) {\n    populateBody(req);\n  }\n}\n\nfunction extractError(resp) {\n  Json.extractError(resp);\n}\n\nfunction extractData(resp) {\n  Rest.extractData(resp);\n\n  var req = resp.request;\n  var operation = req.service.api.operations[req.operation];\n  var rules = req.service.api.operations[req.operation].output || {};\n  var parser;\n  var hasEventOutput = operation.hasEventOutput;\n\n  if (rules.payload) {\n    var payloadMember = rules.members[rules.payload];\n    var body = resp.httpResponse.body;\n    if (payloadMember.isEventStream) {\n      parser = new JsonParser();\n      resp.data[payload] = util.createEventStream(\n        AWS.HttpClient.streamsApiVersion === 2 ? resp.httpResponse.stream : body,\n        parser,\n        payloadMember\n      );\n    } else if (payloadMember.type === 'structure' || payloadMember.type === 'list') {\n      var parser = new JsonParser();\n      resp.data[rules.payload] = parser.parse(body, payloadMember);\n    } else if (payloadMember.type === 'binary' || payloadMember.isStreaming) {\n      resp.data[rules.payload] = body;\n    } else {\n      resp.data[rules.payload] = payloadMember.toType(body);\n    }\n  } else {\n    var data = resp.data;\n    Json.extractData(resp);\n    resp.data = util.merge(data, resp.data);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData,\n  unsetContentLength: unsetContentLength\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}