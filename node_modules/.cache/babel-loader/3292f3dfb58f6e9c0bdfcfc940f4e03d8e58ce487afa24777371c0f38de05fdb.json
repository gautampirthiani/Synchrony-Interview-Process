{"ast":null,"code":"var util = require('../util');\nfunction QueryParamSerializer() {}\nQueryParamSerializer.prototype.serialize = function (params, shape, fn) {\n  serializeStructure('', params, shape, fn);\n};\nfunction ucfirst(shape) {\n  if (shape.isQueryName || shape.api.protocol !== 'ec2') {\n    return shape.name;\n  } else {\n    return shape.name[0].toUpperCase() + shape.name.substr(1);\n  }\n}\nfunction serializeStructure(prefix, struct, rules, fn) {\n  util.each(rules.members, function (name, member) {\n    var value = struct[name];\n    if (value === null || value === undefined) return;\n    var memberName = ucfirst(member);\n    memberName = prefix ? prefix + '.' + memberName : memberName;\n    serializeMember(memberName, value, member, fn);\n  });\n}\nfunction serializeMap(name, map, rules, fn) {\n  var i = 1;\n  util.each(map, function (key, value) {\n    var prefix = rules.flattened ? '.' : '.entry.';\n    var position = prefix + i++ + '.';\n    var keyName = position + (rules.key.name || 'key');\n    var valueName = position + (rules.value.name || 'value');\n    serializeMember(name + keyName, key, rules.key, fn);\n    serializeMember(name + valueName, value, rules.value, fn);\n  });\n}\nfunction serializeList(name, list, rules, fn) {\n  var memberRules = rules.member || {};\n  if (list.length === 0) {\n    fn.call(this, name, null);\n    return;\n  }\n  util.arrayEach(list, function (v, n) {\n    var suffix = '.' + (n + 1);\n    if (rules.api.protocol === 'ec2') {\n      // Do nothing for EC2\n      suffix = suffix + ''; // make linter happy\n    } else if (rules.flattened) {\n      if (memberRules.name) {\n        var parts = name.split('.');\n        parts.pop();\n        parts.push(ucfirst(memberRules));\n        name = parts.join('.');\n      }\n    } else {\n      suffix = '.' + (memberRules.name ? memberRules.name : 'member') + suffix;\n    }\n    serializeMember(name + suffix, v, memberRules, fn);\n  });\n}\nfunction serializeMember(name, value, rules, fn) {\n  if (value === null || value === undefined) return;\n  if (rules.type === 'structure') {\n    serializeStructure(name, value, rules, fn);\n  } else if (rules.type === 'list') {\n    serializeList(name, value, rules, fn);\n  } else if (rules.type === 'map') {\n    serializeMap(name, value, rules, fn);\n  } else {\n    fn(name, rules.toWireFormat(value).toString());\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = QueryParamSerializer;","map":{"version":3,"names":["util","require","QueryParamSerializer","prototype","serialize","params","shape","fn","serializeStructure","ucfirst","isQueryName","api","protocol","name","toUpperCase","substr","prefix","struct","rules","each","members","member","value","undefined","memberName","serializeMember","serializeMap","map","i","key","flattened","position","keyName","valueName","serializeList","list","memberRules","length","call","arrayEach","v","n","suffix","parts","split","pop","push","join","type","toWireFormat","toString","module","exports"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/lib/query/query_param_serializer.js"],"sourcesContent":["var util = require('../util');\n\nfunction QueryParamSerializer() {\n}\n\nQueryParamSerializer.prototype.serialize = function(params, shape, fn) {\n  serializeStructure('', params, shape, fn);\n};\n\nfunction ucfirst(shape) {\n  if (shape.isQueryName || shape.api.protocol !== 'ec2') {\n    return shape.name;\n  } else {\n    return shape.name[0].toUpperCase() + shape.name.substr(1);\n  }\n}\n\nfunction serializeStructure(prefix, struct, rules, fn) {\n  util.each(rules.members, function(name, member) {\n    var value = struct[name];\n    if (value === null || value === undefined) return;\n\n    var memberName = ucfirst(member);\n    memberName = prefix ? prefix + '.' + memberName : memberName;\n    serializeMember(memberName, value, member, fn);\n  });\n}\n\nfunction serializeMap(name, map, rules, fn) {\n  var i = 1;\n  util.each(map, function (key, value) {\n    var prefix = rules.flattened ? '.' : '.entry.';\n    var position = prefix + (i++) + '.';\n    var keyName = position + (rules.key.name || 'key');\n    var valueName = position + (rules.value.name || 'value');\n    serializeMember(name + keyName, key, rules.key, fn);\n    serializeMember(name + valueName, value, rules.value, fn);\n  });\n}\n\nfunction serializeList(name, list, rules, fn) {\n  var memberRules = rules.member || {};\n\n  if (list.length === 0) {\n    fn.call(this, name, null);\n    return;\n  }\n\n  util.arrayEach(list, function (v, n) {\n    var suffix = '.' + (n + 1);\n    if (rules.api.protocol === 'ec2') {\n      // Do nothing for EC2\n      suffix = suffix + ''; // make linter happy\n    } else if (rules.flattened) {\n      if (memberRules.name) {\n        var parts = name.split('.');\n        parts.pop();\n        parts.push(ucfirst(memberRules));\n        name = parts.join('.');\n      }\n    } else {\n      suffix = '.' + (memberRules.name ? memberRules.name : 'member') + suffix;\n    }\n    serializeMember(name + suffix, v, memberRules, fn);\n  });\n}\n\nfunction serializeMember(name, value, rules, fn) {\n  if (value === null || value === undefined) return;\n  if (rules.type === 'structure') {\n    serializeStructure(name, value, rules, fn);\n  } else if (rules.type === 'list') {\n    serializeList(name, value, rules, fn);\n  } else if (rules.type === 'map') {\n    serializeMap(name, value, rules, fn);\n  } else {\n    fn(name, rules.toWireFormat(value).toString());\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = QueryParamSerializer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}