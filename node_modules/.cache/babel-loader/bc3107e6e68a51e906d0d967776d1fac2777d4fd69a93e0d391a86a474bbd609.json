{"ast":null,"code":"var AWS = require('./core');\nvar SequentialExecutor = require('./sequential_executor');\nvar DISCOVER_ENDPOINT = require('./discover_endpoint').discoverEndpoint;\n/**\n * The namespace used to register global event listeners for request building\n * and sending.\n */\nAWS.EventListeners = {\n  /**\n   * @!attribute VALIDATE_CREDENTIALS\n   *   A request listener that validates whether the request is being\n   *   sent with credentials.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating credentials\n   *     var listener = AWS.EventListeners.Core.VALIDATE_CREDENTIALS;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_REGION\n   *   A request listener that validates whether the region is set\n   *   for a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating region configuration\n   *     var listener = AWS.EventListeners.Core.VALIDATE_REGION;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_PARAMETERS\n   *   A request listener that validates input parameters in a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating parameters\n   *     var listener = AWS.EventListeners.Core.VALIDATE_PARAMETERS;\n   *     request.removeListener('validate', listener);\n   *   @example Disable parameter validation globally\n   *     AWS.EventListeners.Core.removeListener('validate',\n   *       AWS.EventListeners.Core.VALIDATE_REGION);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute SEND\n   *   A request listener that initiates the HTTP connection for a\n   *   request being sent. Handles the {AWS.Request~send 'send' Request event}\n   *   @example Replacing the HTTP handler\n   *     var listener = AWS.EventListeners.Core.SEND;\n   *     request.removeListener('send', listener);\n   *     request.on('send', function(response) {\n   *       customHandler.send(response);\n   *     });\n   *   @return [Function]\n   *   @readonly\n   * @!attribute HTTP_DATA\n   *   A request listener that reads data from the HTTP connection in order\n   *   to build the response data.\n   *   Handles the {AWS.Request~httpData 'httpData' Request event}.\n   *   Remove this handler if you are overriding the 'httpData' event and\n   *   do not want extra data processing and buffering overhead.\n   *   @example Disabling default data processing\n   *     var listener = AWS.EventListeners.Core.HTTP_DATA;\n   *     request.removeListener('httpData', listener);\n   *   @return [Function]\n   *   @readonly\n   */\n  Core: {} /* doc hack */\n};\n\n/**\n * @api private\n */\nfunction getOperationAuthtype(req) {\n  if (!req.service.api.operations) {\n    return '';\n  }\n  var operation = req.service.api.operations[req.operation];\n  return operation ? operation.authtype : '';\n}\n\n/**\n * @api private\n */\nfunction getIdentityType(req) {\n  var service = req.service;\n  if (service.config.signatureVersion) {\n    return service.config.signatureVersion;\n  }\n  if (service.api.signatureVersion) {\n    return service.api.signatureVersion;\n  }\n  return getOperationAuthtype(req);\n}\nAWS.EventListeners = {\n  Core: new SequentialExecutor().addNamedListeners(function (add, addAsync) {\n    addAsync('VALIDATE_CREDENTIALS', 'validate', function VALIDATE_CREDENTIALS(req, done) {\n      if (!req.service.api.signatureVersion && !req.service.config.signatureVersion) return done(); // none\n\n      var identityType = getIdentityType(req);\n      if (identityType === 'bearer') {\n        req.service.config.getToken(function (err) {\n          if (err) {\n            req.response.error = AWS.util.error(err, {\n              code: 'TokenError'\n            });\n          }\n          done();\n        });\n        return;\n      }\n      req.service.config.getCredentials(function (err) {\n        if (err) {\n          req.response.error = AWS.util.error(err, {\n            code: 'CredentialsError',\n            message: 'Missing credentials in config, if using AWS_CONFIG_FILE, set AWS_SDK_LOAD_CONFIG=1'\n          });\n        }\n        done();\n      });\n    });\n    add('VALIDATE_REGION', 'validate', function VALIDATE_REGION(req) {\n      if (!req.service.isGlobalEndpoint) {\n        var dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n        if (!req.service.config.region) {\n          req.response.error = AWS.util.error(new Error(), {\n            code: 'ConfigError',\n            message: 'Missing region in config'\n          });\n        } else if (!dnsHostRegex.test(req.service.config.region)) {\n          req.response.error = AWS.util.error(new Error(), {\n            code: 'ConfigError',\n            message: 'Invalid region in config'\n          });\n        }\n      }\n    });\n    add('BUILD_IDEMPOTENCY_TOKENS', 'validate', function BUILD_IDEMPOTENCY_TOKENS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      if (!operation) {\n        return;\n      }\n      var idempotentMembers = operation.idempotentMembers;\n      if (!idempotentMembers.length) {\n        return;\n      }\n      // creates a copy of params so user's param object isn't mutated\n      var params = AWS.util.copy(req.params);\n      for (var i = 0, iLen = idempotentMembers.length; i < iLen; i++) {\n        if (!params[idempotentMembers[i]]) {\n          // add the member\n          params[idempotentMembers[i]] = AWS.util.uuid.v4();\n        }\n      }\n      req.params = params;\n    });\n    add('VALIDATE_PARAMETERS', 'validate', function VALIDATE_PARAMETERS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var rules = req.service.api.operations[req.operation].input;\n      var validation = req.service.config.paramValidation;\n      new AWS.ParamValidator(validation).validate(rules, req.params);\n    });\n    add('COMPUTE_CHECKSUM', 'afterBuild', function COMPUTE_CHECKSUM(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      if (!operation) {\n        return;\n      }\n      var body = req.httpRequest.body;\n      var isNonStreamingPayload = body && (AWS.util.Buffer.isBuffer(body) || typeof body === 'string');\n      var headers = req.httpRequest.headers;\n      if (operation.httpChecksumRequired && req.service.config.computeChecksums && isNonStreamingPayload && !headers['Content-MD5']) {\n        var md5 = AWS.util.crypto.md5(body, 'base64');\n        headers['Content-MD5'] = md5;\n      }\n    });\n    addAsync('COMPUTE_SHA256', 'afterBuild', function COMPUTE_SHA256(req, done) {\n      req.haltHandlersOnError();\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      var authtype = operation ? operation.authtype : '';\n      if (!req.service.api.signatureVersion && !authtype && !req.service.config.signatureVersion) return done(); // none\n      if (req.service.getSignerClass(req) === AWS.Signers.V4) {\n        var body = req.httpRequest.body || '';\n        if (authtype.indexOf('unsigned-body') >= 0) {\n          req.httpRequest.headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';\n          return done();\n        }\n        AWS.util.computeSha256(body, function (err, sha) {\n          if (err) {\n            done(err);\n          } else {\n            req.httpRequest.headers['X-Amz-Content-Sha256'] = sha;\n            done();\n          }\n        });\n      } else {\n        done();\n      }\n    });\n    add('SET_CONTENT_LENGTH', 'afterBuild', function SET_CONTENT_LENGTH(req) {\n      var authtype = getOperationAuthtype(req);\n      var payloadMember = AWS.util.getRequestPayloadShape(req);\n      if (req.httpRequest.headers['Content-Length'] === undefined) {\n        try {\n          var length = AWS.util.string.byteLength(req.httpRequest.body);\n          req.httpRequest.headers['Content-Length'] = length;\n        } catch (err) {\n          if (payloadMember && payloadMember.isStreaming) {\n            if (payloadMember.requiresLength) {\n              //streaming payload requires length(s3, glacier)\n              throw err;\n            } else if (authtype.indexOf('unsigned-body') >= 0) {\n              //unbounded streaming payload(lex, mediastore)\n              req.httpRequest.headers['Transfer-Encoding'] = 'chunked';\n              return;\n            } else {\n              throw err;\n            }\n          }\n          throw err;\n        }\n      }\n    });\n    add('SET_HTTP_HOST', 'afterBuild', function SET_HTTP_HOST(req) {\n      req.httpRequest.headers['Host'] = req.httpRequest.endpoint.host;\n    });\n    add('SET_TRACE_ID', 'afterBuild', function SET_TRACE_ID(req) {\n      var traceIdHeaderName = 'X-Amzn-Trace-Id';\n      if (AWS.util.isNode() && !Object.hasOwnProperty.call(req.httpRequest.headers, traceIdHeaderName)) {\n        var ENV_LAMBDA_FUNCTION_NAME = 'AWS_LAMBDA_FUNCTION_NAME';\n        var ENV_TRACE_ID = '_X_AMZN_TRACE_ID';\n        var functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n        var traceId = process.env[ENV_TRACE_ID];\n        if (typeof functionName === 'string' && functionName.length > 0 && typeof traceId === 'string' && traceId.length > 0) {\n          req.httpRequest.headers[traceIdHeaderName] = traceId;\n        }\n      }\n    });\n    add('RESTART', 'restart', function RESTART() {\n      var err = this.response.error;\n      if (!err || !err.retryable) return;\n      this.httpRequest = new AWS.HttpRequest(this.service.endpoint, this.service.region);\n      if (this.response.retryCount < this.service.config.maxRetries) {\n        this.response.retryCount++;\n      } else {\n        this.response.error = null;\n      }\n    });\n    var addToHead = true;\n    addAsync('DISCOVER_ENDPOINT', 'sign', DISCOVER_ENDPOINT, addToHead);\n    addAsync('SIGN', 'sign', function SIGN(req, done) {\n      var service = req.service;\n      var identityType = getIdentityType(req);\n      if (!identityType || identityType.length === 0) return done(); // none\n\n      if (identityType === 'bearer') {\n        service.config.getToken(function (err, token) {\n          if (err) {\n            req.response.error = err;\n            return done();\n          }\n          try {\n            var SignerClass = service.getSignerClass(req);\n            var signer = new SignerClass(req.httpRequest);\n            signer.addAuthorization(token);\n          } catch (e) {\n            req.response.error = e;\n          }\n          done();\n        });\n      } else {\n        service.config.getCredentials(function (err, credentials) {\n          if (err) {\n            req.response.error = err;\n            return done();\n          }\n          try {\n            var date = service.getSkewCorrectedDate();\n            var SignerClass = service.getSignerClass(req);\n            var operations = req.service.api.operations || {};\n            var operation = operations[req.operation];\n            var signer = new SignerClass(req.httpRequest, service.getSigningName(req), {\n              signatureCache: service.config.signatureCache,\n              operation: operation,\n              signatureVersion: service.api.signatureVersion\n            });\n            signer.setServiceClientId(service._clientId);\n\n            // clear old authorization headers\n            delete req.httpRequest.headers['Authorization'];\n            delete req.httpRequest.headers['Date'];\n            delete req.httpRequest.headers['X-Amz-Date'];\n\n            // add new authorization\n            signer.addAuthorization(credentials, date);\n            req.signedAt = date;\n          } catch (e) {\n            req.response.error = e;\n          }\n          done();\n        });\n      }\n    });\n    add('VALIDATE_RESPONSE', 'validateResponse', function VALIDATE_RESPONSE(resp) {\n      if (this.service.successfulResponse(resp, this)) {\n        resp.data = {};\n        resp.error = null;\n      } else {\n        resp.data = null;\n        resp.error = AWS.util.error(new Error(), {\n          code: 'UnknownError',\n          message: 'An unknown error occurred.'\n        });\n      }\n    });\n    add('ERROR', 'error', function ERROR(err, resp) {\n      var awsQueryCompatible = resp.request.service.api.awsQueryCompatible;\n      if (awsQueryCompatible) {\n        var headers = resp.httpResponse.headers;\n        var queryErrorCode = headers ? headers['x-amzn-query-error'] : undefined;\n        if (queryErrorCode && queryErrorCode.includes(';')) {\n          resp.error.code = queryErrorCode.split(';')[0];\n        }\n      }\n    }, true);\n    addAsync('SEND', 'send', function SEND(resp, done) {\n      resp.httpResponse._abortCallback = done;\n      resp.error = null;\n      resp.data = null;\n      function callback(httpResp) {\n        resp.httpResponse.stream = httpResp;\n        var stream = resp.request.httpRequest.stream;\n        var service = resp.request.service;\n        var api = service.api;\n        var operationName = resp.request.operation;\n        var operation = api.operations[operationName] || {};\n        httpResp.on('headers', function onHeaders(statusCode, headers, statusMessage) {\n          resp.request.emit('httpHeaders', [statusCode, headers, resp, statusMessage]);\n          if (!resp.httpResponse.streaming) {\n            if (AWS.HttpClient.streamsApiVersion === 2) {\n              // streams2 API check\n              // if we detect event streams, we're going to have to\n              // return the stream immediately\n              if (operation.hasEventOutput && service.successfulResponse(resp)) {\n                // skip reading the IncomingStream\n                resp.request.emit('httpDone');\n                done();\n                return;\n              }\n              httpResp.on('readable', function onReadable() {\n                var data = httpResp.read();\n                if (data !== null) {\n                  resp.request.emit('httpData', [data, resp]);\n                }\n              });\n            } else {\n              // legacy streams API\n              httpResp.on('data', function onData(data) {\n                resp.request.emit('httpData', [data, resp]);\n              });\n            }\n          }\n        });\n        httpResp.on('end', function onEnd() {\n          if (!stream || !stream.didCallback) {\n            if (AWS.HttpClient.streamsApiVersion === 2 && operation.hasEventOutput && service.successfulResponse(resp)) {\n              // don't concatenate response chunks when streaming event stream data when response is successful\n              return;\n            }\n            resp.request.emit('httpDone');\n            done();\n          }\n        });\n      }\n      function progress(httpResp) {\n        httpResp.on('sendProgress', function onSendProgress(value) {\n          resp.request.emit('httpUploadProgress', [value, resp]);\n        });\n        httpResp.on('receiveProgress', function onReceiveProgress(value) {\n          resp.request.emit('httpDownloadProgress', [value, resp]);\n        });\n      }\n      function error(err) {\n        if (err.code !== 'RequestAbortedError') {\n          var errCode = err.code === 'TimeoutError' ? err.code : 'NetworkingError';\n          err = AWS.util.error(err, {\n            code: errCode,\n            region: resp.request.httpRequest.region,\n            hostname: resp.request.httpRequest.endpoint.hostname,\n            retryable: true\n          });\n        }\n        resp.error = err;\n        resp.request.emit('httpError', [resp.error, resp], function () {\n          done();\n        });\n      }\n      function executeSend() {\n        var http = AWS.HttpClient.getInstance();\n        var httpOptions = resp.request.service.config.httpOptions || {};\n        try {\n          var stream = http.handleRequest(resp.request.httpRequest, httpOptions, callback, error);\n          progress(stream);\n        } catch (err) {\n          error(err);\n        }\n      }\n      var timeDiff = (resp.request.service.getSkewCorrectedDate() - this.signedAt) / 1000;\n      if (timeDiff >= 60 * 10) {\n        // if we signed 10min ago, re-sign\n        this.emit('sign', [this], function (err) {\n          if (err) done(err);else executeSend();\n        });\n      } else {\n        executeSend();\n      }\n    });\n    add('HTTP_HEADERS', 'httpHeaders', function HTTP_HEADERS(statusCode, headers, resp, statusMessage) {\n      resp.httpResponse.statusCode = statusCode;\n      resp.httpResponse.statusMessage = statusMessage;\n      resp.httpResponse.headers = headers;\n      resp.httpResponse.body = AWS.util.buffer.toBuffer('');\n      resp.httpResponse.buffers = [];\n      resp.httpResponse.numBytes = 0;\n      var dateHeader = headers.date || headers.Date;\n      var service = resp.request.service;\n      if (dateHeader) {\n        var serverTime = Date.parse(dateHeader);\n        if (service.config.correctClockSkew && service.isClockSkewed(serverTime)) {\n          service.applyClockOffset(serverTime);\n        }\n      }\n    });\n    add('HTTP_DATA', 'httpData', function HTTP_DATA(chunk, resp) {\n      if (chunk) {\n        if (AWS.util.isNode()) {\n          resp.httpResponse.numBytes += chunk.length;\n          var total = resp.httpResponse.headers['content-length'];\n          var progress = {\n            loaded: resp.httpResponse.numBytes,\n            total: total\n          };\n          resp.request.emit('httpDownloadProgress', [progress, resp]);\n        }\n        resp.httpResponse.buffers.push(AWS.util.buffer.toBuffer(chunk));\n      }\n    });\n    add('HTTP_DONE', 'httpDone', function HTTP_DONE(resp) {\n      // convert buffers array into single buffer\n      if (resp.httpResponse.buffers && resp.httpResponse.buffers.length > 0) {\n        var body = AWS.util.buffer.concat(resp.httpResponse.buffers);\n        resp.httpResponse.body = body;\n      }\n      delete resp.httpResponse.numBytes;\n      delete resp.httpResponse.buffers;\n    });\n    add('FINALIZE_ERROR', 'retry', function FINALIZE_ERROR(resp) {\n      if (resp.httpResponse.statusCode) {\n        resp.error.statusCode = resp.httpResponse.statusCode;\n        if (resp.error.retryable === undefined) {\n          resp.error.retryable = this.service.retryableError(resp.error, this);\n        }\n      }\n    });\n    add('INVALIDATE_CREDENTIALS', 'retry', function INVALIDATE_CREDENTIALS(resp) {\n      if (!resp.error) return;\n      switch (resp.error.code) {\n        case 'RequestExpired': // EC2 only\n        case 'ExpiredTokenException':\n        case 'ExpiredToken':\n          resp.error.retryable = true;\n          resp.request.service.config.credentials.expired = true;\n      }\n    });\n    add('EXPIRED_SIGNATURE', 'retry', function EXPIRED_SIGNATURE(resp) {\n      var err = resp.error;\n      if (!err) return;\n      if (typeof err.code === 'string' && typeof err.message === 'string') {\n        if (err.code.match(/Signature/) && err.message.match(/expired/)) {\n          resp.error.retryable = true;\n        }\n      }\n    });\n    add('CLOCK_SKEWED', 'retry', function CLOCK_SKEWED(resp) {\n      if (!resp.error) return;\n      if (this.service.clockSkewError(resp.error) && this.service.config.correctClockSkew) {\n        resp.error.retryable = true;\n      }\n    });\n    add('REDIRECT', 'retry', function REDIRECT(resp) {\n      if (resp.error && resp.error.statusCode >= 300 && resp.error.statusCode < 400 && resp.httpResponse.headers['location']) {\n        this.httpRequest.endpoint = new AWS.Endpoint(resp.httpResponse.headers['location']);\n        this.httpRequest.headers['Host'] = this.httpRequest.endpoint.host;\n        resp.error.redirect = true;\n        resp.error.retryable = true;\n      }\n    });\n    add('RETRY_CHECK', 'retry', function RETRY_CHECK(resp) {\n      if (resp.error) {\n        if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.error.retryDelay = 0;\n        } else if (resp.retryCount < resp.maxRetries) {\n          resp.error.retryDelay = this.service.retryDelays(resp.retryCount, resp.error) || 0;\n        }\n      }\n    });\n    addAsync('RESET_RETRY_STATE', 'afterRetry', function RESET_RETRY_STATE(resp, done) {\n      var delay,\n        willRetry = false;\n      if (resp.error) {\n        delay = resp.error.retryDelay || 0;\n        if (resp.error.retryable && resp.retryCount < resp.maxRetries) {\n          resp.retryCount++;\n          willRetry = true;\n        } else if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.redirectCount++;\n          willRetry = true;\n        }\n      }\n\n      // delay < 0 is a signal from customBackoff to skip retries\n      if (willRetry && delay >= 0) {\n        resp.error = null;\n        setTimeout(done, delay);\n      } else {\n        done();\n      }\n    });\n  }),\n  CorePost: new SequentialExecutor().addNamedListeners(function (add) {\n    add('EXTRACT_REQUEST_ID', 'extractData', AWS.util.extractRequestId);\n    add('EXTRACT_REQUEST_ID', 'extractError', AWS.util.extractRequestId);\n    add('ENOTFOUND_ERROR', 'httpError', function ENOTFOUND_ERROR(err) {\n      function isDNSError(err) {\n        return err.errno === 'ENOTFOUND' || typeof err.errno === 'number' && typeof AWS.util.getSystemErrorName === 'function' && ['EAI_NONAME', 'EAI_NODATA'].indexOf(AWS.util.getSystemErrorName(err.errno) >= 0);\n      }\n      if (err.code === 'NetworkingError' && isDNSError(err)) {\n        var message = 'Inaccessible host: `' + err.hostname + '\\' at port `' + err.port + '\\'. This service may not be available in the `' + err.region + '\\' region.';\n        this.response.error = AWS.util.error(new Error(message), {\n          code: 'UnknownEndpoint',\n          region: err.region,\n          hostname: err.hostname,\n          retryable: true,\n          originalError: err\n        });\n      }\n    });\n  }),\n  Logger: new SequentialExecutor().addNamedListeners(function (add) {\n    add('LOG_REQUEST', 'complete', function LOG_REQUEST(resp) {\n      var req = resp.request;\n      var logger = req.service.config.logger;\n      if (!logger) return;\n      function filterSensitiveLog(inputShape, shape) {\n        if (!shape) {\n          return shape;\n        }\n        if (inputShape.isSensitive) {\n          return '***SensitiveInformation***';\n        }\n        switch (inputShape.type) {\n          case 'structure':\n            var struct = {};\n            AWS.util.each(shape, function (subShapeName, subShape) {\n              if (Object.prototype.hasOwnProperty.call(inputShape.members, subShapeName)) {\n                struct[subShapeName] = filterSensitiveLog(inputShape.members[subShapeName], subShape);\n              } else {\n                struct[subShapeName] = subShape;\n              }\n            });\n            return struct;\n          case 'list':\n            var list = [];\n            AWS.util.arrayEach(shape, function (subShape, index) {\n              list.push(filterSensitiveLog(inputShape.member, subShape));\n            });\n            return list;\n          case 'map':\n            var map = {};\n            AWS.util.each(shape, function (key, value) {\n              map[key] = filterSensitiveLog(inputShape.value, value);\n            });\n            return map;\n          default:\n            return shape;\n        }\n      }\n      function buildMessage() {\n        var time = resp.request.service.getSkewCorrectedDate().getTime();\n        var delta = (time - req.startTime.getTime()) / 1000;\n        var ansi = logger.isTTY ? true : false;\n        var status = resp.httpResponse.statusCode;\n        var censoredParams = req.params;\n        if (req.service.api.operations && req.service.api.operations[req.operation] && req.service.api.operations[req.operation].input) {\n          var inputShape = req.service.api.operations[req.operation].input;\n          censoredParams = filterSensitiveLog(inputShape, req.params);\n        }\n        var params = require('util').inspect(censoredParams, true, null);\n        var message = '';\n        if (ansi) message += '\\x1B[33m';\n        message += '[AWS ' + req.service.serviceIdentifier + ' ' + status;\n        message += ' ' + delta.toString() + 's ' + resp.retryCount + ' retries]';\n        if (ansi) message += '\\x1B[0;1m';\n        message += ' ' + AWS.util.string.lowerFirst(req.operation);\n        message += '(' + params + ')';\n        if (ansi) message += '\\x1B[0m';\n        return message;\n      }\n      var line = buildMessage();\n      if (typeof logger.log === 'function') {\n        logger.log(line);\n      } else if (typeof logger.write === 'function') {\n        logger.write(line + '\\n');\n      }\n    });\n  }),\n  Json: new SequentialExecutor().addNamedListeners(function (add) {\n    var svc = require('./protocol/json');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n  Rest: new SequentialExecutor().addNamedListeners(function (add) {\n    var svc = require('./protocol/rest');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n  RestJson: new SequentialExecutor().addNamedListeners(function (add) {\n    var svc = require('./protocol/rest_json');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n    add('UNSET_CONTENT_LENGTH', 'afterBuild', svc.unsetContentLength);\n  }),\n  RestXml: new SequentialExecutor().addNamedListeners(function (add) {\n    var svc = require('./protocol/rest_xml');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n  Query: new SequentialExecutor().addNamedListeners(function (add) {\n    var svc = require('./protocol/query');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  })\n};","map":{"version":3,"names":["AWS","require","SequentialExecutor","DISCOVER_ENDPOINT","discoverEndpoint","EventListeners","Core","getOperationAuthtype","req","service","api","operations","operation","authtype","getIdentityType","config","signatureVersion","addNamedListeners","add","addAsync","VALIDATE_CREDENTIALS","done","identityType","getToken","err","response","error","util","code","getCredentials","message","VALIDATE_REGION","isGlobalEndpoint","dnsHostRegex","RegExp","region","Error","test","BUILD_IDEMPOTENCY_TOKENS","idempotentMembers","length","params","copy","i","iLen","uuid","v4","VALIDATE_PARAMETERS","rules","input","validation","paramValidation","ParamValidator","validate","COMPUTE_CHECKSUM","body","httpRequest","isNonStreamingPayload","Buffer","isBuffer","headers","httpChecksumRequired","computeChecksums","md5","crypto","COMPUTE_SHA256","haltHandlersOnError","getSignerClass","Signers","V4","indexOf","computeSha256","sha","SET_CONTENT_LENGTH","payloadMember","getRequestPayloadShape","undefined","string","byteLength","isStreaming","requiresLength","SET_HTTP_HOST","endpoint","host","SET_TRACE_ID","traceIdHeaderName","isNode","Object","hasOwnProperty","call","ENV_LAMBDA_FUNCTION_NAME","ENV_TRACE_ID","functionName","process","env","traceId","RESTART","retryable","HttpRequest","retryCount","maxRetries","addToHead","SIGN","token","SignerClass","signer","addAuthorization","e","credentials","date","getSkewCorrectedDate","getSigningName","signatureCache","setServiceClientId","_clientId","signedAt","VALIDATE_RESPONSE","resp","successfulResponse","data","ERROR","awsQueryCompatible","request","httpResponse","queryErrorCode","includes","split","SEND","_abortCallback","callback","httpResp","stream","operationName","on","onHeaders","statusCode","statusMessage","emit","streaming","HttpClient","streamsApiVersion","hasEventOutput","onReadable","read","onData","onEnd","didCallback","progress","onSendProgress","value","onReceiveProgress","errCode","hostname","executeSend","http","getInstance","httpOptions","handleRequest","timeDiff","HTTP_HEADERS","buffer","toBuffer","buffers","numBytes","dateHeader","Date","serverTime","parse","correctClockSkew","isClockSkewed","applyClockOffset","HTTP_DATA","chunk","total","loaded","push","HTTP_DONE","concat","FINALIZE_ERROR","retryableError","INVALIDATE_CREDENTIALS","expired","EXPIRED_SIGNATURE","match","CLOCK_SKEWED","clockSkewError","REDIRECT","Endpoint","redirect","RETRY_CHECK","redirectCount","maxRedirects","retryDelay","retryDelays","RESET_RETRY_STATE","delay","willRetry","setTimeout","CorePost","extractRequestId","ENOTFOUND_ERROR","isDNSError","errno","getSystemErrorName","port","originalError","Logger","LOG_REQUEST","logger","filterSensitiveLog","inputShape","shape","isSensitive","type","struct","each","subShapeName","subShape","prototype","members","list","arrayEach","index","member","map","key","buildMessage","time","getTime","delta","startTime","ansi","isTTY","status","censoredParams","inspect","serviceIdentifier","toString","lowerFirst","line","log","write","Json","svc","buildRequest","extractData","extractError","Rest","RestJson","unsetContentLength","RestXml","Query"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/lib/event_listeners.js"],"sourcesContent":["var AWS = require('./core');\nvar SequentialExecutor = require('./sequential_executor');\nvar DISCOVER_ENDPOINT = require('./discover_endpoint').discoverEndpoint;\n/**\n * The namespace used to register global event listeners for request building\n * and sending.\n */\nAWS.EventListeners = {\n  /**\n   * @!attribute VALIDATE_CREDENTIALS\n   *   A request listener that validates whether the request is being\n   *   sent with credentials.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating credentials\n   *     var listener = AWS.EventListeners.Core.VALIDATE_CREDENTIALS;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_REGION\n   *   A request listener that validates whether the region is set\n   *   for a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating region configuration\n   *     var listener = AWS.EventListeners.Core.VALIDATE_REGION;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_PARAMETERS\n   *   A request listener that validates input parameters in a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating parameters\n   *     var listener = AWS.EventListeners.Core.VALIDATE_PARAMETERS;\n   *     request.removeListener('validate', listener);\n   *   @example Disable parameter validation globally\n   *     AWS.EventListeners.Core.removeListener('validate',\n   *       AWS.EventListeners.Core.VALIDATE_REGION);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute SEND\n   *   A request listener that initiates the HTTP connection for a\n   *   request being sent. Handles the {AWS.Request~send 'send' Request event}\n   *   @example Replacing the HTTP handler\n   *     var listener = AWS.EventListeners.Core.SEND;\n   *     request.removeListener('send', listener);\n   *     request.on('send', function(response) {\n   *       customHandler.send(response);\n   *     });\n   *   @return [Function]\n   *   @readonly\n   * @!attribute HTTP_DATA\n   *   A request listener that reads data from the HTTP connection in order\n   *   to build the response data.\n   *   Handles the {AWS.Request~httpData 'httpData' Request event}.\n   *   Remove this handler if you are overriding the 'httpData' event and\n   *   do not want extra data processing and buffering overhead.\n   *   @example Disabling default data processing\n   *     var listener = AWS.EventListeners.Core.HTTP_DATA;\n   *     request.removeListener('httpData', listener);\n   *   @return [Function]\n   *   @readonly\n   */\n  Core: {} /* doc hack */\n};\n\n/**\n * @api private\n */\nfunction getOperationAuthtype(req) {\n  if (!req.service.api.operations) {\n    return '';\n  }\n  var operation = req.service.api.operations[req.operation];\n  return operation ? operation.authtype : '';\n}\n\n/**\n * @api private\n */\nfunction getIdentityType(req) {\n  var service = req.service;\n\n  if (service.config.signatureVersion) {\n    return service.config.signatureVersion;\n  }\n\n  if (service.api.signatureVersion) {\n    return service.api.signatureVersion;\n  }\n\n  return getOperationAuthtype(req);\n}\n\nAWS.EventListeners = {\n  Core: new SequentialExecutor().addNamedListeners(function(add, addAsync) {\n    addAsync(\n      'VALIDATE_CREDENTIALS', 'validate',\n      function VALIDATE_CREDENTIALS(req, done) {\n        if (!req.service.api.signatureVersion && !req.service.config.signatureVersion) return done(); // none\n\n        var identityType = getIdentityType(req);\n        if (identityType === 'bearer') {\n          req.service.config.getToken(function(err) {\n            if (err) {\n              req.response.error = AWS.util.error(err, {code: 'TokenError'});\n            }\n            done();\n          });\n          return;\n        }\n\n        req.service.config.getCredentials(function(err) {\n          if (err) {\n            req.response.error = AWS.util.error(err,\n              {\n                code: 'CredentialsError',\n                message: 'Missing credentials in config, if using AWS_CONFIG_FILE, set AWS_SDK_LOAD_CONFIG=1'\n              }\n            );\n          }\n          done();\n        });\n    });\n\n    add('VALIDATE_REGION', 'validate', function VALIDATE_REGION(req) {\n      if (!req.service.isGlobalEndpoint) {\n        var dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n        if (!req.service.config.region) {\n          req.response.error = AWS.util.error(new Error(),\n            {code: 'ConfigError', message: 'Missing region in config'});\n        } else if (!dnsHostRegex.test(req.service.config.region)) {\n          req.response.error = AWS.util.error(new Error(),\n            {code: 'ConfigError', message: 'Invalid region in config'});\n        }\n      }\n    });\n\n    add('BUILD_IDEMPOTENCY_TOKENS', 'validate', function BUILD_IDEMPOTENCY_TOKENS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      if (!operation) {\n        return;\n      }\n      var idempotentMembers = operation.idempotentMembers;\n      if (!idempotentMembers.length) {\n        return;\n      }\n      // creates a copy of params so user's param object isn't mutated\n      var params = AWS.util.copy(req.params);\n      for (var i = 0, iLen = idempotentMembers.length; i < iLen; i++) {\n        if (!params[idempotentMembers[i]]) {\n          // add the member\n          params[idempotentMembers[i]] = AWS.util.uuid.v4();\n        }\n      }\n      req.params = params;\n    });\n\n    add('VALIDATE_PARAMETERS', 'validate', function VALIDATE_PARAMETERS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var rules = req.service.api.operations[req.operation].input;\n      var validation = req.service.config.paramValidation;\n      new AWS.ParamValidator(validation).validate(rules, req.params);\n    });\n\n    add('COMPUTE_CHECKSUM', 'afterBuild', function COMPUTE_CHECKSUM(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      if (!operation) {\n        return;\n      }\n      var body = req.httpRequest.body;\n      var isNonStreamingPayload = body && (AWS.util.Buffer.isBuffer(body) || typeof body === 'string');\n      var headers = req.httpRequest.headers;\n      if (\n        operation.httpChecksumRequired &&\n        req.service.config.computeChecksums &&\n        isNonStreamingPayload &&\n        !headers['Content-MD5']\n      ) {\n        var md5 = AWS.util.crypto.md5(body, 'base64');\n        headers['Content-MD5'] = md5;\n      }\n    });\n\n    addAsync('COMPUTE_SHA256', 'afterBuild', function COMPUTE_SHA256(req, done) {\n      req.haltHandlersOnError();\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      var authtype = operation ? operation.authtype : '';\n      if (!req.service.api.signatureVersion && !authtype && !req.service.config.signatureVersion) return done(); // none\n      if (req.service.getSignerClass(req) === AWS.Signers.V4) {\n        var body = req.httpRequest.body || '';\n        if (authtype.indexOf('unsigned-body') >= 0) {\n          req.httpRequest.headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';\n          return done();\n        }\n        AWS.util.computeSha256(body, function(err, sha) {\n          if (err) {\n            done(err);\n          }\n          else {\n            req.httpRequest.headers['X-Amz-Content-Sha256'] = sha;\n            done();\n          }\n        });\n      } else {\n        done();\n      }\n    });\n\n    add('SET_CONTENT_LENGTH', 'afterBuild', function SET_CONTENT_LENGTH(req) {\n      var authtype = getOperationAuthtype(req);\n      var payloadMember = AWS.util.getRequestPayloadShape(req);\n      if (req.httpRequest.headers['Content-Length'] === undefined) {\n        try {\n          var length = AWS.util.string.byteLength(req.httpRequest.body);\n          req.httpRequest.headers['Content-Length'] = length;\n        } catch (err) {\n          if (payloadMember && payloadMember.isStreaming) {\n            if (payloadMember.requiresLength) {\n              //streaming payload requires length(s3, glacier)\n              throw err;\n            } else if (authtype.indexOf('unsigned-body') >= 0) {\n              //unbounded streaming payload(lex, mediastore)\n              req.httpRequest.headers['Transfer-Encoding'] = 'chunked';\n              return;\n            } else {\n              throw err;\n            }\n          }\n          throw err;\n        }\n      }\n    });\n\n    add('SET_HTTP_HOST', 'afterBuild', function SET_HTTP_HOST(req) {\n      req.httpRequest.headers['Host'] = req.httpRequest.endpoint.host;\n    });\n\n    add('SET_TRACE_ID', 'afterBuild', function SET_TRACE_ID(req) {\n      var traceIdHeaderName = 'X-Amzn-Trace-Id';\n      if (AWS.util.isNode() && !Object.hasOwnProperty.call(req.httpRequest.headers, traceIdHeaderName)) {\n        var ENV_LAMBDA_FUNCTION_NAME = 'AWS_LAMBDA_FUNCTION_NAME';\n        var ENV_TRACE_ID = '_X_AMZN_TRACE_ID';\n        var functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n        var traceId = process.env[ENV_TRACE_ID];\n        if (\n          typeof functionName === 'string' &&\n          functionName.length > 0 &&\n          typeof traceId === 'string' &&\n          traceId.length > 0\n        ) {\n          req.httpRequest.headers[traceIdHeaderName] = traceId;\n        }\n      }\n    });\n\n    add('RESTART', 'restart', function RESTART() {\n      var err = this.response.error;\n      if (!err || !err.retryable) return;\n\n      this.httpRequest = new AWS.HttpRequest(\n        this.service.endpoint,\n        this.service.region\n      );\n\n      if (this.response.retryCount < this.service.config.maxRetries) {\n        this.response.retryCount++;\n      } else {\n        this.response.error = null;\n      }\n    });\n\n    var addToHead = true;\n    addAsync('DISCOVER_ENDPOINT', 'sign', DISCOVER_ENDPOINT, addToHead);\n\n    addAsync('SIGN', 'sign', function SIGN(req, done) {\n      var service = req.service;\n      var identityType = getIdentityType(req);\n      if (!identityType || identityType.length === 0) return done(); // none\n\n      if (identityType === 'bearer') {\n        service.config.getToken(function (err, token) {\n          if (err) {\n            req.response.error = err;\n            return done();\n          }\n\n          try {\n            var SignerClass = service.getSignerClass(req);\n            var signer = new SignerClass(req.httpRequest);\n            signer.addAuthorization(token);\n          } catch (e) {\n            req.response.error = e;\n          }\n          done();\n        });\n      } else {\n        service.config.getCredentials(function (err, credentials) {\n          if (err) {\n            req.response.error = err;\n            return done();\n          }\n\n          try {\n            var date = service.getSkewCorrectedDate();\n            var SignerClass = service.getSignerClass(req);\n            var operations = req.service.api.operations || {};\n            var operation = operations[req.operation];\n            var signer = new SignerClass(req.httpRequest,\n              service.getSigningName(req),\n              {\n                signatureCache: service.config.signatureCache,\n                operation: operation,\n                signatureVersion: service.api.signatureVersion\n              });\n            signer.setServiceClientId(service._clientId);\n\n            // clear old authorization headers\n            delete req.httpRequest.headers['Authorization'];\n            delete req.httpRequest.headers['Date'];\n            delete req.httpRequest.headers['X-Amz-Date'];\n\n            // add new authorization\n            signer.addAuthorization(credentials, date);\n            req.signedAt = date;\n          } catch (e) {\n            req.response.error = e;\n          }\n          done();\n        });\n\n      }\n    });\n\n    add('VALIDATE_RESPONSE', 'validateResponse', function VALIDATE_RESPONSE(resp) {\n      if (this.service.successfulResponse(resp, this)) {\n        resp.data = {};\n        resp.error = null;\n      } else {\n        resp.data = null;\n        resp.error = AWS.util.error(new Error(),\n          {code: 'UnknownError', message: 'An unknown error occurred.'});\n      }\n    });\n\n    add('ERROR', 'error', function ERROR(err, resp) {\n      var awsQueryCompatible = resp.request.service.api.awsQueryCompatible;\n      if (awsQueryCompatible) {\n        var headers = resp.httpResponse.headers;\n        var queryErrorCode = headers ? headers['x-amzn-query-error'] : undefined;\n        if (queryErrorCode && queryErrorCode.includes(';')) {\n          resp.error.code = queryErrorCode.split(';')[0];\n        }\n      }\n    }, true);\n\n    addAsync('SEND', 'send', function SEND(resp, done) {\n      resp.httpResponse._abortCallback = done;\n      resp.error = null;\n      resp.data = null;\n\n      function callback(httpResp) {\n        resp.httpResponse.stream = httpResp;\n        var stream = resp.request.httpRequest.stream;\n        var service = resp.request.service;\n        var api = service.api;\n        var operationName = resp.request.operation;\n        var operation = api.operations[operationName] || {};\n\n        httpResp.on('headers', function onHeaders(statusCode, headers, statusMessage) {\n          resp.request.emit(\n            'httpHeaders',\n            [statusCode, headers, resp, statusMessage]\n          );\n\n          if (!resp.httpResponse.streaming) {\n            if (AWS.HttpClient.streamsApiVersion === 2) { // streams2 API check\n              // if we detect event streams, we're going to have to\n              // return the stream immediately\n              if (operation.hasEventOutput && service.successfulResponse(resp)) {\n                // skip reading the IncomingStream\n                resp.request.emit('httpDone');\n                done();\n                return;\n              }\n\n              httpResp.on('readable', function onReadable() {\n                var data = httpResp.read();\n                if (data !== null) {\n                  resp.request.emit('httpData', [data, resp]);\n                }\n              });\n            } else { // legacy streams API\n              httpResp.on('data', function onData(data) {\n                resp.request.emit('httpData', [data, resp]);\n              });\n            }\n          }\n        });\n\n        httpResp.on('end', function onEnd() {\n          if (!stream || !stream.didCallback) {\n            if (AWS.HttpClient.streamsApiVersion === 2 && (operation.hasEventOutput && service.successfulResponse(resp))) {\n              // don't concatenate response chunks when streaming event stream data when response is successful\n              return;\n            }\n            resp.request.emit('httpDone');\n            done();\n          }\n        });\n      }\n\n      function progress(httpResp) {\n        httpResp.on('sendProgress', function onSendProgress(value) {\n          resp.request.emit('httpUploadProgress', [value, resp]);\n        });\n\n        httpResp.on('receiveProgress', function onReceiveProgress(value) {\n          resp.request.emit('httpDownloadProgress', [value, resp]);\n        });\n      }\n\n      function error(err) {\n        if (err.code !== 'RequestAbortedError') {\n          var errCode = err.code === 'TimeoutError' ? err.code : 'NetworkingError';\n          err = AWS.util.error(err, {\n            code: errCode,\n            region: resp.request.httpRequest.region,\n            hostname: resp.request.httpRequest.endpoint.hostname,\n            retryable: true\n          });\n        }\n        resp.error = err;\n        resp.request.emit('httpError', [resp.error, resp], function() {\n          done();\n        });\n      }\n\n      function executeSend() {\n        var http = AWS.HttpClient.getInstance();\n        var httpOptions = resp.request.service.config.httpOptions || {};\n        try {\n          var stream = http.handleRequest(resp.request.httpRequest, httpOptions,\n                                          callback, error);\n          progress(stream);\n        } catch (err) {\n          error(err);\n        }\n      }\n      var timeDiff = (resp.request.service.getSkewCorrectedDate() - this.signedAt) / 1000;\n      if (timeDiff >= 60 * 10) { // if we signed 10min ago, re-sign\n        this.emit('sign', [this], function(err) {\n          if (err) done(err);\n          else executeSend();\n        });\n      } else {\n        executeSend();\n      }\n    });\n\n    add('HTTP_HEADERS', 'httpHeaders',\n        function HTTP_HEADERS(statusCode, headers, resp, statusMessage) {\n      resp.httpResponse.statusCode = statusCode;\n      resp.httpResponse.statusMessage = statusMessage;\n      resp.httpResponse.headers = headers;\n      resp.httpResponse.body = AWS.util.buffer.toBuffer('');\n      resp.httpResponse.buffers = [];\n      resp.httpResponse.numBytes = 0;\n      var dateHeader = headers.date || headers.Date;\n      var service = resp.request.service;\n      if (dateHeader) {\n        var serverTime = Date.parse(dateHeader);\n        if (service.config.correctClockSkew\n            && service.isClockSkewed(serverTime)) {\n          service.applyClockOffset(serverTime);\n        }\n      }\n    });\n\n    add('HTTP_DATA', 'httpData', function HTTP_DATA(chunk, resp) {\n      if (chunk) {\n        if (AWS.util.isNode()) {\n          resp.httpResponse.numBytes += chunk.length;\n\n          var total = resp.httpResponse.headers['content-length'];\n          var progress = { loaded: resp.httpResponse.numBytes, total: total };\n          resp.request.emit('httpDownloadProgress', [progress, resp]);\n        }\n\n        resp.httpResponse.buffers.push(AWS.util.buffer.toBuffer(chunk));\n      }\n    });\n\n    add('HTTP_DONE', 'httpDone', function HTTP_DONE(resp) {\n      // convert buffers array into single buffer\n      if (resp.httpResponse.buffers && resp.httpResponse.buffers.length > 0) {\n        var body = AWS.util.buffer.concat(resp.httpResponse.buffers);\n        resp.httpResponse.body = body;\n      }\n      delete resp.httpResponse.numBytes;\n      delete resp.httpResponse.buffers;\n    });\n\n    add('FINALIZE_ERROR', 'retry', function FINALIZE_ERROR(resp) {\n      if (resp.httpResponse.statusCode) {\n        resp.error.statusCode = resp.httpResponse.statusCode;\n        if (resp.error.retryable === undefined) {\n          resp.error.retryable = this.service.retryableError(resp.error, this);\n        }\n      }\n    });\n\n    add('INVALIDATE_CREDENTIALS', 'retry', function INVALIDATE_CREDENTIALS(resp) {\n      if (!resp.error) return;\n      switch (resp.error.code) {\n        case 'RequestExpired': // EC2 only\n        case 'ExpiredTokenException':\n        case 'ExpiredToken':\n          resp.error.retryable = true;\n          resp.request.service.config.credentials.expired = true;\n      }\n    });\n\n    add('EXPIRED_SIGNATURE', 'retry', function EXPIRED_SIGNATURE(resp) {\n      var err = resp.error;\n      if (!err) return;\n      if (typeof err.code === 'string' && typeof err.message === 'string') {\n        if (err.code.match(/Signature/) && err.message.match(/expired/)) {\n          resp.error.retryable = true;\n        }\n      }\n    });\n\n    add('CLOCK_SKEWED', 'retry', function CLOCK_SKEWED(resp) {\n      if (!resp.error) return;\n      if (this.service.clockSkewError(resp.error)\n          && this.service.config.correctClockSkew) {\n        resp.error.retryable = true;\n      }\n    });\n\n    add('REDIRECT', 'retry', function REDIRECT(resp) {\n      if (resp.error && resp.error.statusCode >= 300 &&\n          resp.error.statusCode < 400 && resp.httpResponse.headers['location']) {\n        this.httpRequest.endpoint =\n          new AWS.Endpoint(resp.httpResponse.headers['location']);\n        this.httpRequest.headers['Host'] = this.httpRequest.endpoint.host;\n        resp.error.redirect = true;\n        resp.error.retryable = true;\n      }\n    });\n\n    add('RETRY_CHECK', 'retry', function RETRY_CHECK(resp) {\n      if (resp.error) {\n        if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.error.retryDelay = 0;\n        } else if (resp.retryCount < resp.maxRetries) {\n          resp.error.retryDelay = this.service.retryDelays(resp.retryCount, resp.error) || 0;\n        }\n      }\n    });\n\n    addAsync('RESET_RETRY_STATE', 'afterRetry', function RESET_RETRY_STATE(resp, done) {\n      var delay, willRetry = false;\n\n      if (resp.error) {\n        delay = resp.error.retryDelay || 0;\n        if (resp.error.retryable && resp.retryCount < resp.maxRetries) {\n          resp.retryCount++;\n          willRetry = true;\n        } else if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.redirectCount++;\n          willRetry = true;\n        }\n      }\n\n      // delay < 0 is a signal from customBackoff to skip retries\n      if (willRetry && delay >= 0) {\n        resp.error = null;\n        setTimeout(done, delay);\n      } else {\n        done();\n      }\n    });\n  }),\n\n  CorePost: new SequentialExecutor().addNamedListeners(function(add) {\n    add('EXTRACT_REQUEST_ID', 'extractData', AWS.util.extractRequestId);\n    add('EXTRACT_REQUEST_ID', 'extractError', AWS.util.extractRequestId);\n\n    add('ENOTFOUND_ERROR', 'httpError', function ENOTFOUND_ERROR(err) {\n      function isDNSError(err) {\n        return err.errno === 'ENOTFOUND' ||\n          typeof err.errno === 'number' &&\n          typeof AWS.util.getSystemErrorName === 'function' &&\n          ['EAI_NONAME', 'EAI_NODATA'].indexOf(AWS.util.getSystemErrorName(err.errno) >= 0);\n      }\n      if (err.code === 'NetworkingError' && isDNSError(err)) {\n        var message = 'Inaccessible host: `' + err.hostname + '\\' at port `' + err.port +\n          '\\'. This service may not be available in the `' + err.region +\n          '\\' region.';\n        this.response.error = AWS.util.error(new Error(message), {\n          code: 'UnknownEndpoint',\n          region: err.region,\n          hostname: err.hostname,\n          retryable: true,\n          originalError: err\n        });\n      }\n    });\n  }),\n\n  Logger: new SequentialExecutor().addNamedListeners(function(add) {\n    add('LOG_REQUEST', 'complete', function LOG_REQUEST(resp) {\n      var req = resp.request;\n      var logger = req.service.config.logger;\n      if (!logger) return;\n      function filterSensitiveLog(inputShape, shape) {\n        if (!shape) {\n          return shape;\n        }\n        if (inputShape.isSensitive) {\n          return '***SensitiveInformation***';\n        }\n        switch (inputShape.type) {\n          case 'structure':\n            var struct = {};\n            AWS.util.each(shape, function(subShapeName, subShape) {\n              if (Object.prototype.hasOwnProperty.call(inputShape.members, subShapeName)) {\n                struct[subShapeName] = filterSensitiveLog(inputShape.members[subShapeName], subShape);\n              } else {\n                struct[subShapeName] = subShape;\n              }\n            });\n            return struct;\n          case 'list':\n            var list = [];\n            AWS.util.arrayEach(shape, function(subShape, index) {\n              list.push(filterSensitiveLog(inputShape.member, subShape));\n            });\n            return list;\n          case 'map':\n            var map = {};\n            AWS.util.each(shape, function(key, value) {\n              map[key] = filterSensitiveLog(inputShape.value, value);\n            });\n            return map;\n          default:\n            return shape;\n        }\n      }\n\n      function buildMessage() {\n        var time = resp.request.service.getSkewCorrectedDate().getTime();\n        var delta = (time - req.startTime.getTime()) / 1000;\n        var ansi = logger.isTTY ? true : false;\n        var status = resp.httpResponse.statusCode;\n        var censoredParams = req.params;\n        if (\n          req.service.api.operations &&\n              req.service.api.operations[req.operation] &&\n              req.service.api.operations[req.operation].input\n        ) {\n          var inputShape = req.service.api.operations[req.operation].input;\n          censoredParams = filterSensitiveLog(inputShape, req.params);\n        }\n        var params = require('util').inspect(censoredParams, true, null);\n        var message = '';\n        if (ansi) message += '\\x1B[33m';\n        message += '[AWS ' + req.service.serviceIdentifier + ' ' + status;\n        message += ' ' + delta.toString() + 's ' + resp.retryCount + ' retries]';\n        if (ansi) message += '\\x1B[0;1m';\n        message += ' ' + AWS.util.string.lowerFirst(req.operation);\n        message += '(' + params + ')';\n        if (ansi) message += '\\x1B[0m';\n        return message;\n      }\n\n      var line = buildMessage();\n      if (typeof logger.log === 'function') {\n        logger.log(line);\n      } else if (typeof logger.write === 'function') {\n        logger.write(line + '\\n');\n      }\n    });\n  }),\n\n  Json: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/json');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  Rest: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  RestJson: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest_json');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n    add('UNSET_CONTENT_LENGTH', 'afterBuild', svc.unsetContentLength);\n  }),\n\n  RestXml: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/rest_xml');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  Query: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = require('./protocol/query');\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  })\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}