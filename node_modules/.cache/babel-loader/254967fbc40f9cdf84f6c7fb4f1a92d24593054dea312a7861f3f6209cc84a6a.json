{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nfunction rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n  return getRandomValues(rnds8);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","rng","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","Error"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/node_modules/uuid/dist/rng-browser.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nfunction rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA,IAAIC,eAAe,GAAG,OAAOC,MAAM,IAAI,WAAW,IAAIA,MAAM,CAACD,eAAe,IAAIC,MAAM,CAACD,eAAe,CAACE,IAAI,CAACD,MAAM,CAAC,IAAI,OAAOE,QAAQ,IAAI,WAAW,IAAI,OAAOA,QAAQ,CAACH,eAAe,IAAI,UAAU,IAAIG,QAAQ,CAACH,eAAe,CAACE,IAAI,CAACC,QAAQ,CAAC;AACjP,IAAIC,KAAK,GAAG,IAAIC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEhC,SAASN,GAAGA,CAAA,EAAG;EACb,IAAI,CAACC,eAAe,EAAE;IACpB,MAAM,IAAIM,KAAK,CAAC,0GAA0G,CAAC;EAC7H;EAEA,OAAON,eAAe,CAACI,KAAK,CAAC;AAC/B"},"metadata":{},"sourceType":"script","externalDependencies":[]}