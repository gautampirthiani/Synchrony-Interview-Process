{"ast":null,"code":"var AWS = require('../core');\nvar v4Credentials = require('./v4_credentials');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nvar expiresHeader = 'presigned-expires';\n\n/**\n * @api private\n */\nAWS.Signers.V4 = inherit(AWS.Signers.RequestSigner, {\n  constructor: function V4(request, serviceName, options) {\n    AWS.Signers.RequestSigner.call(this, request);\n    this.serviceName = serviceName;\n    options = options || {};\n    this.signatureCache = typeof options.signatureCache === 'boolean' ? options.signatureCache : true;\n    this.operation = options.operation;\n    this.signatureVersion = options.signatureVersion;\n  },\n  algorithm: 'AWS4-HMAC-SHA256',\n  addAuthorization: function addAuthorization(credentials, date) {\n    var datetime = AWS.util.date.iso8601(date).replace(/[:\\-]|\\.\\d{3}/g, '');\n    if (this.isPresigned()) {\n      this.updateForPresigned(credentials, datetime);\n    } else {\n      this.addHeaders(credentials, datetime);\n    }\n    this.request.headers['Authorization'] = this.authorization(credentials, datetime);\n  },\n  addHeaders: function addHeaders(credentials, datetime) {\n    this.request.headers['X-Amz-Date'] = datetime;\n    if (credentials.sessionToken) {\n      this.request.headers['x-amz-security-token'] = credentials.sessionToken;\n    }\n  },\n  updateForPresigned: function updateForPresigned(credentials, datetime) {\n    var credString = this.credentialString(datetime);\n    var qs = {\n      'X-Amz-Date': datetime,\n      'X-Amz-Algorithm': this.algorithm,\n      'X-Amz-Credential': credentials.accessKeyId + '/' + credString,\n      'X-Amz-Expires': this.request.headers[expiresHeader],\n      'X-Amz-SignedHeaders': this.signedHeaders()\n    };\n    if (credentials.sessionToken) {\n      qs['X-Amz-Security-Token'] = credentials.sessionToken;\n    }\n    if (this.request.headers['Content-Type']) {\n      qs['Content-Type'] = this.request.headers['Content-Type'];\n    }\n    if (this.request.headers['Content-MD5']) {\n      qs['Content-MD5'] = this.request.headers['Content-MD5'];\n    }\n    if (this.request.headers['Cache-Control']) {\n      qs['Cache-Control'] = this.request.headers['Cache-Control'];\n    }\n\n    // need to pull in any other X-Amz-* headers\n    AWS.util.each.call(this, this.request.headers, function (key, value) {\n      if (key === expiresHeader) return;\n      if (this.isSignableHeader(key)) {\n        var lowerKey = key.toLowerCase();\n        // Metadata should be normalized\n        if (lowerKey.indexOf('x-amz-meta-') === 0) {\n          qs[lowerKey] = value;\n        } else if (lowerKey.indexOf('x-amz-') === 0) {\n          qs[key] = value;\n        }\n      }\n    });\n    var sep = this.request.path.indexOf('?') >= 0 ? '&' : '?';\n    this.request.path += sep + AWS.util.queryParamsToString(qs);\n  },\n  authorization: function authorization(credentials, datetime) {\n    var parts = [];\n    var credString = this.credentialString(datetime);\n    parts.push(this.algorithm + ' Credential=' + credentials.accessKeyId + '/' + credString);\n    parts.push('SignedHeaders=' + this.signedHeaders());\n    parts.push('Signature=' + this.signature(credentials, datetime));\n    return parts.join(', ');\n  },\n  signature: function signature(credentials, datetime) {\n    var signingKey = v4Credentials.getSigningKey(credentials, datetime.substr(0, 8), this.request.region, this.serviceName, this.signatureCache);\n    return AWS.util.crypto.hmac(signingKey, this.stringToSign(datetime), 'hex');\n  },\n  stringToSign: function stringToSign(datetime) {\n    var parts = [];\n    parts.push('AWS4-HMAC-SHA256');\n    parts.push(datetime);\n    parts.push(this.credentialString(datetime));\n    parts.push(this.hexEncodedHash(this.canonicalString()));\n    return parts.join('\\n');\n  },\n  canonicalString: function canonicalString() {\n    var parts = [],\n      pathname = this.request.pathname();\n    if (this.serviceName !== 's3' && this.signatureVersion !== 's3v4') pathname = AWS.util.uriEscapePath(pathname);\n    parts.push(this.request.method);\n    parts.push(pathname);\n    parts.push(this.request.search());\n    parts.push(this.canonicalHeaders() + '\\n');\n    parts.push(this.signedHeaders());\n    parts.push(this.hexEncodedBodyHash());\n    return parts.join('\\n');\n  },\n  canonicalHeaders: function canonicalHeaders() {\n    var headers = [];\n    AWS.util.each.call(this, this.request.headers, function (key, item) {\n      headers.push([key, item]);\n    });\n    headers.sort(function (a, b) {\n      return a[0].toLowerCase() < b[0].toLowerCase() ? -1 : 1;\n    });\n    var parts = [];\n    AWS.util.arrayEach.call(this, headers, function (item) {\n      var key = item[0].toLowerCase();\n      if (this.isSignableHeader(key)) {\n        var value = item[1];\n        if (typeof value === 'undefined' || value === null || typeof value.toString !== 'function') {\n          throw AWS.util.error(new Error('Header ' + key + ' contains invalid value'), {\n            code: 'InvalidHeader'\n          });\n        }\n        parts.push(key + ':' + this.canonicalHeaderValues(value.toString()));\n      }\n    });\n    return parts.join('\\n');\n  },\n  canonicalHeaderValues: function canonicalHeaderValues(values) {\n    return values.replace(/\\s+/g, ' ').replace(/^\\s+|\\s+$/g, '');\n  },\n  signedHeaders: function signedHeaders() {\n    var keys = [];\n    AWS.util.each.call(this, this.request.headers, function (key) {\n      key = key.toLowerCase();\n      if (this.isSignableHeader(key)) keys.push(key);\n    });\n    return keys.sort().join(';');\n  },\n  credentialString: function credentialString(datetime) {\n    return v4Credentials.createScope(datetime.substr(0, 8), this.request.region, this.serviceName);\n  },\n  hexEncodedHash: function hash(string) {\n    return AWS.util.crypto.sha256(string, 'hex');\n  },\n  hexEncodedBodyHash: function hexEncodedBodyHash() {\n    var request = this.request;\n    if (this.isPresigned() && ['s3', 's3-object-lambda'].indexOf(this.serviceName) > -1 && !request.body) {\n      return 'UNSIGNED-PAYLOAD';\n    } else if (request.headers['X-Amz-Content-Sha256']) {\n      return request.headers['X-Amz-Content-Sha256'];\n    } else {\n      return this.hexEncodedHash(this.request.body || '');\n    }\n  },\n  unsignableHeaders: ['authorization', 'content-type', 'content-length', 'user-agent', expiresHeader, 'expect', 'x-amzn-trace-id'],\n  isSignableHeader: function isSignableHeader(key) {\n    if (key.toLowerCase().indexOf('x-amz-') === 0) return true;\n    return this.unsignableHeaders.indexOf(key) < 0;\n  },\n  isPresigned: function isPresigned() {\n    return this.request.headers[expiresHeader] ? true : false;\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V4;","map":{"version":3,"names":["AWS","require","v4Credentials","inherit","util","expiresHeader","Signers","V4","RequestSigner","constructor","request","serviceName","options","call","signatureCache","operation","signatureVersion","algorithm","addAuthorization","credentials","date","datetime","iso8601","replace","isPresigned","updateForPresigned","addHeaders","headers","authorization","sessionToken","credString","credentialString","qs","accessKeyId","signedHeaders","each","key","value","isSignableHeader","lowerKey","toLowerCase","indexOf","sep","path","queryParamsToString","parts","push","signature","join","signingKey","getSigningKey","substr","region","crypto","hmac","stringToSign","hexEncodedHash","canonicalString","pathname","uriEscapePath","method","search","canonicalHeaders","hexEncodedBodyHash","item","sort","a","b","arrayEach","toString","error","Error","code","canonicalHeaderValues","values","keys","createScope","hash","string","sha256","body","unsignableHeaders","module","exports"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/lib/signers/v4.js"],"sourcesContent":["var AWS = require('../core');\nvar v4Credentials = require('./v4_credentials');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nvar expiresHeader = 'presigned-expires';\n\n/**\n * @api private\n */\nAWS.Signers.V4 = inherit(AWS.Signers.RequestSigner, {\n  constructor: function V4(request, serviceName, options) {\n    AWS.Signers.RequestSigner.call(this, request);\n    this.serviceName = serviceName;\n    options = options || {};\n    this.signatureCache = typeof options.signatureCache === 'boolean' ? options.signatureCache : true;\n    this.operation = options.operation;\n    this.signatureVersion = options.signatureVersion;\n  },\n\n  algorithm: 'AWS4-HMAC-SHA256',\n\n  addAuthorization: function addAuthorization(credentials, date) {\n    var datetime = AWS.util.date.iso8601(date).replace(/[:\\-]|\\.\\d{3}/g, '');\n\n    if (this.isPresigned()) {\n      this.updateForPresigned(credentials, datetime);\n    } else {\n      this.addHeaders(credentials, datetime);\n    }\n\n    this.request.headers['Authorization'] =\n      this.authorization(credentials, datetime);\n  },\n\n  addHeaders: function addHeaders(credentials, datetime) {\n    this.request.headers['X-Amz-Date'] = datetime;\n    if (credentials.sessionToken) {\n      this.request.headers['x-amz-security-token'] = credentials.sessionToken;\n    }\n  },\n\n  updateForPresigned: function updateForPresigned(credentials, datetime) {\n    var credString = this.credentialString(datetime);\n    var qs = {\n      'X-Amz-Date': datetime,\n      'X-Amz-Algorithm': this.algorithm,\n      'X-Amz-Credential': credentials.accessKeyId + '/' + credString,\n      'X-Amz-Expires': this.request.headers[expiresHeader],\n      'X-Amz-SignedHeaders': this.signedHeaders()\n    };\n\n    if (credentials.sessionToken) {\n      qs['X-Amz-Security-Token'] = credentials.sessionToken;\n    }\n\n    if (this.request.headers['Content-Type']) {\n      qs['Content-Type'] = this.request.headers['Content-Type'];\n    }\n    if (this.request.headers['Content-MD5']) {\n      qs['Content-MD5'] = this.request.headers['Content-MD5'];\n    }\n    if (this.request.headers['Cache-Control']) {\n      qs['Cache-Control'] = this.request.headers['Cache-Control'];\n    }\n\n    // need to pull in any other X-Amz-* headers\n    AWS.util.each.call(this, this.request.headers, function(key, value) {\n      if (key === expiresHeader) return;\n      if (this.isSignableHeader(key)) {\n        var lowerKey = key.toLowerCase();\n        // Metadata should be normalized\n        if (lowerKey.indexOf('x-amz-meta-') === 0) {\n          qs[lowerKey] = value;\n        } else if (lowerKey.indexOf('x-amz-') === 0) {\n          qs[key] = value;\n        }\n      }\n    });\n\n    var sep = this.request.path.indexOf('?') >= 0 ? '&' : '?';\n    this.request.path += sep + AWS.util.queryParamsToString(qs);\n  },\n\n  authorization: function authorization(credentials, datetime) {\n    var parts = [];\n    var credString = this.credentialString(datetime);\n    parts.push(this.algorithm + ' Credential=' +\n      credentials.accessKeyId + '/' + credString);\n    parts.push('SignedHeaders=' + this.signedHeaders());\n    parts.push('Signature=' + this.signature(credentials, datetime));\n    return parts.join(', ');\n  },\n\n  signature: function signature(credentials, datetime) {\n    var signingKey = v4Credentials.getSigningKey(\n      credentials,\n      datetime.substr(0, 8),\n      this.request.region,\n      this.serviceName,\n      this.signatureCache\n    );\n    return AWS.util.crypto.hmac(signingKey, this.stringToSign(datetime), 'hex');\n  },\n\n  stringToSign: function stringToSign(datetime) {\n    var parts = [];\n    parts.push('AWS4-HMAC-SHA256');\n    parts.push(datetime);\n    parts.push(this.credentialString(datetime));\n    parts.push(this.hexEncodedHash(this.canonicalString()));\n    return parts.join('\\n');\n  },\n\n  canonicalString: function canonicalString() {\n    var parts = [], pathname = this.request.pathname();\n    if (this.serviceName !== 's3' && this.signatureVersion !== 's3v4') pathname = AWS.util.uriEscapePath(pathname);\n\n    parts.push(this.request.method);\n    parts.push(pathname);\n    parts.push(this.request.search());\n    parts.push(this.canonicalHeaders() + '\\n');\n    parts.push(this.signedHeaders());\n    parts.push(this.hexEncodedBodyHash());\n    return parts.join('\\n');\n  },\n\n  canonicalHeaders: function canonicalHeaders() {\n    var headers = [];\n    AWS.util.each.call(this, this.request.headers, function (key, item) {\n      headers.push([key, item]);\n    });\n    headers.sort(function (a, b) {\n      return a[0].toLowerCase() < b[0].toLowerCase() ? -1 : 1;\n    });\n    var parts = [];\n    AWS.util.arrayEach.call(this, headers, function (item) {\n      var key = item[0].toLowerCase();\n      if (this.isSignableHeader(key)) {\n        var value = item[1];\n        if (typeof value === 'undefined' || value === null || typeof value.toString !== 'function') {\n          throw AWS.util.error(new Error('Header ' + key + ' contains invalid value'), {\n            code: 'InvalidHeader'\n          });\n        }\n        parts.push(key + ':' +\n          this.canonicalHeaderValues(value.toString()));\n      }\n    });\n    return parts.join('\\n');\n  },\n\n  canonicalHeaderValues: function canonicalHeaderValues(values) {\n    return values.replace(/\\s+/g, ' ').replace(/^\\s+|\\s+$/g, '');\n  },\n\n  signedHeaders: function signedHeaders() {\n    var keys = [];\n    AWS.util.each.call(this, this.request.headers, function (key) {\n      key = key.toLowerCase();\n      if (this.isSignableHeader(key)) keys.push(key);\n    });\n    return keys.sort().join(';');\n  },\n\n  credentialString: function credentialString(datetime) {\n    return v4Credentials.createScope(\n      datetime.substr(0, 8),\n      this.request.region,\n      this.serviceName\n    );\n  },\n\n  hexEncodedHash: function hash(string) {\n    return AWS.util.crypto.sha256(string, 'hex');\n  },\n\n  hexEncodedBodyHash: function hexEncodedBodyHash() {\n    var request = this.request;\n    if (this.isPresigned() && (['s3', 's3-object-lambda'].indexOf(this.serviceName) > -1) && !request.body) {\n      return 'UNSIGNED-PAYLOAD';\n    } else if (request.headers['X-Amz-Content-Sha256']) {\n      return request.headers['X-Amz-Content-Sha256'];\n    } else {\n      return this.hexEncodedHash(this.request.body || '');\n    }\n  },\n\n  unsignableHeaders: [\n    'authorization',\n    'content-type',\n    'content-length',\n    'user-agent',\n    expiresHeader,\n    'expect',\n    'x-amzn-trace-id'\n  ],\n\n  isSignableHeader: function isSignableHeader(key) {\n    if (key.toLowerCase().indexOf('x-amz-') === 0) return true;\n    return this.unsignableHeaders.indexOf(key) < 0;\n  },\n\n  isPresigned: function isPresigned() {\n    return this.request.headers[expiresHeader] ? true : false;\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V4;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}