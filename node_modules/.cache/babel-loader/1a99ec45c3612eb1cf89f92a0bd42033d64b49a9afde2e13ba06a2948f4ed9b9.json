{"ast":null,"code":"var util = require('../util');\nvar XmlNode = require('./xml-node').XmlNode;\nvar XmlText = require('./xml-text').XmlText;\nfunction XmlBuilder() {}\nXmlBuilder.prototype.toXML = function (params, shape, rootElement, noEmpty) {\n  var xml = new XmlNode(rootElement);\n  applyNamespaces(xml, shape, true);\n  serialize(xml, params, shape);\n  return xml.children.length > 0 || noEmpty ? xml.toString() : '';\n};\nfunction serialize(xml, value, shape) {\n  switch (shape.type) {\n    case 'structure':\n      return serializeStructure(xml, value, shape);\n    case 'map':\n      return serializeMap(xml, value, shape);\n    case 'list':\n      return serializeList(xml, value, shape);\n    default:\n      return serializeScalar(xml, value, shape);\n  }\n}\nfunction serializeStructure(xml, params, shape) {\n  util.arrayEach(shape.memberNames, function (memberName) {\n    var memberShape = shape.members[memberName];\n    if (memberShape.location !== 'body') return;\n    var value = params[memberName];\n    var name = memberShape.name;\n    if (value !== undefined && value !== null) {\n      if (memberShape.isXmlAttribute) {\n        xml.addAttribute(name, value);\n      } else if (memberShape.flattened) {\n        serialize(xml, value, memberShape);\n      } else {\n        var element = new XmlNode(name);\n        xml.addChildNode(element);\n        applyNamespaces(element, memberShape);\n        serialize(element, value, memberShape);\n      }\n    }\n  });\n}\nfunction serializeMap(xml, map, shape) {\n  var xmlKey = shape.key.name || 'key';\n  var xmlValue = shape.value.name || 'value';\n  util.each(map, function (key, value) {\n    var entry = new XmlNode(shape.flattened ? shape.name : 'entry');\n    xml.addChildNode(entry);\n    var entryKey = new XmlNode(xmlKey);\n    var entryValue = new XmlNode(xmlValue);\n    entry.addChildNode(entryKey);\n    entry.addChildNode(entryValue);\n    serialize(entryKey, key, shape.key);\n    serialize(entryValue, value, shape.value);\n  });\n}\nfunction serializeList(xml, list, shape) {\n  if (shape.flattened) {\n    util.arrayEach(list, function (value) {\n      var name = shape.member.name || shape.name;\n      var element = new XmlNode(name);\n      xml.addChildNode(element);\n      serialize(element, value, shape.member);\n    });\n  } else {\n    util.arrayEach(list, function (value) {\n      var name = shape.member.name || 'member';\n      var element = new XmlNode(name);\n      xml.addChildNode(element);\n      serialize(element, value, shape.member);\n    });\n  }\n}\nfunction serializeScalar(xml, value, shape) {\n  xml.addChildNode(new XmlText(shape.toWireFormat(value)));\n}\nfunction applyNamespaces(xml, shape, isRoot) {\n  var uri,\n    prefix = 'xmlns';\n  if (shape.xmlNamespaceUri) {\n    uri = shape.xmlNamespaceUri;\n    if (shape.xmlNamespacePrefix) prefix += ':' + shape.xmlNamespacePrefix;\n  } else if (isRoot && shape.api.xmlNamespaceUri) {\n    uri = shape.api.xmlNamespaceUri;\n  }\n  if (uri) xml.addAttribute(prefix, uri);\n}\n\n/**\n * @api private\n */\nmodule.exports = XmlBuilder;","map":{"version":3,"names":["util","require","XmlNode","XmlText","XmlBuilder","prototype","toXML","params","shape","rootElement","noEmpty","xml","applyNamespaces","serialize","children","length","toString","value","type","serializeStructure","serializeMap","serializeList","serializeScalar","arrayEach","memberNames","memberName","memberShape","members","location","name","undefined","isXmlAttribute","addAttribute","flattened","element","addChildNode","map","xmlKey","key","xmlValue","each","entry","entryKey","entryValue","list","member","toWireFormat","isRoot","uri","prefix","xmlNamespaceUri","xmlNamespacePrefix","api","module","exports"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/lib/xml/builder.js"],"sourcesContent":["var util = require('../util');\nvar XmlNode = require('./xml-node').XmlNode;\nvar XmlText = require('./xml-text').XmlText;\n\nfunction XmlBuilder() { }\n\nXmlBuilder.prototype.toXML = function(params, shape, rootElement, noEmpty) {\n  var xml = new XmlNode(rootElement);\n  applyNamespaces(xml, shape, true);\n  serialize(xml, params, shape);\n  return xml.children.length > 0 || noEmpty ? xml.toString() : '';\n};\n\nfunction serialize(xml, value, shape) {\n  switch (shape.type) {\n    case 'structure': return serializeStructure(xml, value, shape);\n    case 'map': return serializeMap(xml, value, shape);\n    case 'list': return serializeList(xml, value, shape);\n    default: return serializeScalar(xml, value, shape);\n  }\n}\n\nfunction serializeStructure(xml, params, shape) {\n  util.arrayEach(shape.memberNames, function(memberName) {\n    var memberShape = shape.members[memberName];\n    if (memberShape.location !== 'body') return;\n\n    var value = params[memberName];\n    var name = memberShape.name;\n    if (value !== undefined && value !== null) {\n      if (memberShape.isXmlAttribute) {\n        xml.addAttribute(name, value);\n      } else if (memberShape.flattened) {\n        serialize(xml, value, memberShape);\n      } else {\n        var element = new XmlNode(name);\n        xml.addChildNode(element);\n        applyNamespaces(element, memberShape);\n        serialize(element, value, memberShape);\n      }\n    }\n  });\n}\n\nfunction serializeMap(xml, map, shape) {\n  var xmlKey = shape.key.name || 'key';\n  var xmlValue = shape.value.name || 'value';\n\n  util.each(map, function(key, value) {\n    var entry = new XmlNode(shape.flattened ? shape.name : 'entry');\n    xml.addChildNode(entry);\n\n    var entryKey = new XmlNode(xmlKey);\n    var entryValue = new XmlNode(xmlValue);\n    entry.addChildNode(entryKey);\n    entry.addChildNode(entryValue);\n\n    serialize(entryKey, key, shape.key);\n    serialize(entryValue, value, shape.value);\n  });\n}\n\nfunction serializeList(xml, list, shape) {\n  if (shape.flattened) {\n    util.arrayEach(list, function(value) {\n      var name = shape.member.name || shape.name;\n      var element = new XmlNode(name);\n      xml.addChildNode(element);\n      serialize(element, value, shape.member);\n    });\n  } else {\n    util.arrayEach(list, function(value) {\n      var name = shape.member.name || 'member';\n      var element = new XmlNode(name);\n      xml.addChildNode(element);\n      serialize(element, value, shape.member);\n    });\n  }\n}\n\nfunction serializeScalar(xml, value, shape) {\n  xml.addChildNode(\n    new XmlText(shape.toWireFormat(value))\n  );\n}\n\nfunction applyNamespaces(xml, shape, isRoot) {\n  var uri, prefix = 'xmlns';\n  if (shape.xmlNamespaceUri) {\n    uri = shape.xmlNamespaceUri;\n    if (shape.xmlNamespacePrefix) prefix += ':' + shape.xmlNamespacePrefix;\n  } else if (isRoot && shape.api.xmlNamespaceUri) {\n    uri = shape.api.xmlNamespaceUri;\n  }\n\n  if (uri) xml.addAttribute(prefix, uri);\n}\n\n/**\n * @api private\n */\nmodule.exports = XmlBuilder;\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,SAAS,CAAC;AAC7B,IAAIC,OAAO,GAAGD,OAAO,CAAC,YAAY,CAAC,CAACC,OAAO;AAC3C,IAAIC,OAAO,GAAGF,OAAO,CAAC,YAAY,CAAC,CAACE,OAAO;AAE3C,SAASC,UAAUA,CAAA,EAAG,CAAE;AAExBA,UAAU,CAACC,SAAS,CAACC,KAAK,GAAG,UAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,OAAO,EAAE;EACzE,IAAIC,GAAG,GAAG,IAAIT,OAAO,CAACO,WAAW,CAAC;EAClCG,eAAe,CAACD,GAAG,EAAEH,KAAK,EAAE,IAAI,CAAC;EACjCK,SAAS,CAACF,GAAG,EAAEJ,MAAM,EAAEC,KAAK,CAAC;EAC7B,OAAOG,GAAG,CAACG,QAAQ,CAACC,MAAM,GAAG,CAAC,IAAIL,OAAO,GAAGC,GAAG,CAACK,QAAQ,CAAC,CAAC,GAAG,EAAE;AACjE,CAAC;AAED,SAASH,SAASA,CAACF,GAAG,EAAEM,KAAK,EAAET,KAAK,EAAE;EACpC,QAAQA,KAAK,CAACU,IAAI;IAChB,KAAK,WAAW;MAAE,OAAOC,kBAAkB,CAACR,GAAG,EAAEM,KAAK,EAAET,KAAK,CAAC;IAC9D,KAAK,KAAK;MAAE,OAAOY,YAAY,CAACT,GAAG,EAAEM,KAAK,EAAET,KAAK,CAAC;IAClD,KAAK,MAAM;MAAE,OAAOa,aAAa,CAACV,GAAG,EAAEM,KAAK,EAAET,KAAK,CAAC;IACpD;MAAS,OAAOc,eAAe,CAACX,GAAG,EAAEM,KAAK,EAAET,KAAK,CAAC;EACpD;AACF;AAEA,SAASW,kBAAkBA,CAACR,GAAG,EAAEJ,MAAM,EAAEC,KAAK,EAAE;EAC9CR,IAAI,CAACuB,SAAS,CAACf,KAAK,CAACgB,WAAW,EAAE,UAASC,UAAU,EAAE;IACrD,IAAIC,WAAW,GAAGlB,KAAK,CAACmB,OAAO,CAACF,UAAU,CAAC;IAC3C,IAAIC,WAAW,CAACE,QAAQ,KAAK,MAAM,EAAE;IAErC,IAAIX,KAAK,GAAGV,MAAM,CAACkB,UAAU,CAAC;IAC9B,IAAII,IAAI,GAAGH,WAAW,CAACG,IAAI;IAC3B,IAAIZ,KAAK,KAAKa,SAAS,IAAIb,KAAK,KAAK,IAAI,EAAE;MACzC,IAAIS,WAAW,CAACK,cAAc,EAAE;QAC9BpB,GAAG,CAACqB,YAAY,CAACH,IAAI,EAAEZ,KAAK,CAAC;MAC/B,CAAC,MAAM,IAAIS,WAAW,CAACO,SAAS,EAAE;QAChCpB,SAAS,CAACF,GAAG,EAAEM,KAAK,EAAES,WAAW,CAAC;MACpC,CAAC,MAAM;QACL,IAAIQ,OAAO,GAAG,IAAIhC,OAAO,CAAC2B,IAAI,CAAC;QAC/BlB,GAAG,CAACwB,YAAY,CAACD,OAAO,CAAC;QACzBtB,eAAe,CAACsB,OAAO,EAAER,WAAW,CAAC;QACrCb,SAAS,CAACqB,OAAO,EAAEjB,KAAK,EAAES,WAAW,CAAC;MACxC;IACF;EACF,CAAC,CAAC;AACJ;AAEA,SAASN,YAAYA,CAACT,GAAG,EAAEyB,GAAG,EAAE5B,KAAK,EAAE;EACrC,IAAI6B,MAAM,GAAG7B,KAAK,CAAC8B,GAAG,CAACT,IAAI,IAAI,KAAK;EACpC,IAAIU,QAAQ,GAAG/B,KAAK,CAACS,KAAK,CAACY,IAAI,IAAI,OAAO;EAE1C7B,IAAI,CAACwC,IAAI,CAACJ,GAAG,EAAE,UAASE,GAAG,EAAErB,KAAK,EAAE;IAClC,IAAIwB,KAAK,GAAG,IAAIvC,OAAO,CAACM,KAAK,CAACyB,SAAS,GAAGzB,KAAK,CAACqB,IAAI,GAAG,OAAO,CAAC;IAC/DlB,GAAG,CAACwB,YAAY,CAACM,KAAK,CAAC;IAEvB,IAAIC,QAAQ,GAAG,IAAIxC,OAAO,CAACmC,MAAM,CAAC;IAClC,IAAIM,UAAU,GAAG,IAAIzC,OAAO,CAACqC,QAAQ,CAAC;IACtCE,KAAK,CAACN,YAAY,CAACO,QAAQ,CAAC;IAC5BD,KAAK,CAACN,YAAY,CAACQ,UAAU,CAAC;IAE9B9B,SAAS,CAAC6B,QAAQ,EAAEJ,GAAG,EAAE9B,KAAK,CAAC8B,GAAG,CAAC;IACnCzB,SAAS,CAAC8B,UAAU,EAAE1B,KAAK,EAAET,KAAK,CAACS,KAAK,CAAC;EAC3C,CAAC,CAAC;AACJ;AAEA,SAASI,aAAaA,CAACV,GAAG,EAAEiC,IAAI,EAAEpC,KAAK,EAAE;EACvC,IAAIA,KAAK,CAACyB,SAAS,EAAE;IACnBjC,IAAI,CAACuB,SAAS,CAACqB,IAAI,EAAE,UAAS3B,KAAK,EAAE;MACnC,IAAIY,IAAI,GAAGrB,KAAK,CAACqC,MAAM,CAAChB,IAAI,IAAIrB,KAAK,CAACqB,IAAI;MAC1C,IAAIK,OAAO,GAAG,IAAIhC,OAAO,CAAC2B,IAAI,CAAC;MAC/BlB,GAAG,CAACwB,YAAY,CAACD,OAAO,CAAC;MACzBrB,SAAS,CAACqB,OAAO,EAAEjB,KAAK,EAAET,KAAK,CAACqC,MAAM,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC,MAAM;IACL7C,IAAI,CAACuB,SAAS,CAACqB,IAAI,EAAE,UAAS3B,KAAK,EAAE;MACnC,IAAIY,IAAI,GAAGrB,KAAK,CAACqC,MAAM,CAAChB,IAAI,IAAI,QAAQ;MACxC,IAAIK,OAAO,GAAG,IAAIhC,OAAO,CAAC2B,IAAI,CAAC;MAC/BlB,GAAG,CAACwB,YAAY,CAACD,OAAO,CAAC;MACzBrB,SAAS,CAACqB,OAAO,EAAEjB,KAAK,EAAET,KAAK,CAACqC,MAAM,CAAC;IACzC,CAAC,CAAC;EACJ;AACF;AAEA,SAASvB,eAAeA,CAACX,GAAG,EAAEM,KAAK,EAAET,KAAK,EAAE;EAC1CG,GAAG,CAACwB,YAAY,CACd,IAAIhC,OAAO,CAACK,KAAK,CAACsC,YAAY,CAAC7B,KAAK,CAAC,CACvC,CAAC;AACH;AAEA,SAASL,eAAeA,CAACD,GAAG,EAAEH,KAAK,EAAEuC,MAAM,EAAE;EAC3C,IAAIC,GAAG;IAAEC,MAAM,GAAG,OAAO;EACzB,IAAIzC,KAAK,CAAC0C,eAAe,EAAE;IACzBF,GAAG,GAAGxC,KAAK,CAAC0C,eAAe;IAC3B,IAAI1C,KAAK,CAAC2C,kBAAkB,EAAEF,MAAM,IAAI,GAAG,GAAGzC,KAAK,CAAC2C,kBAAkB;EACxE,CAAC,MAAM,IAAIJ,MAAM,IAAIvC,KAAK,CAAC4C,GAAG,CAACF,eAAe,EAAE;IAC9CF,GAAG,GAAGxC,KAAK,CAAC4C,GAAG,CAACF,eAAe;EACjC;EAEA,IAAIF,GAAG,EAAErC,GAAG,CAACqB,YAAY,CAACiB,MAAM,EAAED,GAAG,CAAC;AACxC;;AAEA;AACA;AACA;AACAK,MAAM,CAACC,OAAO,GAAGlD,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}