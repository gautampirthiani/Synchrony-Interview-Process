{"ast":null,"code":"var AWS = require('../core');\nAWS.util.update(AWS.EC2.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.removeListener('extractError', AWS.EventListeners.Query.EXTRACT_ERROR);\n    request.addListener('extractError', this.extractError);\n    if (request.operation === 'copySnapshot') {\n      request.onAsync('validate', this.buildCopySnapshotPresignedUrl);\n    }\n  },\n  /**\n   * @api private\n   */\n  buildCopySnapshotPresignedUrl: function buildCopySnapshotPresignedUrl(req, done) {\n    if (req.params.PresignedUrl || req._subRequest) {\n      return done();\n    }\n    req.params = AWS.util.copy(req.params);\n    req.params.DestinationRegion = req.service.config.region;\n    var config = AWS.util.copy(req.service.config);\n    delete config.endpoint;\n    config.region = req.params.SourceRegion;\n    var svc = new req.service.constructor(config);\n    var newReq = svc[req.operation](req.params);\n    newReq._subRequest = true;\n    newReq.presign(function (err, url) {\n      if (err) done(err);else {\n        req.params.PresignedUrl = url;\n        done();\n      }\n    });\n  },\n  /**\n   * @api private\n   */\n  extractError: function extractError(resp) {\n    // EC2 nests the error code and message deeper than other AWS Query services.\n    var httpResponse = resp.httpResponse;\n    var data = new AWS.XML.Parser().parse(httpResponse.body.toString() || '');\n    if (data.Errors) {\n      resp.error = AWS.util.error(new Error(), {\n        code: data.Errors.Error.Code,\n        message: data.Errors.Error.Message\n      });\n    } else {\n      resp.error = AWS.util.error(new Error(), {\n        code: httpResponse.statusCode,\n        message: null\n      });\n    }\n    resp.error.requestId = data.RequestID || null;\n  }\n});","map":{"version":3,"names":["AWS","require","util","update","EC2","prototype","setupRequestListeners","request","removeListener","EventListeners","Query","EXTRACT_ERROR","addListener","extractError","operation","onAsync","buildCopySnapshotPresignedUrl","req","done","params","PresignedUrl","_subRequest","copy","DestinationRegion","service","config","region","endpoint","SourceRegion","svc","constructor","newReq","presign","err","url","resp","httpResponse","data","XML","Parser","parse","body","toString","Errors","error","Error","code","Code","message","Message","statusCode","requestId","RequestID"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/lib/services/ec2.js"],"sourcesContent":["var AWS = require('../core');\n\nAWS.util.update(AWS.EC2.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.removeListener('extractError', AWS.EventListeners.Query.EXTRACT_ERROR);\n    request.addListener('extractError', this.extractError);\n\n    if (request.operation === 'copySnapshot') {\n      request.onAsync('validate', this.buildCopySnapshotPresignedUrl);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  buildCopySnapshotPresignedUrl: function buildCopySnapshotPresignedUrl(req, done) {\n    if (req.params.PresignedUrl || req._subRequest) {\n      return done();\n    }\n\n    req.params = AWS.util.copy(req.params);\n    req.params.DestinationRegion = req.service.config.region;\n\n    var config = AWS.util.copy(req.service.config);\n    delete config.endpoint;\n    config.region = req.params.SourceRegion;\n    var svc = new req.service.constructor(config);\n    var newReq = svc[req.operation](req.params);\n    newReq._subRequest = true;\n    newReq.presign(function(err, url) {\n      if (err) done(err);\n      else {\n        req.params.PresignedUrl = url;\n        done();\n      }\n    });\n  },\n\n  /**\n   * @api private\n   */\n  extractError: function extractError(resp) {\n    // EC2 nests the error code and message deeper than other AWS Query services.\n    var httpResponse = resp.httpResponse;\n    var data = new AWS.XML.Parser().parse(httpResponse.body.toString() || '');\n    if (data.Errors) {\n      resp.error = AWS.util.error(new Error(), {\n        code: data.Errors.Error.Code,\n        message: data.Errors.Error.Message\n      });\n    } else {\n      resp.error = AWS.util.error(new Error(), {\n        code: httpResponse.statusCode,\n        message: null\n      });\n    }\n    resp.error.requestId = data.RequestID || null;\n  }\n});\n"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE5BD,GAAG,CAACE,IAAI,CAACC,MAAM,CAACH,GAAG,CAACI,GAAG,CAACC,SAAS,EAAE;EACjC;AACF;AACA;EACEC,qBAAqB,EAAE,SAASA,qBAAqBA,CAACC,OAAO,EAAE;IAC7DA,OAAO,CAACC,cAAc,CAAC,cAAc,EAAER,GAAG,CAACS,cAAc,CAACC,KAAK,CAACC,aAAa,CAAC;IAC9EJ,OAAO,CAACK,WAAW,CAAC,cAAc,EAAE,IAAI,CAACC,YAAY,CAAC;IAEtD,IAAIN,OAAO,CAACO,SAAS,KAAK,cAAc,EAAE;MACxCP,OAAO,CAACQ,OAAO,CAAC,UAAU,EAAE,IAAI,CAACC,6BAA6B,CAAC;IACjE;EACF,CAAC;EAED;AACF;AACA;EACEA,6BAA6B,EAAE,SAASA,6BAA6BA,CAACC,GAAG,EAAEC,IAAI,EAAE;IAC/E,IAAID,GAAG,CAACE,MAAM,CAACC,YAAY,IAAIH,GAAG,CAACI,WAAW,EAAE;MAC9C,OAAOH,IAAI,CAAC,CAAC;IACf;IAEAD,GAAG,CAACE,MAAM,GAAGnB,GAAG,CAACE,IAAI,CAACoB,IAAI,CAACL,GAAG,CAACE,MAAM,CAAC;IACtCF,GAAG,CAACE,MAAM,CAACI,iBAAiB,GAAGN,GAAG,CAACO,OAAO,CAACC,MAAM,CAACC,MAAM;IAExD,IAAID,MAAM,GAAGzB,GAAG,CAACE,IAAI,CAACoB,IAAI,CAACL,GAAG,CAACO,OAAO,CAACC,MAAM,CAAC;IAC9C,OAAOA,MAAM,CAACE,QAAQ;IACtBF,MAAM,CAACC,MAAM,GAAGT,GAAG,CAACE,MAAM,CAACS,YAAY;IACvC,IAAIC,GAAG,GAAG,IAAIZ,GAAG,CAACO,OAAO,CAACM,WAAW,CAACL,MAAM,CAAC;IAC7C,IAAIM,MAAM,GAAGF,GAAG,CAACZ,GAAG,CAACH,SAAS,CAAC,CAACG,GAAG,CAACE,MAAM,CAAC;IAC3CY,MAAM,CAACV,WAAW,GAAG,IAAI;IACzBU,MAAM,CAACC,OAAO,CAAC,UAASC,GAAG,EAAEC,GAAG,EAAE;MAChC,IAAID,GAAG,EAAEf,IAAI,CAACe,GAAG,CAAC,CAAC,KACd;QACHhB,GAAG,CAACE,MAAM,CAACC,YAAY,GAAGc,GAAG;QAC7BhB,IAAI,CAAC,CAAC;MACR;IACF,CAAC,CAAC;EACJ,CAAC;EAED;AACF;AACA;EACEL,YAAY,EAAE,SAASA,YAAYA,CAACsB,IAAI,EAAE;IACxC;IACA,IAAIC,YAAY,GAAGD,IAAI,CAACC,YAAY;IACpC,IAAIC,IAAI,GAAG,IAAIrC,GAAG,CAACsC,GAAG,CAACC,MAAM,CAAC,CAAC,CAACC,KAAK,CAACJ,YAAY,CAACK,IAAI,CAACC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;IACzE,IAAIL,IAAI,CAACM,MAAM,EAAE;MACfR,IAAI,CAACS,KAAK,GAAG5C,GAAG,CAACE,IAAI,CAAC0C,KAAK,CAAC,IAAIC,KAAK,CAAC,CAAC,EAAE;QACvCC,IAAI,EAAET,IAAI,CAACM,MAAM,CAACE,KAAK,CAACE,IAAI;QAC5BC,OAAO,EAAEX,IAAI,CAACM,MAAM,CAACE,KAAK,CAACI;MAC7B,CAAC,CAAC;IACJ,CAAC,MAAM;MACLd,IAAI,CAACS,KAAK,GAAG5C,GAAG,CAACE,IAAI,CAAC0C,KAAK,CAAC,IAAIC,KAAK,CAAC,CAAC,EAAE;QACvCC,IAAI,EAAEV,YAAY,CAACc,UAAU;QAC7BF,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;IACAb,IAAI,CAACS,KAAK,CAACO,SAAS,GAAGd,IAAI,CAACe,SAAS,IAAI,IAAI;EAC/C;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}