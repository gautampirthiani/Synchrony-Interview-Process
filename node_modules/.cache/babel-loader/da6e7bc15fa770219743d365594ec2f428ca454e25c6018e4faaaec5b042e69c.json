{"ast":null,"code":"var AWS = require('../core');\nAWS.util.update(AWS.MachineLearning.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    if (request.operation === 'predict') {\n      request.addListener('build', this.buildEndpoint);\n    }\n  },\n  /**\n   * Updates request endpoint from PredictEndpoint\n   * @api private\n   */\n  buildEndpoint: function buildEndpoint(request) {\n    var url = request.params.PredictEndpoint;\n    if (url) {\n      request.httpRequest.endpoint = new AWS.Endpoint(url);\n    }\n  }\n});","map":{"version":3,"names":["AWS","require","util","update","MachineLearning","prototype","setupRequestListeners","request","operation","addListener","buildEndpoint","url","params","PredictEndpoint","httpRequest","endpoint","Endpoint"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/lib/services/machinelearning.js"],"sourcesContent":["var AWS = require('../core');\n\nAWS.util.update(AWS.MachineLearning.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    if (request.operation === 'predict') {\n      request.addListener('build', this.buildEndpoint);\n    }\n  },\n\n  /**\n   * Updates request endpoint from PredictEndpoint\n   * @api private\n   */\n  buildEndpoint: function buildEndpoint(request) {\n    var url = request.params.PredictEndpoint;\n    if (url) {\n      request.httpRequest.endpoint = new AWS.Endpoint(url);\n    }\n  }\n\n});\n"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE5BD,GAAG,CAACE,IAAI,CAACC,MAAM,CAACH,GAAG,CAACI,eAAe,CAACC,SAAS,EAAE;EAC7C;AACF;AACA;EACEC,qBAAqB,EAAE,SAASA,qBAAqBA,CAACC,OAAO,EAAE;IAC7D,IAAIA,OAAO,CAACC,SAAS,KAAK,SAAS,EAAE;MACnCD,OAAO,CAACE,WAAW,CAAC,OAAO,EAAE,IAAI,CAACC,aAAa,CAAC;IAClD;EACF,CAAC;EAED;AACF;AACA;AACA;EACEA,aAAa,EAAE,SAASA,aAAaA,CAACH,OAAO,EAAE;IAC7C,IAAII,GAAG,GAAGJ,OAAO,CAACK,MAAM,CAACC,eAAe;IACxC,IAAIF,GAAG,EAAE;MACPJ,OAAO,CAACO,WAAW,CAACC,QAAQ,GAAG,IAAIf,GAAG,CAACgB,QAAQ,CAACL,GAAG,CAAC;IACtD;EACF;AAEF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}