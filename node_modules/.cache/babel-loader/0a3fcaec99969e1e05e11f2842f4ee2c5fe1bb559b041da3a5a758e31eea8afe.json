{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar LinkedListNode = /** @class */function () {\n  function LinkedListNode(key, value) {\n    this.key = key;\n    this.value = value;\n  }\n  return LinkedListNode;\n}();\nvar LRUCache = /** @class */function () {\n  function LRUCache(size) {\n    this.nodeMap = {};\n    this.size = 0;\n    if (typeof size !== 'number' || size < 1) {\n      throw new Error('Cache size can only be positive number');\n    }\n    this.sizeLimit = size;\n  }\n  Object.defineProperty(LRUCache.prototype, \"length\", {\n    get: function () {\n      return this.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  LRUCache.prototype.prependToList = function (node) {\n    if (!this.headerNode) {\n      this.tailNode = node;\n    } else {\n      this.headerNode.prev = node;\n      node.next = this.headerNode;\n    }\n    this.headerNode = node;\n    this.size++;\n  };\n  LRUCache.prototype.removeFromTail = function () {\n    if (!this.tailNode) {\n      return undefined;\n    }\n    var node = this.tailNode;\n    var prevNode = node.prev;\n    if (prevNode) {\n      prevNode.next = undefined;\n    }\n    node.prev = undefined;\n    this.tailNode = prevNode;\n    this.size--;\n    return node;\n  };\n  LRUCache.prototype.detachFromList = function (node) {\n    if (this.headerNode === node) {\n      this.headerNode = node.next;\n    }\n    if (this.tailNode === node) {\n      this.tailNode = node.prev;\n    }\n    if (node.prev) {\n      node.prev.next = node.next;\n    }\n    if (node.next) {\n      node.next.prev = node.prev;\n    }\n    node.next = undefined;\n    node.prev = undefined;\n    this.size--;\n  };\n  LRUCache.prototype.get = function (key) {\n    if (this.nodeMap[key]) {\n      var node = this.nodeMap[key];\n      this.detachFromList(node);\n      this.prependToList(node);\n      return node.value;\n    }\n  };\n  LRUCache.prototype.remove = function (key) {\n    if (this.nodeMap[key]) {\n      var node = this.nodeMap[key];\n      this.detachFromList(node);\n      delete this.nodeMap[key];\n    }\n  };\n  LRUCache.prototype.put = function (key, value) {\n    if (this.nodeMap[key]) {\n      this.remove(key);\n    } else if (this.size === this.sizeLimit) {\n      var tailNode = this.removeFromTail();\n      var key_1 = tailNode.key;\n      delete this.nodeMap[key_1];\n    }\n    var newNode = new LinkedListNode(key, value);\n    this.nodeMap[key] = newNode;\n    this.prependToList(newNode);\n  };\n  LRUCache.prototype.empty = function () {\n    var keys = Object.keys(this.nodeMap);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var node = this.nodeMap[key];\n      this.detachFromList(node);\n      delete this.nodeMap[key];\n    }\n  };\n  return LRUCache;\n}();\nexports.LRUCache = LRUCache;","map":{"version":3,"names":["Object","defineProperty","exports","value","LinkedListNode","key","LRUCache","size","nodeMap","Error","sizeLimit","prototype","get","enumerable","configurable","prependToList","node","headerNode","tailNode","prev","next","removeFromTail","undefined","prevNode","detachFromList","remove","put","key_1","newNode","empty","keys","i","length"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/vendor/endpoint-cache/utils/LRU.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LinkedListNode = /** @class */ (function () {\n    function LinkedListNode(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n    return LinkedListNode;\n}());\nvar LRUCache = /** @class */ (function () {\n    function LRUCache(size) {\n        this.nodeMap = {};\n        this.size = 0;\n        if (typeof size !== 'number' || size < 1) {\n            throw new Error('Cache size can only be positive number');\n        }\n        this.sizeLimit = size;\n    }\n    Object.defineProperty(LRUCache.prototype, \"length\", {\n        get: function () {\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LRUCache.prototype.prependToList = function (node) {\n        if (!this.headerNode) {\n            this.tailNode = node;\n        }\n        else {\n            this.headerNode.prev = node;\n            node.next = this.headerNode;\n        }\n        this.headerNode = node;\n        this.size++;\n    };\n    LRUCache.prototype.removeFromTail = function () {\n        if (!this.tailNode) {\n            return undefined;\n        }\n        var node = this.tailNode;\n        var prevNode = node.prev;\n        if (prevNode) {\n            prevNode.next = undefined;\n        }\n        node.prev = undefined;\n        this.tailNode = prevNode;\n        this.size--;\n        return node;\n    };\n    LRUCache.prototype.detachFromList = function (node) {\n        if (this.headerNode === node) {\n            this.headerNode = node.next;\n        }\n        if (this.tailNode === node) {\n            this.tailNode = node.prev;\n        }\n        if (node.prev) {\n            node.prev.next = node.next;\n        }\n        if (node.next) {\n            node.next.prev = node.prev;\n        }\n        node.next = undefined;\n        node.prev = undefined;\n        this.size--;\n    };\n    LRUCache.prototype.get = function (key) {\n        if (this.nodeMap[key]) {\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            this.prependToList(node);\n            return node.value;\n        }\n    };\n    LRUCache.prototype.remove = function (key) {\n        if (this.nodeMap[key]) {\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            delete this.nodeMap[key];\n        }\n    };\n    LRUCache.prototype.put = function (key, value) {\n        if (this.nodeMap[key]) {\n            this.remove(key);\n        }\n        else if (this.size === this.sizeLimit) {\n            var tailNode = this.removeFromTail();\n            var key_1 = tailNode.key;\n            delete this.nodeMap[key_1];\n        }\n        var newNode = new LinkedListNode(key, value);\n        this.nodeMap[key] = newNode;\n        this.prependToList(newNode);\n    };\n    LRUCache.prototype.empty = function () {\n        var keys = Object.keys(this.nodeMap);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            delete this.nodeMap[key];\n        }\n    };\n    return LRUCache;\n}());\nexports.LRUCache = LRUCache;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}