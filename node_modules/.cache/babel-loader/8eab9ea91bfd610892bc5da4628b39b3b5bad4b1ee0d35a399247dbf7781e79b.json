{"ast":null,"code":"var AWS = require('../core');\nvar EventEmitter = require('events').EventEmitter;\nrequire('../http');\n\n/**\n * @api private\n */\nAWS.XHRClient = AWS.util.inherit({\n  handleRequest: function handleRequest(httpRequest, httpOptions, callback, errCallback) {\n    var self = this;\n    var endpoint = httpRequest.endpoint;\n    var emitter = new EventEmitter();\n    var href = endpoint.protocol + '//' + endpoint.hostname;\n    if (endpoint.port !== 80 && endpoint.port !== 443) {\n      href += ':' + endpoint.port;\n    }\n    href += httpRequest.path;\n    var xhr = new XMLHttpRequest(),\n      headersEmitted = false;\n    httpRequest.stream = xhr;\n    xhr.addEventListener('readystatechange', function () {\n      try {\n        if (xhr.status === 0) return; // 0 code is invalid\n      } catch (e) {\n        return;\n      }\n      if (this.readyState >= this.HEADERS_RECEIVED && !headersEmitted) {\n        emitter.statusCode = xhr.status;\n        emitter.headers = self.parseHeaders(xhr.getAllResponseHeaders());\n        emitter.emit('headers', emitter.statusCode, emitter.headers, xhr.statusText);\n        headersEmitted = true;\n      }\n      if (this.readyState === this.DONE) {\n        self.finishRequest(xhr, emitter);\n      }\n    }, false);\n    xhr.upload.addEventListener('progress', function (evt) {\n      emitter.emit('sendProgress', evt);\n    });\n    xhr.addEventListener('progress', function (evt) {\n      emitter.emit('receiveProgress', evt);\n    }, false);\n    xhr.addEventListener('timeout', function () {\n      errCallback(AWS.util.error(new Error('Timeout'), {\n        code: 'TimeoutError'\n      }));\n    }, false);\n    xhr.addEventListener('error', function () {\n      errCallback(AWS.util.error(new Error('Network Failure'), {\n        code: 'NetworkingError'\n      }));\n    }, false);\n    xhr.addEventListener('abort', function () {\n      errCallback(AWS.util.error(new Error('Request aborted'), {\n        code: 'RequestAbortedError'\n      }));\n    }, false);\n    callback(emitter);\n    xhr.open(httpRequest.method, href, httpOptions.xhrAsync !== false);\n    AWS.util.each(httpRequest.headers, function (key, value) {\n      if (key !== 'Content-Length' && key !== 'User-Agent' && key !== 'Host') {\n        xhr.setRequestHeader(key, value);\n      }\n    });\n    if (httpOptions.timeout && httpOptions.xhrAsync !== false) {\n      xhr.timeout = httpOptions.timeout;\n    }\n    if (httpOptions.xhrWithCredentials) {\n      xhr.withCredentials = true;\n    }\n    try {\n      xhr.responseType = 'arraybuffer';\n    } catch (e) {}\n    try {\n      if (httpRequest.body) {\n        xhr.send(httpRequest.body);\n      } else {\n        xhr.send();\n      }\n    } catch (err) {\n      if (httpRequest.body && typeof httpRequest.body.buffer === 'object') {\n        xhr.send(httpRequest.body.buffer); // send ArrayBuffer directly\n      } else {\n        throw err;\n      }\n    }\n    return emitter;\n  },\n  parseHeaders: function parseHeaders(rawHeaders) {\n    var headers = {};\n    AWS.util.arrayEach(rawHeaders.split(/\\r?\\n/), function (line) {\n      var key = line.split(':', 1)[0];\n      var value = line.substring(key.length + 2);\n      if (key.length > 0) headers[key.toLowerCase()] = value;\n    });\n    return headers;\n  },\n  finishRequest: function finishRequest(xhr, emitter) {\n    var buffer;\n    if (xhr.responseType === 'arraybuffer' && xhr.response) {\n      var ab = xhr.response;\n      buffer = new AWS.util.Buffer(ab.byteLength);\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < buffer.length; ++i) {\n        buffer[i] = view[i];\n      }\n    }\n    try {\n      if (!buffer && typeof xhr.responseText === 'string') {\n        buffer = new AWS.util.Buffer(xhr.responseText);\n      }\n    } catch (e) {}\n    if (buffer) emitter.emit('data', buffer);\n    emitter.emit('end');\n  }\n});\n\n/**\n * @api private\n */\nAWS.HttpClient.prototype = AWS.XHRClient.prototype;\n\n/**\n * @api private\n */\nAWS.HttpClient.streamsApiVersion = 1;","map":{"version":3,"names":["AWS","require","EventEmitter","XHRClient","util","inherit","handleRequest","httpRequest","httpOptions","callback","errCallback","self","endpoint","emitter","href","protocol","hostname","port","path","xhr","XMLHttpRequest","headersEmitted","stream","addEventListener","status","e","readyState","HEADERS_RECEIVED","statusCode","headers","parseHeaders","getAllResponseHeaders","emit","statusText","DONE","finishRequest","upload","evt","error","Error","code","open","method","xhrAsync","each","key","value","setRequestHeader","timeout","xhrWithCredentials","withCredentials","responseType","body","send","err","buffer","rawHeaders","arrayEach","split","line","substring","length","toLowerCase","response","ab","Buffer","byteLength","view","Uint8Array","i","responseText","HttpClient","prototype","streamsApiVersion"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/lib/http/xhr.js"],"sourcesContent":["var AWS = require('../core');\nvar EventEmitter = require('events').EventEmitter;\nrequire('../http');\n\n/**\n * @api private\n */\nAWS.XHRClient = AWS.util.inherit({\n  handleRequest: function handleRequest(httpRequest, httpOptions, callback, errCallback) {\n    var self = this;\n    var endpoint = httpRequest.endpoint;\n    var emitter = new EventEmitter();\n    var href = endpoint.protocol + '//' + endpoint.hostname;\n    if (endpoint.port !== 80 && endpoint.port !== 443) {\n      href += ':' + endpoint.port;\n    }\n    href += httpRequest.path;\n\n    var xhr = new XMLHttpRequest(), headersEmitted = false;\n    httpRequest.stream = xhr;\n\n    xhr.addEventListener('readystatechange', function() {\n      try {\n        if (xhr.status === 0) return; // 0 code is invalid\n      } catch (e) { return; }\n\n      if (this.readyState >= this.HEADERS_RECEIVED && !headersEmitted) {\n        emitter.statusCode = xhr.status;\n        emitter.headers = self.parseHeaders(xhr.getAllResponseHeaders());\n        emitter.emit(\n          'headers',\n          emitter.statusCode,\n          emitter.headers,\n          xhr.statusText\n        );\n        headersEmitted = true;\n      }\n      if (this.readyState === this.DONE) {\n        self.finishRequest(xhr, emitter);\n      }\n    }, false);\n    xhr.upload.addEventListener('progress', function (evt) {\n      emitter.emit('sendProgress', evt);\n    });\n    xhr.addEventListener('progress', function (evt) {\n      emitter.emit('receiveProgress', evt);\n    }, false);\n    xhr.addEventListener('timeout', function () {\n      errCallback(AWS.util.error(new Error('Timeout'), {code: 'TimeoutError'}));\n    }, false);\n    xhr.addEventListener('error', function () {\n      errCallback(AWS.util.error(new Error('Network Failure'), {\n        code: 'NetworkingError'\n      }));\n    }, false);\n    xhr.addEventListener('abort', function () {\n      errCallback(AWS.util.error(new Error('Request aborted'), {\n        code: 'RequestAbortedError'\n      }));\n    }, false);\n\n    callback(emitter);\n    xhr.open(httpRequest.method, href, httpOptions.xhrAsync !== false);\n    AWS.util.each(httpRequest.headers, function (key, value) {\n      if (key !== 'Content-Length' && key !== 'User-Agent' && key !== 'Host') {\n        xhr.setRequestHeader(key, value);\n      }\n    });\n\n    if (httpOptions.timeout && httpOptions.xhrAsync !== false) {\n      xhr.timeout = httpOptions.timeout;\n    }\n\n    if (httpOptions.xhrWithCredentials) {\n      xhr.withCredentials = true;\n    }\n    try { xhr.responseType = 'arraybuffer'; } catch (e) {}\n\n    try {\n      if (httpRequest.body) {\n        xhr.send(httpRequest.body);\n      } else {\n        xhr.send();\n      }\n    } catch (err) {\n      if (httpRequest.body && typeof httpRequest.body.buffer === 'object') {\n        xhr.send(httpRequest.body.buffer); // send ArrayBuffer directly\n      } else {\n        throw err;\n      }\n    }\n\n    return emitter;\n  },\n\n  parseHeaders: function parseHeaders(rawHeaders) {\n    var headers = {};\n    AWS.util.arrayEach(rawHeaders.split(/\\r?\\n/), function (line) {\n      var key = line.split(':', 1)[0];\n      var value = line.substring(key.length + 2);\n      if (key.length > 0) headers[key.toLowerCase()] = value;\n    });\n    return headers;\n  },\n\n  finishRequest: function finishRequest(xhr, emitter) {\n    var buffer;\n    if (xhr.responseType === 'arraybuffer' && xhr.response) {\n      var ab = xhr.response;\n      buffer = new AWS.util.Buffer(ab.byteLength);\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < buffer.length; ++i) {\n        buffer[i] = view[i];\n      }\n    }\n\n    try {\n      if (!buffer && typeof xhr.responseText === 'string') {\n        buffer = new AWS.util.Buffer(xhr.responseText);\n      }\n    } catch (e) {}\n\n    if (buffer) emitter.emit('data', buffer);\n    emitter.emit('end');\n  }\n});\n\n/**\n * @api private\n */\nAWS.HttpClient.prototype = AWS.XHRClient.prototype;\n\n/**\n * @api private\n */\nAWS.HttpClient.streamsApiVersion = 1;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}