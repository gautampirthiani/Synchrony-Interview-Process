{"ast":null,"code":"var AWS = require('../core');\n\n/**\n * @api private\n */\nvar cachedSecret = {};\n\n/**\n * @api private\n */\nvar cacheQueue = [];\n\n/**\n * @api private\n */\nvar maxCacheEntries = 50;\n\n/**\n * @api private\n */\nvar v4Identifier = 'aws4_request';\n\n/**\n * @api private\n */\nmodule.exports = {\n  /**\n   * @api private\n   *\n   * @param date [String]\n   * @param region [String]\n   * @param serviceName [String]\n   * @return [String]\n   */\n  createScope: function createScope(date, region, serviceName) {\n    return [date.substr(0, 8), region, serviceName, v4Identifier].join('/');\n  },\n  /**\n   * @api private\n   *\n   * @param credentials [Credentials]\n   * @param date [String]\n   * @param region [String]\n   * @param service [String]\n   * @param shouldCache [Boolean]\n   * @return [String]\n   */\n  getSigningKey: function getSigningKey(credentials, date, region, service, shouldCache) {\n    var credsIdentifier = AWS.util.crypto.hmac(credentials.secretAccessKey, credentials.accessKeyId, 'base64');\n    var cacheKey = [credsIdentifier, date, region, service].join('_');\n    shouldCache = shouldCache !== false;\n    if (shouldCache && cacheKey in cachedSecret) {\n      return cachedSecret[cacheKey];\n    }\n    var kDate = AWS.util.crypto.hmac('AWS4' + credentials.secretAccessKey, date, 'buffer');\n    var kRegion = AWS.util.crypto.hmac(kDate, region, 'buffer');\n    var kService = AWS.util.crypto.hmac(kRegion, service, 'buffer');\n    var signingKey = AWS.util.crypto.hmac(kService, v4Identifier, 'buffer');\n    if (shouldCache) {\n      cachedSecret[cacheKey] = signingKey;\n      cacheQueue.push(cacheKey);\n      if (cacheQueue.length > maxCacheEntries) {\n        // remove the oldest entry (not the least recently used)\n        delete cachedSecret[cacheQueue.shift()];\n      }\n    }\n    return signingKey;\n  },\n  /**\n   * @api private\n   *\n   * Empties the derived signing key cache. Made available for testing purposes\n   * only.\n   */\n  emptyCache: function emptyCache() {\n    cachedSecret = {};\n    cacheQueue = [];\n  }\n};","map":{"version":3,"names":["AWS","require","cachedSecret","cacheQueue","maxCacheEntries","v4Identifier","module","exports","createScope","date","region","serviceName","substr","join","getSigningKey","credentials","service","shouldCache","credsIdentifier","util","crypto","hmac","secretAccessKey","accessKeyId","cacheKey","kDate","kRegion","kService","signingKey","push","length","shift","emptyCache"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/lib/signers/v4_credentials.js"],"sourcesContent":["var AWS = require('../core');\n\n/**\n * @api private\n */\nvar cachedSecret = {};\n\n/**\n * @api private\n */\nvar cacheQueue = [];\n\n/**\n * @api private\n */\nvar maxCacheEntries = 50;\n\n/**\n * @api private\n */\nvar v4Identifier = 'aws4_request';\n\n/**\n * @api private\n */\nmodule.exports = {\n  /**\n   * @api private\n   *\n   * @param date [String]\n   * @param region [String]\n   * @param serviceName [String]\n   * @return [String]\n   */\n  createScope: function createScope(date, region, serviceName) {\n    return [\n      date.substr(0, 8),\n      region,\n      serviceName,\n      v4Identifier\n    ].join('/');\n  },\n\n  /**\n   * @api private\n   *\n   * @param credentials [Credentials]\n   * @param date [String]\n   * @param region [String]\n   * @param service [String]\n   * @param shouldCache [Boolean]\n   * @return [String]\n   */\n  getSigningKey: function getSigningKey(\n    credentials,\n    date,\n    region,\n    service,\n    shouldCache\n  ) {\n    var credsIdentifier = AWS.util.crypto\n      .hmac(credentials.secretAccessKey, credentials.accessKeyId, 'base64');\n    var cacheKey = [credsIdentifier, date, region, service].join('_');\n    shouldCache = shouldCache !== false;\n    if (shouldCache && (cacheKey in cachedSecret)) {\n      return cachedSecret[cacheKey];\n    }\n\n    var kDate = AWS.util.crypto.hmac(\n      'AWS4' + credentials.secretAccessKey,\n      date,\n      'buffer'\n    );\n    var kRegion = AWS.util.crypto.hmac(kDate, region, 'buffer');\n    var kService = AWS.util.crypto.hmac(kRegion, service, 'buffer');\n\n    var signingKey = AWS.util.crypto.hmac(kService, v4Identifier, 'buffer');\n    if (shouldCache) {\n      cachedSecret[cacheKey] = signingKey;\n      cacheQueue.push(cacheKey);\n      if (cacheQueue.length > maxCacheEntries) {\n        // remove the oldest entry (not the least recently used)\n        delete cachedSecret[cacheQueue.shift()];\n      }\n    }\n\n    return signingKey;\n  },\n\n  /**\n   * @api private\n   *\n   * Empties the derived signing key cache. Made available for testing purposes\n   * only.\n   */\n  emptyCache: function emptyCache() {\n    cachedSecret = {};\n    cacheQueue = [];\n  }\n};\n"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAE5B;AACA;AACA;AACA,IAAIC,YAAY,GAAG,CAAC,CAAC;;AAErB;AACA;AACA;AACA,IAAIC,UAAU,GAAG,EAAE;;AAEnB;AACA;AACA;AACA,IAAIC,eAAe,GAAG,EAAE;;AAExB;AACA;AACA;AACA,IAAIC,YAAY,GAAG,cAAc;;AAEjC;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG;EACf;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,WAAW,EAAE,SAASA,WAAWA,CAACC,IAAI,EAAEC,MAAM,EAAEC,WAAW,EAAE;IAC3D,OAAO,CACLF,IAAI,CAACG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EACjBF,MAAM,EACNC,WAAW,EACXN,YAAY,CACb,CAACQ,IAAI,CAAC,GAAG,CAAC;EACb,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,aAAa,EAAE,SAASA,aAAaA,CACnCC,WAAW,EACXN,IAAI,EACJC,MAAM,EACNM,OAAO,EACPC,WAAW,EACX;IACA,IAAIC,eAAe,GAAGlB,GAAG,CAACmB,IAAI,CAACC,MAAM,CAClCC,IAAI,CAACN,WAAW,CAACO,eAAe,EAAEP,WAAW,CAACQ,WAAW,EAAE,QAAQ,CAAC;IACvE,IAAIC,QAAQ,GAAG,CAACN,eAAe,EAAET,IAAI,EAAEC,MAAM,EAAEM,OAAO,CAAC,CAACH,IAAI,CAAC,GAAG,CAAC;IACjEI,WAAW,GAAGA,WAAW,KAAK,KAAK;IACnC,IAAIA,WAAW,IAAKO,QAAQ,IAAItB,YAAa,EAAE;MAC7C,OAAOA,YAAY,CAACsB,QAAQ,CAAC;IAC/B;IAEA,IAAIC,KAAK,GAAGzB,GAAG,CAACmB,IAAI,CAACC,MAAM,CAACC,IAAI,CAC9B,MAAM,GAAGN,WAAW,CAACO,eAAe,EACpCb,IAAI,EACJ,QACF,CAAC;IACD,IAAIiB,OAAO,GAAG1B,GAAG,CAACmB,IAAI,CAACC,MAAM,CAACC,IAAI,CAACI,KAAK,EAAEf,MAAM,EAAE,QAAQ,CAAC;IAC3D,IAAIiB,QAAQ,GAAG3B,GAAG,CAACmB,IAAI,CAACC,MAAM,CAACC,IAAI,CAACK,OAAO,EAAEV,OAAO,EAAE,QAAQ,CAAC;IAE/D,IAAIY,UAAU,GAAG5B,GAAG,CAACmB,IAAI,CAACC,MAAM,CAACC,IAAI,CAACM,QAAQ,EAAEtB,YAAY,EAAE,QAAQ,CAAC;IACvE,IAAIY,WAAW,EAAE;MACff,YAAY,CAACsB,QAAQ,CAAC,GAAGI,UAAU;MACnCzB,UAAU,CAAC0B,IAAI,CAACL,QAAQ,CAAC;MACzB,IAAIrB,UAAU,CAAC2B,MAAM,GAAG1B,eAAe,EAAE;QACvC;QACA,OAAOF,YAAY,CAACC,UAAU,CAAC4B,KAAK,CAAC,CAAC,CAAC;MACzC;IACF;IAEA,OAAOH,UAAU;EACnB,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACEI,UAAU,EAAE,SAASA,UAAUA,CAAA,EAAG;IAChC9B,YAAY,GAAG,CAAC,CAAC;IACjBC,UAAU,GAAG,EAAE;EACjB;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}