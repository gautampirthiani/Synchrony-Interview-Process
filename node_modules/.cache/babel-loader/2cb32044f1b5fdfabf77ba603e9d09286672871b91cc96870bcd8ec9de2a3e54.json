{"ast":null,"code":"var util = require('../util');\nvar JsonBuilder = require('../json/builder');\nvar JsonParser = require('../json/parser');\nvar populateHostPrefix = require('./helpers').populateHostPrefix;\nfunction buildRequest(req) {\n  var httpRequest = req.httpRequest;\n  var api = req.service.api;\n  var target = api.targetPrefix + '.' + api.operations[req.operation].name;\n  var version = api.jsonVersion || '1.0';\n  var input = api.operations[req.operation].input;\n  var builder = new JsonBuilder();\n  if (version === 1) version = '1.0';\n  if (api.awsQueryCompatible) {\n    if (!httpRequest.params) {\n      httpRequest.params = {};\n    }\n    // because Query protocol does this.\n    Object.assign(httpRequest.params, req.params);\n  }\n  httpRequest.body = builder.build(req.params || {}, input);\n  httpRequest.headers['Content-Type'] = 'application/x-amz-json-' + version;\n  httpRequest.headers['X-Amz-Target'] = target;\n  populateHostPrefix(req);\n}\nfunction extractError(resp) {\n  var error = {};\n  var httpResponse = resp.httpResponse;\n  error.code = httpResponse.headers['x-amzn-errortype'] || 'UnknownError';\n  if (typeof error.code === 'string') {\n    error.code = error.code.split(':')[0];\n  }\n  if (httpResponse.body.length > 0) {\n    try {\n      var e = JSON.parse(httpResponse.body.toString());\n      var code = e.__type || e.code || e.Code;\n      if (code) {\n        error.code = code.split('#').pop();\n      }\n      if (error.code === 'RequestEntityTooLarge') {\n        error.message = 'Request body must be less than 1 MB';\n      } else {\n        error.message = e.message || e.Message || null;\n      }\n\n      // The minimized models do not have error shapes, so\n      // without expanding the model size, it's not possible\n      // to validate the response shape (members) or\n      // check if any are sensitive to logging.\n\n      // Assign the fields as non-enumerable, allowing specific access only.\n      for (var key in e || {}) {\n        if (key === 'code' || key === 'message') {\n          continue;\n        }\n        error['[' + key + ']'] = 'See error.' + key + ' for details.';\n        Object.defineProperty(error, key, {\n          value: e[key],\n          enumerable: false,\n          writable: true\n        });\n      }\n    } catch (e) {\n      error.statusCode = httpResponse.statusCode;\n      error.message = httpResponse.statusMessage;\n    }\n  } else {\n    error.statusCode = httpResponse.statusCode;\n    error.message = httpResponse.statusCode.toString();\n  }\n  resp.error = util.error(new Error(), error);\n}\nfunction extractData(resp) {\n  var body = resp.httpResponse.body.toString() || '{}';\n  if (resp.request.service.config.convertResponseTypes === false) {\n    resp.data = JSON.parse(body);\n  } else {\n    var operation = resp.request.service.api.operations[resp.request.operation];\n    var shape = operation.output || {};\n    var parser = new JsonParser();\n    resp.data = parser.parse(body, shape);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};","map":{"version":3,"names":["util","require","JsonBuilder","JsonParser","populateHostPrefix","buildRequest","req","httpRequest","api","service","target","targetPrefix","operations","operation","name","version","jsonVersion","input","builder","awsQueryCompatible","params","Object","assign","body","build","headers","extractError","resp","error","httpResponse","code","split","length","e","JSON","parse","toString","__type","Code","pop","message","Message","key","defineProperty","value","enumerable","writable","statusCode","statusMessage","Error","extractData","request","config","convertResponseTypes","data","shape","output","parser","module","exports"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/lib/protocol/json.js"],"sourcesContent":["var util = require('../util');\nvar JsonBuilder = require('../json/builder');\nvar JsonParser = require('../json/parser');\nvar populateHostPrefix = require('./helpers').populateHostPrefix;\n\nfunction buildRequest(req) {\n  var httpRequest = req.httpRequest;\n  var api = req.service.api;\n  var target = api.targetPrefix + '.' + api.operations[req.operation].name;\n  var version = api.jsonVersion || '1.0';\n  var input = api.operations[req.operation].input;\n  var builder = new JsonBuilder();\n\n  if (version === 1) version = '1.0';\n\n  if (api.awsQueryCompatible) {\n    if (!httpRequest.params) {\n      httpRequest.params = {};\n    }\n    // because Query protocol does this.\n    Object.assign(httpRequest.params, req.params);\n  }\n\n  httpRequest.body = builder.build(req.params || {}, input);\n  httpRequest.headers['Content-Type'] = 'application/x-amz-json-' + version;\n  httpRequest.headers['X-Amz-Target'] = target;\n\n  populateHostPrefix(req);\n}\n\nfunction extractError(resp) {\n  var error = {};\n  var httpResponse = resp.httpResponse;\n\n  error.code = httpResponse.headers['x-amzn-errortype'] || 'UnknownError';\n  if (typeof error.code === 'string') {\n    error.code = error.code.split(':')[0];\n  }\n\n  if (httpResponse.body.length > 0) {\n    try {\n      var e = JSON.parse(httpResponse.body.toString());\n\n      var code = e.__type || e.code || e.Code;\n      if (code) {\n        error.code = code.split('#').pop();\n      }\n      if (error.code === 'RequestEntityTooLarge') {\n        error.message = 'Request body must be less than 1 MB';\n      } else {\n        error.message = (e.message || e.Message || null);\n      }\n\n      // The minimized models do not have error shapes, so\n      // without expanding the model size, it's not possible\n      // to validate the response shape (members) or\n      // check if any are sensitive to logging.\n\n      // Assign the fields as non-enumerable, allowing specific access only.\n      for (var key in e || {}) {\n        if (key === 'code' || key === 'message') {\n          continue;\n        }\n        error['[' + key + ']'] = 'See error.' + key + ' for details.';\n        Object.defineProperty(error, key, {\n          value: e[key],\n          enumerable: false,\n          writable: true\n        });\n      }\n    } catch (e) {\n      error.statusCode = httpResponse.statusCode;\n      error.message = httpResponse.statusMessage;\n    }\n  } else {\n    error.statusCode = httpResponse.statusCode;\n    error.message = httpResponse.statusCode.toString();\n  }\n\n  resp.error = util.error(new Error(), error);\n}\n\nfunction extractData(resp) {\n  var body = resp.httpResponse.body.toString() || '{}';\n  if (resp.request.service.config.convertResponseTypes === false) {\n    resp.data = JSON.parse(body);\n  } else {\n    var operation = resp.request.service.api.operations[resp.request.operation];\n    var shape = operation.output || {};\n    var parser = new JsonParser();\n    resp.data = parser.parse(body, shape);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}