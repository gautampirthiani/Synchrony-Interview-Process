{"ast":null,"code":"var AWS = require('./core');\n\n/**\n * @api private\n */\nAWS.ParamValidator = AWS.util.inherit({\n  /**\n   * Create a new validator object.\n   *\n   * @param validation [Boolean|map] whether input parameters should be\n   *     validated against the operation description before sending the\n   *     request. Pass a map to enable any of the following specific\n   *     validation features:\n   *\n   *     * **min** [Boolean] &mdash; Validates that a value meets the min\n   *       constraint. This is enabled by default when paramValidation is set\n   *       to `true`.\n   *     * **max** [Boolean] &mdash; Validates that a value meets the max\n   *       constraint.\n   *     * **pattern** [Boolean] &mdash; Validates that a string value matches a\n   *       regular expression.\n   *     * **enum** [Boolean] &mdash; Validates that a string value matches one\n   *       of the allowable enum values.\n   */\n  constructor: function ParamValidator(validation) {\n    if (validation === true || validation === undefined) {\n      validation = {\n        'min': true\n      };\n    }\n    this.validation = validation;\n  },\n  validate: function validate(shape, params, context) {\n    this.errors = [];\n    this.validateMember(shape, params || {}, context || 'params');\n    if (this.errors.length > 1) {\n      var msg = this.errors.join('\\n* ');\n      msg = 'There were ' + this.errors.length + ' validation errors:\\n* ' + msg;\n      throw AWS.util.error(new Error(msg), {\n        code: 'MultipleValidationErrors',\n        errors: this.errors\n      });\n    } else if (this.errors.length === 1) {\n      throw this.errors[0];\n    } else {\n      return true;\n    }\n  },\n  fail: function fail(code, message) {\n    this.errors.push(AWS.util.error(new Error(message), {\n      code: code\n    }));\n  },\n  validateStructure: function validateStructure(shape, params, context) {\n    if (shape.isDocument) return true;\n    this.validateType(params, context, ['object'], 'structure');\n    var paramName;\n    for (var i = 0; shape.required && i < shape.required.length; i++) {\n      paramName = shape.required[i];\n      var value = params[paramName];\n      if (value === undefined || value === null) {\n        this.fail('MissingRequiredParameter', 'Missing required key \\'' + paramName + '\\' in ' + context);\n      }\n    }\n\n    // validate hash members\n    for (paramName in params) {\n      if (!Object.prototype.hasOwnProperty.call(params, paramName)) continue;\n      var paramValue = params[paramName],\n        memberShape = shape.members[paramName];\n      if (memberShape !== undefined) {\n        var memberContext = [context, paramName].join('.');\n        this.validateMember(memberShape, paramValue, memberContext);\n      } else if (paramValue !== undefined && paramValue !== null) {\n        this.fail('UnexpectedParameter', 'Unexpected key \\'' + paramName + '\\' found in ' + context);\n      }\n    }\n    return true;\n  },\n  validateMember: function validateMember(shape, param, context) {\n    switch (shape.type) {\n      case 'structure':\n        return this.validateStructure(shape, param, context);\n      case 'list':\n        return this.validateList(shape, param, context);\n      case 'map':\n        return this.validateMap(shape, param, context);\n      default:\n        return this.validateScalar(shape, param, context);\n    }\n  },\n  validateList: function validateList(shape, params, context) {\n    if (this.validateType(params, context, [Array])) {\n      this.validateRange(shape, params.length, context, 'list member count');\n      // validate array members\n      for (var i = 0; i < params.length; i++) {\n        this.validateMember(shape.member, params[i], context + '[' + i + ']');\n      }\n    }\n  },\n  validateMap: function validateMap(shape, params, context) {\n    if (this.validateType(params, context, ['object'], 'map')) {\n      // Build up a count of map members to validate range traits.\n      var mapCount = 0;\n      for (var param in params) {\n        if (!Object.prototype.hasOwnProperty.call(params, param)) continue;\n        // Validate any map key trait constraints\n        this.validateMember(shape.key, param, context + '[key=\\'' + param + '\\']');\n        this.validateMember(shape.value, params[param], context + '[\\'' + param + '\\']');\n        mapCount++;\n      }\n      this.validateRange(shape, mapCount, context, 'map member count');\n    }\n  },\n  validateScalar: function validateScalar(shape, value, context) {\n    switch (shape.type) {\n      case null:\n      case undefined:\n      case 'string':\n        return this.validateString(shape, value, context);\n      case 'base64':\n      case 'binary':\n        return this.validatePayload(value, context);\n      case 'integer':\n      case 'float':\n        return this.validateNumber(shape, value, context);\n      case 'boolean':\n        return this.validateType(value, context, ['boolean']);\n      case 'timestamp':\n        return this.validateType(value, context, [Date, /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$/, 'number'], 'Date object, ISO-8601 string, or a UNIX timestamp');\n      default:\n        return this.fail('UnkownType', 'Unhandled type ' + shape.type + ' for ' + context);\n    }\n  },\n  validateString: function validateString(shape, value, context) {\n    var validTypes = ['string'];\n    if (shape.isJsonValue) {\n      validTypes = validTypes.concat(['number', 'object', 'boolean']);\n    }\n    if (value !== null && this.validateType(value, context, validTypes)) {\n      this.validateEnum(shape, value, context);\n      this.validateRange(shape, value.length, context, 'string length');\n      this.validatePattern(shape, value, context);\n      this.validateUri(shape, value, context);\n    }\n  },\n  validateUri: function validateUri(shape, value, context) {\n    if (shape['location'] === 'uri') {\n      if (value.length === 0) {\n        this.fail('UriParameterError', 'Expected uri parameter to have length >= 1,' + ' but found \"' + value + '\" for ' + context);\n      }\n    }\n  },\n  validatePattern: function validatePattern(shape, value, context) {\n    if (this.validation['pattern'] && shape['pattern'] !== undefined) {\n      if (!new RegExp(shape['pattern']).test(value)) {\n        this.fail('PatternMatchError', 'Provided value \"' + value + '\" ' + 'does not match regex pattern /' + shape['pattern'] + '/ for ' + context);\n      }\n    }\n  },\n  validateRange: function validateRange(shape, value, context, descriptor) {\n    if (this.validation['min']) {\n      if (shape['min'] !== undefined && value < shape['min']) {\n        this.fail('MinRangeError', 'Expected ' + descriptor + ' >= ' + shape['min'] + ', but found ' + value + ' for ' + context);\n      }\n    }\n    if (this.validation['max']) {\n      if (shape['max'] !== undefined && value > shape['max']) {\n        this.fail('MaxRangeError', 'Expected ' + descriptor + ' <= ' + shape['max'] + ', but found ' + value + ' for ' + context);\n      }\n    }\n  },\n  validateEnum: function validateRange(shape, value, context) {\n    if (this.validation['enum'] && shape['enum'] !== undefined) {\n      // Fail if the string value is not present in the enum list\n      if (shape['enum'].indexOf(value) === -1) {\n        this.fail('EnumError', 'Found string value of ' + value + ', but ' + 'expected ' + shape['enum'].join('|') + ' for ' + context);\n      }\n    }\n  },\n  validateType: function validateType(value, context, acceptedTypes, type) {\n    // We will not log an error for null or undefined, but we will return\n    // false so that callers know that the expected type was not strictly met.\n    if (value === null || value === undefined) return false;\n    var foundInvalidType = false;\n    for (var i = 0; i < acceptedTypes.length; i++) {\n      if (typeof acceptedTypes[i] === 'string') {\n        if (typeof value === acceptedTypes[i]) return true;\n      } else if (acceptedTypes[i] instanceof RegExp) {\n        if ((value || '').toString().match(acceptedTypes[i])) return true;\n      } else {\n        if (value instanceof acceptedTypes[i]) return true;\n        if (AWS.util.isType(value, acceptedTypes[i])) return true;\n        if (!type && !foundInvalidType) acceptedTypes = acceptedTypes.slice();\n        acceptedTypes[i] = AWS.util.typeName(acceptedTypes[i]);\n      }\n      foundInvalidType = true;\n    }\n    var acceptedType = type;\n    if (!acceptedType) {\n      acceptedType = acceptedTypes.join(', ').replace(/,([^,]+)$/, ', or$1');\n    }\n    var vowel = acceptedType.match(/^[aeiou]/i) ? 'n' : '';\n    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a' + vowel + ' ' + acceptedType);\n    return false;\n  },\n  validateNumber: function validateNumber(shape, value, context) {\n    if (value === null || value === undefined) return;\n    if (typeof value === 'string') {\n      var castedValue = parseFloat(value);\n      if (castedValue.toString() === value) value = castedValue;\n    }\n    if (this.validateType(value, context, ['number'])) {\n      this.validateRange(shape, value, context, 'numeric value');\n    }\n  },\n  validatePayload: function validatePayload(value, context) {\n    if (value === null || value === undefined) return;\n    if (typeof value === 'string') return;\n    if (value && typeof value.byteLength === 'number') return; // typed arrays\n    if (AWS.util.isNode()) {\n      // special check for buffer/stream in Node.js\n      var Stream = AWS.util.stream.Stream;\n      if (AWS.util.Buffer.isBuffer(value) || value instanceof Stream) return;\n    } else {\n      if (typeof Blob !== void 0 && value instanceof Blob) return;\n    }\n    var types = ['Buffer', 'Stream', 'File', 'Blob', 'ArrayBuffer', 'DataView'];\n    if (value) {\n      for (var i = 0; i < types.length; i++) {\n        if (AWS.util.isType(value, types[i])) return;\n        if (AWS.util.typeName(value.constructor) === types[i]) return;\n      }\n    }\n    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a ' + 'string, Buffer, Stream, Blob, or typed array object');\n  }\n});","map":{"version":3,"names":["AWS","require","ParamValidator","util","inherit","constructor","validation","undefined","validate","shape","params","context","errors","validateMember","length","msg","join","error","Error","code","fail","message","push","validateStructure","isDocument","validateType","paramName","i","required","value","Object","prototype","hasOwnProperty","call","paramValue","memberShape","members","memberContext","param","type","validateList","validateMap","validateScalar","Array","validateRange","member","mapCount","key","validateString","validatePayload","validateNumber","Date","validTypes","isJsonValue","concat","validateEnum","validatePattern","validateUri","RegExp","test","descriptor","indexOf","acceptedTypes","foundInvalidType","toString","match","isType","slice","typeName","acceptedType","replace","vowel","castedValue","parseFloat","byteLength","isNode","Stream","stream","Buffer","isBuffer","Blob","types"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/lib/param_validator.js"],"sourcesContent":["var AWS = require('./core');\n\n/**\n * @api private\n */\nAWS.ParamValidator = AWS.util.inherit({\n  /**\n   * Create a new validator object.\n   *\n   * @param validation [Boolean|map] whether input parameters should be\n   *     validated against the operation description before sending the\n   *     request. Pass a map to enable any of the following specific\n   *     validation features:\n   *\n   *     * **min** [Boolean] &mdash; Validates that a value meets the min\n   *       constraint. This is enabled by default when paramValidation is set\n   *       to `true`.\n   *     * **max** [Boolean] &mdash; Validates that a value meets the max\n   *       constraint.\n   *     * **pattern** [Boolean] &mdash; Validates that a string value matches a\n   *       regular expression.\n   *     * **enum** [Boolean] &mdash; Validates that a string value matches one\n   *       of the allowable enum values.\n   */\n  constructor: function ParamValidator(validation) {\n    if (validation === true || validation === undefined) {\n      validation = {'min': true};\n    }\n    this.validation = validation;\n  },\n\n  validate: function validate(shape, params, context) {\n    this.errors = [];\n    this.validateMember(shape, params || {}, context || 'params');\n\n    if (this.errors.length > 1) {\n      var msg = this.errors.join('\\n* ');\n      msg = 'There were ' + this.errors.length +\n        ' validation errors:\\n* ' + msg;\n      throw AWS.util.error(new Error(msg),\n        {code: 'MultipleValidationErrors', errors: this.errors});\n    } else if (this.errors.length === 1) {\n      throw this.errors[0];\n    } else {\n      return true;\n    }\n  },\n\n  fail: function fail(code, message) {\n    this.errors.push(AWS.util.error(new Error(message), {code: code}));\n  },\n\n  validateStructure: function validateStructure(shape, params, context) {\n    if (shape.isDocument) return true;\n\n    this.validateType(params, context, ['object'], 'structure');\n    var paramName;\n    for (var i = 0; shape.required && i < shape.required.length; i++) {\n      paramName = shape.required[i];\n      var value = params[paramName];\n      if (value === undefined || value === null) {\n        this.fail('MissingRequiredParameter',\n          'Missing required key \\'' + paramName + '\\' in ' + context);\n      }\n    }\n\n    // validate hash members\n    for (paramName in params) {\n      if (!Object.prototype.hasOwnProperty.call(params, paramName)) continue;\n\n      var paramValue = params[paramName],\n          memberShape = shape.members[paramName];\n\n      if (memberShape !== undefined) {\n        var memberContext = [context, paramName].join('.');\n        this.validateMember(memberShape, paramValue, memberContext);\n      } else if (paramValue !== undefined && paramValue !== null) {\n        this.fail('UnexpectedParameter',\n          'Unexpected key \\'' + paramName + '\\' found in ' + context);\n      }\n    }\n\n    return true;\n  },\n\n  validateMember: function validateMember(shape, param, context) {\n    switch (shape.type) {\n      case 'structure':\n        return this.validateStructure(shape, param, context);\n      case 'list':\n        return this.validateList(shape, param, context);\n      case 'map':\n        return this.validateMap(shape, param, context);\n      default:\n        return this.validateScalar(shape, param, context);\n    }\n  },\n\n  validateList: function validateList(shape, params, context) {\n    if (this.validateType(params, context, [Array])) {\n      this.validateRange(shape, params.length, context, 'list member count');\n      // validate array members\n      for (var i = 0; i < params.length; i++) {\n        this.validateMember(shape.member, params[i], context + '[' + i + ']');\n      }\n    }\n  },\n\n  validateMap: function validateMap(shape, params, context) {\n    if (this.validateType(params, context, ['object'], 'map')) {\n      // Build up a count of map members to validate range traits.\n      var mapCount = 0;\n      for (var param in params) {\n        if (!Object.prototype.hasOwnProperty.call(params, param)) continue;\n        // Validate any map key trait constraints\n        this.validateMember(shape.key, param,\n                            context + '[key=\\'' + param + '\\']');\n        this.validateMember(shape.value, params[param],\n                            context + '[\\'' + param + '\\']');\n        mapCount++;\n      }\n      this.validateRange(shape, mapCount, context, 'map member count');\n    }\n  },\n\n  validateScalar: function validateScalar(shape, value, context) {\n    switch (shape.type) {\n      case null:\n      case undefined:\n      case 'string':\n        return this.validateString(shape, value, context);\n      case 'base64':\n      case 'binary':\n        return this.validatePayload(value, context);\n      case 'integer':\n      case 'float':\n        return this.validateNumber(shape, value, context);\n      case 'boolean':\n        return this.validateType(value, context, ['boolean']);\n      case 'timestamp':\n        return this.validateType(value, context, [Date,\n          /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$/, 'number'],\n          'Date object, ISO-8601 string, or a UNIX timestamp');\n      default:\n        return this.fail('UnkownType', 'Unhandled type ' +\n                         shape.type + ' for ' + context);\n    }\n  },\n\n  validateString: function validateString(shape, value, context) {\n    var validTypes = ['string'];\n    if (shape.isJsonValue) {\n      validTypes = validTypes.concat(['number', 'object', 'boolean']);\n    }\n    if (value !== null && this.validateType(value, context, validTypes)) {\n      this.validateEnum(shape, value, context);\n      this.validateRange(shape, value.length, context, 'string length');\n      this.validatePattern(shape, value, context);\n      this.validateUri(shape, value, context);\n    }\n  },\n\n  validateUri: function validateUri(shape, value, context) {\n    if (shape['location'] === 'uri') {\n      if (value.length === 0) {\n        this.fail('UriParameterError', 'Expected uri parameter to have length >= 1,'\n          + ' but found \"' + value +'\" for ' + context);\n      }\n    }\n  },\n\n  validatePattern: function validatePattern(shape, value, context) {\n    if (this.validation['pattern'] && shape['pattern'] !== undefined) {\n      if (!(new RegExp(shape['pattern'])).test(value)) {\n        this.fail('PatternMatchError', 'Provided value \"' + value + '\" '\n          + 'does not match regex pattern /' + shape['pattern'] + '/ for '\n          + context);\n      }\n    }\n  },\n\n  validateRange: function validateRange(shape, value, context, descriptor) {\n    if (this.validation['min']) {\n      if (shape['min'] !== undefined && value < shape['min']) {\n        this.fail('MinRangeError', 'Expected ' + descriptor + ' >= '\n          + shape['min'] + ', but found ' + value + ' for ' + context);\n      }\n    }\n    if (this.validation['max']) {\n      if (shape['max'] !== undefined && value > shape['max']) {\n        this.fail('MaxRangeError', 'Expected ' + descriptor + ' <= '\n          + shape['max'] + ', but found ' + value + ' for ' + context);\n      }\n    }\n  },\n\n  validateEnum: function validateRange(shape, value, context) {\n    if (this.validation['enum'] && shape['enum'] !== undefined) {\n      // Fail if the string value is not present in the enum list\n      if (shape['enum'].indexOf(value) === -1) {\n        this.fail('EnumError', 'Found string value of ' + value + ', but '\n          + 'expected ' + shape['enum'].join('|') + ' for ' + context);\n      }\n    }\n  },\n\n  validateType: function validateType(value, context, acceptedTypes, type) {\n    // We will not log an error for null or undefined, but we will return\n    // false so that callers know that the expected type was not strictly met.\n    if (value === null || value === undefined) return false;\n\n    var foundInvalidType = false;\n    for (var i = 0; i < acceptedTypes.length; i++) {\n      if (typeof acceptedTypes[i] === 'string') {\n        if (typeof value === acceptedTypes[i]) return true;\n      } else if (acceptedTypes[i] instanceof RegExp) {\n        if ((value || '').toString().match(acceptedTypes[i])) return true;\n      } else {\n        if (value instanceof acceptedTypes[i]) return true;\n        if (AWS.util.isType(value, acceptedTypes[i])) return true;\n        if (!type && !foundInvalidType) acceptedTypes = acceptedTypes.slice();\n        acceptedTypes[i] = AWS.util.typeName(acceptedTypes[i]);\n      }\n      foundInvalidType = true;\n    }\n\n    var acceptedType = type;\n    if (!acceptedType) {\n      acceptedType = acceptedTypes.join(', ').replace(/,([^,]+)$/, ', or$1');\n    }\n\n    var vowel = acceptedType.match(/^[aeiou]/i) ? 'n' : '';\n    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a' +\n              vowel + ' ' + acceptedType);\n    return false;\n  },\n\n  validateNumber: function validateNumber(shape, value, context) {\n    if (value === null || value === undefined) return;\n    if (typeof value === 'string') {\n      var castedValue = parseFloat(value);\n      if (castedValue.toString() === value) value = castedValue;\n    }\n    if (this.validateType(value, context, ['number'])) {\n      this.validateRange(shape, value, context, 'numeric value');\n    }\n  },\n\n  validatePayload: function validatePayload(value, context) {\n    if (value === null || value === undefined) return;\n    if (typeof value === 'string') return;\n    if (value && typeof value.byteLength === 'number') return; // typed arrays\n    if (AWS.util.isNode()) { // special check for buffer/stream in Node.js\n      var Stream = AWS.util.stream.Stream;\n      if (AWS.util.Buffer.isBuffer(value) || value instanceof Stream) return;\n    } else {\n      if (typeof Blob !== void 0 && value instanceof Blob) return;\n    }\n\n    var types = ['Buffer', 'Stream', 'File', 'Blob', 'ArrayBuffer', 'DataView'];\n    if (value) {\n      for (var i = 0; i < types.length; i++) {\n        if (AWS.util.isType(value, types[i])) return;\n        if (AWS.util.typeName(value.constructor) === types[i]) return;\n      }\n    }\n\n    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a ' +\n      'string, Buffer, Stream, Blob, or typed array object');\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}