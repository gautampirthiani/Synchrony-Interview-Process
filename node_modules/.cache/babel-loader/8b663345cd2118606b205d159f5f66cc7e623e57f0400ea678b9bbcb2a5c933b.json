{"ast":null,"code":"var AWS = require('./core');\nvar util = require('./util');\nvar endpointDiscoveryEnabledEnvs = ['AWS_ENABLE_ENDPOINT_DISCOVERY', 'AWS_ENDPOINT_DISCOVERY_ENABLED'];\n\n/**\n * Generate key (except resources and operation part) to index the endpoints in the cache\n * If input shape has endpointdiscoveryid trait then use\n *   accessKey + operation + resources + region + service as cache key\n * If input shape doesn't have endpointdiscoveryid trait then use\n *   accessKey + region + service as cache key\n * @return [map<String,String>] object with keys to index endpoints.\n * @api private\n */\nfunction getCacheKey(request) {\n  var service = request.service;\n  var api = service.api || {};\n  var operations = api.operations;\n  var identifiers = {};\n  if (service.config.region) {\n    identifiers.region = service.config.region;\n  }\n  if (api.serviceId) {\n    identifiers.serviceId = api.serviceId;\n  }\n  if (service.config.credentials.accessKeyId) {\n    identifiers.accessKeyId = service.config.credentials.accessKeyId;\n  }\n  return identifiers;\n}\n\n/**\n * Recursive helper for marshallCustomIdentifiers().\n * Looks for required string input members that have 'endpointdiscoveryid' trait.\n * @api private\n */\nfunction marshallCustomIdentifiersHelper(result, params, shape) {\n  if (!shape || params === undefined || params === null) return;\n  if (shape.type === 'structure' && shape.required && shape.required.length > 0) {\n    util.arrayEach(shape.required, function (name) {\n      var memberShape = shape.members[name];\n      if (memberShape.endpointDiscoveryId === true) {\n        var locationName = memberShape.isLocationName ? memberShape.name : name;\n        result[locationName] = String(params[name]);\n      } else {\n        marshallCustomIdentifiersHelper(result, params[name], memberShape);\n      }\n    });\n  }\n}\n\n/**\n * Get custom identifiers for cache key.\n * Identifies custom identifiers by checking each shape's `endpointDiscoveryId` trait.\n * @param [object] request object\n * @param [object] input shape of the given operation's api\n * @api private\n */\nfunction marshallCustomIdentifiers(request, shape) {\n  var identifiers = {};\n  marshallCustomIdentifiersHelper(identifiers, request.params, shape);\n  return identifiers;\n}\n\n/**\n * Call endpoint discovery operation when it's optional.\n * When endpoint is available in cache then use the cached endpoints. If endpoints\n * are unavailable then use regional endpoints and call endpoint discovery operation\n * asynchronously. This is turned off by default.\n * @param [object] request object\n * @api private\n */\nfunction optionalDiscoverEndpoint(request) {\n  var service = request.service;\n  var api = service.api;\n  var operationModel = api.operations ? api.operations[request.operation] : undefined;\n  var inputShape = operationModel ? operationModel.input : undefined;\n  var identifiers = marshallCustomIdentifiers(request, inputShape);\n  var cacheKey = getCacheKey(request);\n  if (Object.keys(identifiers).length > 0) {\n    cacheKey = util.update(cacheKey, identifiers);\n    if (operationModel) cacheKey.operation = operationModel.name;\n  }\n  var endpoints = AWS.endpointCache.get(cacheKey);\n  if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {\n    //endpoint operation is being made but response not yet received\n    //or endpoint operation just failed in 1 minute\n    return;\n  } else if (endpoints && endpoints.length > 0) {\n    //found endpoint record from cache\n    request.httpRequest.updateEndpoint(endpoints[0].Address);\n  } else {\n    //endpoint record not in cache or outdated. make discovery operation\n    var endpointRequest = service.makeRequest(api.endpointOperation, {\n      Operation: operationModel.name,\n      Identifiers: identifiers\n    });\n    addApiVersionHeader(endpointRequest);\n    endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    endpointRequest.removeListener('retry', AWS.EventListeners.Core.RETRY_CHECK);\n    //put in a placeholder for endpoints already requested, prevent\n    //too much in-flight calls\n    AWS.endpointCache.put(cacheKey, [{\n      Address: '',\n      CachePeriodInMinutes: 1\n    }]);\n    endpointRequest.send(function (err, data) {\n      if (data && data.Endpoints) {\n        AWS.endpointCache.put(cacheKey, data.Endpoints);\n      } else if (err) {\n        AWS.endpointCache.put(cacheKey, [{\n          Address: '',\n          CachePeriodInMinutes: 1 //not to make more endpoint operation in next 1 minute\n        }]);\n      }\n    });\n  }\n}\n\nvar requestQueue = {};\n\n/**\n * Call endpoint discovery operation when it's required.\n * When endpoint is available in cache then use cached ones. If endpoints are\n * unavailable then SDK should call endpoint operation then use returned new\n * endpoint for the api call. SDK will automatically attempt to do endpoint\n * discovery. This is turned off by default\n * @param [object] request object\n * @api private\n */\nfunction requiredDiscoverEndpoint(request, done) {\n  var service = request.service;\n  var api = service.api;\n  var operationModel = api.operations ? api.operations[request.operation] : undefined;\n  var inputShape = operationModel ? operationModel.input : undefined;\n  var identifiers = marshallCustomIdentifiers(request, inputShape);\n  var cacheKey = getCacheKey(request);\n  if (Object.keys(identifiers).length > 0) {\n    cacheKey = util.update(cacheKey, identifiers);\n    if (operationModel) cacheKey.operation = operationModel.name;\n  }\n  var cacheKeyStr = AWS.EndpointCache.getKeyString(cacheKey);\n  var endpoints = AWS.endpointCache.get(cacheKeyStr); //endpoint cache also accepts string keys\n  if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {\n    //endpoint operation is being made but response not yet received\n    //push request object to a pending queue\n    if (!requestQueue[cacheKeyStr]) requestQueue[cacheKeyStr] = [];\n    requestQueue[cacheKeyStr].push({\n      request: request,\n      callback: done\n    });\n    return;\n  } else if (endpoints && endpoints.length > 0) {\n    request.httpRequest.updateEndpoint(endpoints[0].Address);\n    done();\n  } else {\n    var endpointRequest = service.makeRequest(api.endpointOperation, {\n      Operation: operationModel.name,\n      Identifiers: identifiers\n    });\n    endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    addApiVersionHeader(endpointRequest);\n\n    //put in a placeholder for endpoints already requested, prevent\n    //too much in-flight calls\n    AWS.endpointCache.put(cacheKeyStr, [{\n      Address: '',\n      CachePeriodInMinutes: 60 //long-live cache\n    }]);\n\n    endpointRequest.send(function (err, data) {\n      if (err) {\n        request.response.error = util.error(err, {\n          retryable: false\n        });\n        AWS.endpointCache.remove(cacheKey);\n\n        //fail all the pending requests in batch\n        if (requestQueue[cacheKeyStr]) {\n          var pendingRequests = requestQueue[cacheKeyStr];\n          util.arrayEach(pendingRequests, function (requestContext) {\n            requestContext.request.response.error = util.error(err, {\n              retryable: false\n            });\n            requestContext.callback();\n          });\n          delete requestQueue[cacheKeyStr];\n        }\n      } else if (data) {\n        AWS.endpointCache.put(cacheKeyStr, data.Endpoints);\n        request.httpRequest.updateEndpoint(data.Endpoints[0].Address);\n\n        //update the endpoint for all the pending requests in batch\n        if (requestQueue[cacheKeyStr]) {\n          var pendingRequests = requestQueue[cacheKeyStr];\n          util.arrayEach(pendingRequests, function (requestContext) {\n            requestContext.request.httpRequest.updateEndpoint(data.Endpoints[0].Address);\n            requestContext.callback();\n          });\n          delete requestQueue[cacheKeyStr];\n        }\n      }\n      done();\n    });\n  }\n}\n\n/**\n * add api version header to endpoint operation\n * @api private\n */\nfunction addApiVersionHeader(endpointRequest) {\n  var api = endpointRequest.service.api;\n  var apiVersion = api.apiVersion;\n  if (apiVersion && !endpointRequest.httpRequest.headers['x-amz-api-version']) {\n    endpointRequest.httpRequest.headers['x-amz-api-version'] = apiVersion;\n  }\n}\n\n/**\n * If api call gets invalid endpoint exception, SDK should attempt to remove the invalid\n * endpoint from cache.\n * @api private\n */\nfunction invalidateCachedEndpoints(response) {\n  var error = response.error;\n  var httpResponse = response.httpResponse;\n  if (error && (error.code === 'InvalidEndpointException' || httpResponse.statusCode === 421)) {\n    var request = response.request;\n    var operations = request.service.api.operations || {};\n    var inputShape = operations[request.operation] ? operations[request.operation].input : undefined;\n    var identifiers = marshallCustomIdentifiers(request, inputShape);\n    var cacheKey = getCacheKey(request);\n    if (Object.keys(identifiers).length > 0) {\n      cacheKey = util.update(cacheKey, identifiers);\n      if (operations[request.operation]) cacheKey.operation = operations[request.operation].name;\n    }\n    AWS.endpointCache.remove(cacheKey);\n  }\n}\n\n/**\n * If endpoint is explicitly configured, SDK should not do endpoint discovery in anytime.\n * @param [object] client Service client object.\n * @api private\n */\nfunction hasCustomEndpoint(client) {\n  //if set endpoint is set for specific client, enable endpoint discovery will raise an error.\n  if (client._originalConfig && client._originalConfig.endpoint && client._originalConfig.endpointDiscoveryEnabled === true) {\n    throw util.error(new Error(), {\n      code: 'ConfigurationException',\n      message: 'Custom endpoint is supplied; endpointDiscoveryEnabled must not be true.'\n    });\n  }\n  ;\n  var svcConfig = AWS.config[client.serviceIdentifier] || {};\n  return Boolean(AWS.config.endpoint || svcConfig.endpoint || client._originalConfig && client._originalConfig.endpoint);\n}\n\n/**\n * @api private\n */\nfunction isFalsy(value) {\n  return ['false', '0'].indexOf(value) >= 0;\n}\n\n/**\n * If endpoint discovery should perform for this request when no operation requires endpoint\n * discovery for the given service.\n * SDK performs config resolution in order like below:\n * 1. If set in client configuration.\n * 2. If set in env AWS_ENABLE_ENDPOINT_DISCOVERY.\n * 3. If set in shared ini config file with key 'endpoint_discovery_enabled'.\n * @param [object] request request object.\n * @returns [boolean|undefined] if endpoint discovery config is not set in any source, this\n *  function returns undefined\n * @api private\n */\nfunction resolveEndpointDiscoveryConfig(request) {\n  var service = request.service || {};\n  if (service.config.endpointDiscoveryEnabled !== undefined) {\n    return service.config.endpointDiscoveryEnabled;\n  }\n\n  //shared ini file is only available in Node\n  //not to check env in browser\n  if (util.isBrowser()) return undefined;\n\n  // If any of recognized endpoint discovery config env is set\n  for (var i = 0; i < endpointDiscoveryEnabledEnvs.length; i++) {\n    var env = endpointDiscoveryEnabledEnvs[i];\n    if (Object.prototype.hasOwnProperty.call(process.env, env)) {\n      if (process.env[env] === '' || process.env[env] === undefined) {\n        throw util.error(new Error(), {\n          code: 'ConfigurationException',\n          message: 'environmental variable ' + env + ' cannot be set to nothing'\n        });\n      }\n      return !isFalsy(process.env[env]);\n    }\n  }\n  var configFile = {};\n  try {\n    configFile = AWS.util.iniLoader ? AWS.util.iniLoader.loadFrom({\n      isConfig: true,\n      filename: process.env[AWS.util.sharedConfigFileEnv]\n    }) : {};\n  } catch (e) {}\n  var sharedFileConfig = configFile[process.env.AWS_PROFILE || AWS.util.defaultProfile] || {};\n  if (Object.prototype.hasOwnProperty.call(sharedFileConfig, 'endpoint_discovery_enabled')) {\n    if (sharedFileConfig.endpoint_discovery_enabled === undefined) {\n      throw util.error(new Error(), {\n        code: 'ConfigurationException',\n        message: 'config file entry \\'endpoint_discovery_enabled\\' cannot be set to nothing'\n      });\n    }\n    return !isFalsy(sharedFileConfig.endpoint_discovery_enabled);\n  }\n  return undefined;\n}\n\n/**\n * attach endpoint discovery logic to request object\n * @param [object] request\n * @api private\n */\nfunction discoverEndpoint(request, done) {\n  var service = request.service || {};\n  if (hasCustomEndpoint(service) || request.isPresigned()) return done();\n  var operations = service.api.operations || {};\n  var operationModel = operations[request.operation];\n  var isEndpointDiscoveryRequired = operationModel ? operationModel.endpointDiscoveryRequired : 'NULL';\n  var isEnabled = resolveEndpointDiscoveryConfig(request);\n  var hasRequiredEndpointDiscovery = service.api.hasRequiredEndpointDiscovery;\n  if (isEnabled || hasRequiredEndpointDiscovery) {\n    // Once a customer enables endpoint discovery, the SDK should start appending\n    // the string endpoint-discovery to the user-agent on all requests.\n    request.httpRequest.appendToUserAgent('endpoint-discovery');\n  }\n  switch (isEndpointDiscoveryRequired) {\n    case 'OPTIONAL':\n      if (isEnabled || hasRequiredEndpointDiscovery) {\n        // For a given service; if at least one operation requires endpoint discovery then the SDK must enable endpoint discovery\n        // by default for all operations of that service, including operations where endpoint discovery is optional.\n        optionalDiscoverEndpoint(request);\n        request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);\n      }\n      done();\n      break;\n    case 'REQUIRED':\n      if (isEnabled === false) {\n        // For a given operation; if endpoint discovery is required and it has been disabled on the SDK client,\n        // then the SDK must return a clear and actionable exception.\n        request.response.error = util.error(new Error(), {\n          code: 'ConfigurationException',\n          message: 'Endpoint Discovery is disabled but ' + service.api.className + '.' + request.operation + '() requires it. Please check your configurations.'\n        });\n        done();\n        break;\n      }\n      request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);\n      requiredDiscoverEndpoint(request, done);\n      break;\n    case 'NULL':\n    default:\n      done();\n      break;\n  }\n}\nmodule.exports = {\n  discoverEndpoint: discoverEndpoint,\n  requiredDiscoverEndpoint: requiredDiscoverEndpoint,\n  optionalDiscoverEndpoint: optionalDiscoverEndpoint,\n  marshallCustomIdentifiers: marshallCustomIdentifiers,\n  getCacheKey: getCacheKey,\n  invalidateCachedEndpoint: invalidateCachedEndpoints\n};","map":{"version":3,"names":["AWS","require","util","endpointDiscoveryEnabledEnvs","getCacheKey","request","service","api","operations","identifiers","config","region","serviceId","credentials","accessKeyId","marshallCustomIdentifiersHelper","result","params","shape","undefined","type","required","length","arrayEach","name","memberShape","members","endpointDiscoveryId","locationName","isLocationName","String","marshallCustomIdentifiers","optionalDiscoverEndpoint","operationModel","operation","inputShape","input","cacheKey","Object","keys","update","endpoints","endpointCache","get","Address","httpRequest","updateEndpoint","endpointRequest","makeRequest","endpointOperation","Operation","Identifiers","addApiVersionHeader","removeListener","EventListeners","Core","VALIDATE_PARAMETERS","RETRY_CHECK","put","CachePeriodInMinutes","send","err","data","Endpoints","requestQueue","requiredDiscoverEndpoint","done","cacheKeyStr","EndpointCache","getKeyString","push","callback","response","error","retryable","remove","pendingRequests","requestContext","apiVersion","headers","invalidateCachedEndpoints","httpResponse","code","statusCode","hasCustomEndpoint","client","_originalConfig","endpoint","endpointDiscoveryEnabled","Error","message","svcConfig","serviceIdentifier","Boolean","isFalsy","value","indexOf","resolveEndpointDiscoveryConfig","isBrowser","i","env","prototype","hasOwnProperty","call","process","configFile","iniLoader","loadFrom","isConfig","filename","sharedConfigFileEnv","e","sharedFileConfig","AWS_PROFILE","defaultProfile","endpoint_discovery_enabled","discoverEndpoint","isPresigned","isEndpointDiscoveryRequired","endpointDiscoveryRequired","isEnabled","hasRequiredEndpointDiscovery","appendToUserAgent","addNamedListener","className","module","exports","invalidateCachedEndpoint"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony-Interview-Process/node_modules/aws-sdk/lib/discover_endpoint.js"],"sourcesContent":["var AWS = require('./core');\nvar util = require('./util');\nvar endpointDiscoveryEnabledEnvs = ['AWS_ENABLE_ENDPOINT_DISCOVERY', 'AWS_ENDPOINT_DISCOVERY_ENABLED'];\n\n/**\n * Generate key (except resources and operation part) to index the endpoints in the cache\n * If input shape has endpointdiscoveryid trait then use\n *   accessKey + operation + resources + region + service as cache key\n * If input shape doesn't have endpointdiscoveryid trait then use\n *   accessKey + region + service as cache key\n * @return [map<String,String>] object with keys to index endpoints.\n * @api private\n */\nfunction getCacheKey(request) {\n  var service = request.service;\n  var api = service.api || {};\n  var operations = api.operations;\n  var identifiers = {};\n  if (service.config.region) {\n    identifiers.region = service.config.region;\n  }\n  if (api.serviceId) {\n    identifiers.serviceId = api.serviceId;\n  }\n  if (service.config.credentials.accessKeyId) {\n    identifiers.accessKeyId = service.config.credentials.accessKeyId;\n  }\n  return identifiers;\n}\n\n/**\n * Recursive helper for marshallCustomIdentifiers().\n * Looks for required string input members that have 'endpointdiscoveryid' trait.\n * @api private\n */\nfunction marshallCustomIdentifiersHelper(result, params, shape) {\n  if (!shape || params === undefined || params === null) return;\n  if (shape.type === 'structure' && shape.required && shape.required.length > 0) {\n    util.arrayEach(shape.required, function(name) {\n      var memberShape = shape.members[name];\n      if (memberShape.endpointDiscoveryId === true) {\n        var locationName = memberShape.isLocationName ? memberShape.name : name;\n        result[locationName] = String(params[name]);\n      } else {\n        marshallCustomIdentifiersHelper(result, params[name], memberShape);\n      }\n    });\n  }\n}\n\n/**\n * Get custom identifiers for cache key.\n * Identifies custom identifiers by checking each shape's `endpointDiscoveryId` trait.\n * @param [object] request object\n * @param [object] input shape of the given operation's api\n * @api private\n */\nfunction marshallCustomIdentifiers(request, shape) {\n  var identifiers = {};\n  marshallCustomIdentifiersHelper(identifiers, request.params, shape);\n  return identifiers;\n}\n\n/**\n * Call endpoint discovery operation when it's optional.\n * When endpoint is available in cache then use the cached endpoints. If endpoints\n * are unavailable then use regional endpoints and call endpoint discovery operation\n * asynchronously. This is turned off by default.\n * @param [object] request object\n * @api private\n */\nfunction optionalDiscoverEndpoint(request) {\n  var service = request.service;\n  var api = service.api;\n  var operationModel = api.operations ? api.operations[request.operation] : undefined;\n  var inputShape = operationModel ? operationModel.input : undefined;\n\n  var identifiers = marshallCustomIdentifiers(request, inputShape);\n  var cacheKey = getCacheKey(request);\n  if (Object.keys(identifiers).length > 0) {\n    cacheKey = util.update(cacheKey, identifiers);\n    if (operationModel) cacheKey.operation = operationModel.name;\n  }\n  var endpoints = AWS.endpointCache.get(cacheKey);\n  if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {\n    //endpoint operation is being made but response not yet received\n    //or endpoint operation just failed in 1 minute\n    return;\n  } else if (endpoints && endpoints.length > 0) {\n    //found endpoint record from cache\n    request.httpRequest.updateEndpoint(endpoints[0].Address);\n  } else {\n    //endpoint record not in cache or outdated. make discovery operation\n    var endpointRequest = service.makeRequest(api.endpointOperation, {\n      Operation: operationModel.name,\n      Identifiers: identifiers,\n    });\n    addApiVersionHeader(endpointRequest);\n    endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    endpointRequest.removeListener('retry', AWS.EventListeners.Core.RETRY_CHECK);\n    //put in a placeholder for endpoints already requested, prevent\n    //too much in-flight calls\n    AWS.endpointCache.put(cacheKey, [{\n      Address: '',\n      CachePeriodInMinutes: 1\n    }]);\n    endpointRequest.send(function(err, data) {\n      if (data && data.Endpoints) {\n        AWS.endpointCache.put(cacheKey, data.Endpoints);\n      } else if (err) {\n        AWS.endpointCache.put(cacheKey, [{\n          Address: '',\n          CachePeriodInMinutes: 1 //not to make more endpoint operation in next 1 minute\n        }]);\n      }\n    });\n  }\n}\n\nvar requestQueue = {};\n\n/**\n * Call endpoint discovery operation when it's required.\n * When endpoint is available in cache then use cached ones. If endpoints are\n * unavailable then SDK should call endpoint operation then use returned new\n * endpoint for the api call. SDK will automatically attempt to do endpoint\n * discovery. This is turned off by default\n * @param [object] request object\n * @api private\n */\nfunction requiredDiscoverEndpoint(request, done) {\n  var service = request.service;\n  var api = service.api;\n  var operationModel = api.operations ? api.operations[request.operation] : undefined;\n  var inputShape = operationModel ? operationModel.input : undefined;\n\n  var identifiers = marshallCustomIdentifiers(request, inputShape);\n  var cacheKey = getCacheKey(request);\n  if (Object.keys(identifiers).length > 0) {\n    cacheKey = util.update(cacheKey, identifiers);\n    if (operationModel) cacheKey.operation = operationModel.name;\n  }\n  var cacheKeyStr = AWS.EndpointCache.getKeyString(cacheKey);\n  var endpoints = AWS.endpointCache.get(cacheKeyStr); //endpoint cache also accepts string keys\n  if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {\n    //endpoint operation is being made but response not yet received\n    //push request object to a pending queue\n    if (!requestQueue[cacheKeyStr]) requestQueue[cacheKeyStr] = [];\n    requestQueue[cacheKeyStr].push({request: request, callback: done});\n    return;\n  } else if (endpoints && endpoints.length > 0) {\n    request.httpRequest.updateEndpoint(endpoints[0].Address);\n    done();\n  } else {\n    var endpointRequest = service.makeRequest(api.endpointOperation, {\n      Operation: operationModel.name,\n      Identifiers: identifiers,\n    });\n    endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    addApiVersionHeader(endpointRequest);\n\n    //put in a placeholder for endpoints already requested, prevent\n    //too much in-flight calls\n    AWS.endpointCache.put(cacheKeyStr, [{\n      Address: '',\n      CachePeriodInMinutes: 60 //long-live cache\n    }]);\n    endpointRequest.send(function(err, data) {\n      if (err) {\n        request.response.error = util.error(err, { retryable: false });\n        AWS.endpointCache.remove(cacheKey);\n\n        //fail all the pending requests in batch\n        if (requestQueue[cacheKeyStr]) {\n          var pendingRequests = requestQueue[cacheKeyStr];\n          util.arrayEach(pendingRequests, function(requestContext) {\n            requestContext.request.response.error = util.error(err, { retryable: false });\n            requestContext.callback();\n          });\n          delete requestQueue[cacheKeyStr];\n        }\n      } else if (data) {\n        AWS.endpointCache.put(cacheKeyStr, data.Endpoints);\n        request.httpRequest.updateEndpoint(data.Endpoints[0].Address);\n\n        //update the endpoint for all the pending requests in batch\n        if (requestQueue[cacheKeyStr]) {\n          var pendingRequests = requestQueue[cacheKeyStr];\n          util.arrayEach(pendingRequests, function(requestContext) {\n            requestContext.request.httpRequest.updateEndpoint(data.Endpoints[0].Address);\n            requestContext.callback();\n          });\n          delete requestQueue[cacheKeyStr];\n        }\n      }\n      done();\n    });\n  }\n}\n\n/**\n * add api version header to endpoint operation\n * @api private\n */\nfunction addApiVersionHeader(endpointRequest) {\n  var api = endpointRequest.service.api;\n  var apiVersion = api.apiVersion;\n  if (apiVersion && !endpointRequest.httpRequest.headers['x-amz-api-version']) {\n    endpointRequest.httpRequest.headers['x-amz-api-version'] = apiVersion;\n  }\n}\n\n/**\n * If api call gets invalid endpoint exception, SDK should attempt to remove the invalid\n * endpoint from cache.\n * @api private\n */\nfunction invalidateCachedEndpoints(response) {\n  var error = response.error;\n  var httpResponse = response.httpResponse;\n  if (error &&\n    (error.code === 'InvalidEndpointException' || httpResponse.statusCode === 421)\n  ) {\n    var request = response.request;\n    var operations = request.service.api.operations || {};\n    var inputShape = operations[request.operation] ? operations[request.operation].input : undefined;\n    var identifiers = marshallCustomIdentifiers(request, inputShape);\n    var cacheKey = getCacheKey(request);\n    if (Object.keys(identifiers).length > 0) {\n      cacheKey = util.update(cacheKey, identifiers);\n      if (operations[request.operation]) cacheKey.operation = operations[request.operation].name;\n    }\n    AWS.endpointCache.remove(cacheKey);\n  }\n}\n\n/**\n * If endpoint is explicitly configured, SDK should not do endpoint discovery in anytime.\n * @param [object] client Service client object.\n * @api private\n */\nfunction hasCustomEndpoint(client) {\n  //if set endpoint is set for specific client, enable endpoint discovery will raise an error.\n  if (client._originalConfig && client._originalConfig.endpoint && client._originalConfig.endpointDiscoveryEnabled === true) {\n    throw util.error(new Error(), {\n      code: 'ConfigurationException',\n      message: 'Custom endpoint is supplied; endpointDiscoveryEnabled must not be true.'\n    });\n  };\n  var svcConfig = AWS.config[client.serviceIdentifier] || {};\n  return Boolean(AWS.config.endpoint || svcConfig.endpoint || (client._originalConfig && client._originalConfig.endpoint));\n}\n\n/**\n * @api private\n */\nfunction isFalsy(value) {\n  return ['false', '0'].indexOf(value) >= 0;\n}\n\n/**\n * If endpoint discovery should perform for this request when no operation requires endpoint\n * discovery for the given service.\n * SDK performs config resolution in order like below:\n * 1. If set in client configuration.\n * 2. If set in env AWS_ENABLE_ENDPOINT_DISCOVERY.\n * 3. If set in shared ini config file with key 'endpoint_discovery_enabled'.\n * @param [object] request request object.\n * @returns [boolean|undefined] if endpoint discovery config is not set in any source, this\n *  function returns undefined\n * @api private\n */\nfunction resolveEndpointDiscoveryConfig(request) {\n  var service = request.service || {};\n  if (service.config.endpointDiscoveryEnabled !== undefined) {\n    return service.config.endpointDiscoveryEnabled;\n  }\n\n  //shared ini file is only available in Node\n  //not to check env in browser\n  if (util.isBrowser()) return undefined;\n\n  // If any of recognized endpoint discovery config env is set\n  for (var i = 0; i < endpointDiscoveryEnabledEnvs.length; i++) {\n    var env = endpointDiscoveryEnabledEnvs[i];\n    if (Object.prototype.hasOwnProperty.call(process.env, env)) {\n      if (process.env[env] === '' || process.env[env] === undefined) {\n        throw util.error(new Error(), {\n          code: 'ConfigurationException',\n          message: 'environmental variable ' + env + ' cannot be set to nothing'\n        });\n      }\n      return !isFalsy(process.env[env]);\n    }\n  }\n\n  var configFile = {};\n  try {\n    configFile = AWS.util.iniLoader ? AWS.util.iniLoader.loadFrom({\n      isConfig: true,\n      filename: process.env[AWS.util.sharedConfigFileEnv]\n    }) : {};\n  } catch (e) {}\n  var sharedFileConfig = configFile[\n    process.env.AWS_PROFILE || AWS.util.defaultProfile\n  ] || {};\n  if (Object.prototype.hasOwnProperty.call(sharedFileConfig, 'endpoint_discovery_enabled')) {\n    if (sharedFileConfig.endpoint_discovery_enabled === undefined) {\n      throw util.error(new Error(), {\n        code: 'ConfigurationException',\n        message: 'config file entry \\'endpoint_discovery_enabled\\' cannot be set to nothing'\n      });\n    }\n    return !isFalsy(sharedFileConfig.endpoint_discovery_enabled);\n  }\n  return undefined;\n}\n\n/**\n * attach endpoint discovery logic to request object\n * @param [object] request\n * @api private\n */\nfunction discoverEndpoint(request, done) {\n  var service = request.service || {};\n  if (hasCustomEndpoint(service) || request.isPresigned()) return done();\n\n  var operations = service.api.operations || {};\n  var operationModel = operations[request.operation];\n  var isEndpointDiscoveryRequired = operationModel ? operationModel.endpointDiscoveryRequired : 'NULL';\n  var isEnabled = resolveEndpointDiscoveryConfig(request);\n  var hasRequiredEndpointDiscovery = service.api.hasRequiredEndpointDiscovery;\n  if (isEnabled || hasRequiredEndpointDiscovery) {\n    // Once a customer enables endpoint discovery, the SDK should start appending\n    // the string endpoint-discovery to the user-agent on all requests.\n    request.httpRequest.appendToUserAgent('endpoint-discovery');\n  }\n  switch (isEndpointDiscoveryRequired) {\n    case 'OPTIONAL':\n      if (isEnabled || hasRequiredEndpointDiscovery) {\n        // For a given service; if at least one operation requires endpoint discovery then the SDK must enable endpoint discovery\n        // by default for all operations of that service, including operations where endpoint discovery is optional.\n        optionalDiscoverEndpoint(request);\n        request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);\n      }\n      done();\n      break;\n    case 'REQUIRED':\n      if (isEnabled === false) {\n        // For a given operation; if endpoint discovery is required and it has been disabled on the SDK client,\n        // then the SDK must return a clear and actionable exception.\n        request.response.error = util.error(new Error(), {\n          code: 'ConfigurationException',\n          message: 'Endpoint Discovery is disabled but ' + service.api.className + '.' + request.operation +\n                    '() requires it. Please check your configurations.'\n        });\n        done();\n        break;\n      }\n      request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);\n      requiredDiscoverEndpoint(request, done);\n      break;\n    case 'NULL':\n    default:\n      done();\n      break;\n  }\n}\n\nmodule.exports = {\n  discoverEndpoint: discoverEndpoint,\n  requiredDiscoverEndpoint: requiredDiscoverEndpoint,\n  optionalDiscoverEndpoint: optionalDiscoverEndpoint,\n  marshallCustomIdentifiers: marshallCustomIdentifiers,\n  getCacheKey: getCacheKey,\n  invalidateCachedEndpoint: invalidateCachedEndpoints,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}